[
  {
    "line": 1,
    "elements": [
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3974000000,
              "status": "passed"
            },
            "line": 4,
            "name": "my device is registered as a Thing",
            "match": {
              "location": "com.aws.greengrass.testing.features.RegistrationSteps.registerAsThing()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2651000000,
              "status": "passed"
            },
            "line": 5,
            "name": "my device is running Greengrass",
            "match": {
              "location": "com.aws.greengrass.testing.features.GreengrassSteps.start()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2023-03-30T01:52:23.834Z",
        "before": [
          {
            "result": {
              "duration": 10681000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.LoggerSteps.addContext(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 8,
        "name": "As a developer, I can create a component in Cloud and deploy it on my device",
        "description": "",
        "id": "testing-cloud-component-in-greengrass;as-a-developer--i-can-create-a-component-in-cloud-and-deploy-it-on-my-device",
        "after": [
          {
            "result": {
              "duration": 328138000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.DeploymentSteps.cleanupDeployments()"
            }
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.mqtt.MQTTSteps.disconnect()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.GreengrassSteps.close()"
            }
          },
          {
            "embeddings": [
              {
                "data": "",
                "mime_type": "text/plain",
                "name": "main.log"
              },
              {
                "data": "MjAyMy0wMy0zMFQwMTo1MDo1OS40MDZaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0zMykgaWR0LWdndjItbGFtYmRhLWZ1bmN0aW9uLWlkdC04MjIwNDM4ODEwOTU2NjYzMDA2OiBzaGVsbC1ydW5uZXItc3RhcnQuIHtzY3JpcHROYW1lPXNlcnZpY2VzLmlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODIyMDQzODgxMDk1NjY2MzAwNi5saWZlY3ljbGUuc3RhcnR1cC5zY3JpcHQsIHNlcnZpY2VJbnN0YW5jZT0xLCBzZXJ2aWNlTmFtZT1pZHQtZ2d2Mi1sYW1iZGEtZnVuY3Rpb24taWR0LTgyMjA0Mzg4MTA5NTY2NjMwMDYsIGN1cnJlbnRTdGF0ZT1TVEFSVElORywgY29tbWFuZD1bIi90ZXN0L2dyZWVuZ3Jhc3MvdjIvcGFja2FnZXMvYXJ0aWZhY3RzL2F3cy5ncmVlbmdyYXNzLkxhbWJkYUxhdW5jaGVyLzIuMC4xMC9sYS4uLiJdfQoyMDIzLTAzLTMwVDAxOjUwOjU5LjUyNVogW0lORk9dIChDb3BpZXIpIGlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODIyMDQzODgxMDk1NjY2MzAwNjogc3Rkb3V0LiBTdGFydGVkIHByb2Nlc3M6IDE0OTY1Mi4ge3NjcmlwdE5hbWU9c2VydmljZXMuaWR0LWdndjItbGFtYmRhLWZ1bmN0aW9uLWlkdC04MjIwNDM4ODEwOTU2NjYzMDA2LmxpZmVjeWNsZS5zdGFydHVwLnNjcmlwdCwgc2VydmljZUluc3RhbmNlPTEsIHNlcnZpY2VOYW1lPWlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODIyMDQzODgxMDk1NjY2MzAwNiwgY3VycmVudFN0YXRlPVNUQVJUSU5HfQoyMDIzLTAzLTMwVDAxOjUwOjU5LjUzMlogW0lORk9dIChDb3BpZXIpIGlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODIyMDQzODgxMDk1NjY2MzAwNjogU3RhcnR1cCBzY3JpcHQgZXhpdGVkLiB7ZXhpdENvZGU9MCwgc2VydmljZUluc3RhbmNlPTEsIHNlcnZpY2VOYW1lPWlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODIyMDQzODgxMDk1NjY2MzAwNiwgY3VycmVudFN0YXRlPVNUQVJUSU5HfQoyMDIzLTAzLTMwVDAxOjUxOjAyLjMwNFogW0lORk9dIChwb29sLTItdGhyZWFkLTM2KSBpZHQtZ2d2Mi1sYW1iZGEtZnVuY3Rpb24taWR0LTgyMjA0Mzg4MTA5NTY2NjMwMDY6IElkdFF1YWxpZmljYXRpb25MYW1iZGEgbG9hZGVkLi4uLi4ge3NlcnZpY2VJbnN0YW5jZT0xLCBzZXJ2aWNlTmFtZT1pZHQtZ2d2Mi1sYW1iZGEtZnVuY3Rpb24taWR0LTgyMjA0Mzg4MTA5NTY2NjMwMDYsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTAzLTMwVDAxOjUxOjAzLjI2M1ogW0lORk9dIChwb29sLTItdGhyZWFkLTM2KSBpZHQtZ2d2Mi1sYW1iZGEtZnVuY3Rpb24taWR0LTgyMjA0Mzg4MTA5NTY2NjMwMDY6IElkdFF1YWxpZmljYXRpb25MYW1iZGEgTGFtYmRhIFRyaWdnZXJlZC4ge3NlcnZpY2VJbnN0YW5jZT0xLCBzZXJ2aWNlTmFtZT1pZHQtZ2d2Mi1sYW1iZGEtZnVuY3Rpb24taWR0LTgyMjA0Mzg4MTA5NTY2NjMwMDYsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTAzLTMwVDAxOjUxOjAzLjI2NVogW0lORk9dIChwb29sLTItdGhyZWFkLTM2KSBpZHQtZ2d2Mi1sYW1iZGEtZnVuY3Rpb24taWR0LTgyMjA0Mzg4MTA5NTY2NjMwMDY6IElkdFF1YWxpZmljYXRpb25MYW1iZGEgcmVjZWl2ZWQgZXZlbnQge0xhbWJkYUlucHV0SW50RmllbGQ9MTAsIHBheWxvYWQ9bGFtYmRhLXF1YWxpZmljYXRpb24tcGF5bG9hZH0uIHtzZXJ2aWNlSW5zdGFuY2U9MSwgc2VydmljZU5hbWU9aWR0LWdndjItbGFtYmRhLWZ1bmN0aW9uLWlkdC04MjIwNDM4ODEwOTU2NjYzMDA2LCBjdXJyZW50U3RhdGU9UlVOTklOR30KMjAyMy0wMy0zMFQwMTo1MTowMy4yNjZaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0zNikgaWR0LWdndjItbGFtYmRhLWZ1bmN0aW9uLWlkdC04MjIwNDM4ODEwOTU2NjYzMDA2OiBJZHRRdWFsaWZpY2F0aW9uTGFtYmRhIHJlY2VpdmVkIGV2ZW50IFBheWxvYWQgOiBsYW1iZGEtcXVhbGlmaWNhdGlvbi1wYXlsb2FkLiB7c2VydmljZUluc3RhbmNlPTEsIHNlcnZpY2VOYW1lPWlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODIyMDQzODgxMDk1NjY2MzAwNiwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDMtMzBUMDE6NTM6MzguODA1WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtNDcpIGlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODIyMDQzODgxMDk1NjY2MzAwNjogc2hlbGwtcnVubmVyLXN0YXJ0LiB7c2NyaXB0TmFtZT1zZXJ2aWNlcy5pZHQtZ2d2Mi1sYW1iZGEtZnVuY3Rpb24taWR0LTgyMjA0Mzg4MTA5NTY2NjMwMDYubGlmZWN5Y2xlLnNodXRkb3duLnNjcmlwdCwgc2VydmljZUluc3RhbmNlPTEsIHNlcnZpY2VOYW1lPWlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODIyMDQzODgxMDk1NjY2MzAwNiwgY3VycmVudFN0YXRlPVNUT1BQSU5HLCBjb21tYW5kPVsiL3Rlc3QvZ3JlZW5ncmFzcy92Mi9wYWNrYWdlcy9hcnRpZmFjdHMvYXdzLmdyZWVuZ3Jhc3MuTGFtYmRhTGF1bmNoZXIvMi4wLjEwL2xhLi4uIl19CjIwMjMtMDMtMzBUMDE6NTM6MzguOTAzWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMzYpIGlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODIyMDQzODgxMDk1NjY2MzAwNjogU2h1dGRvd24gaG9vayBmb3IgamF2YSBydW50aW1lIGludm9rZWQuIFRlcm1pbmF0aW5nIGphdmEgcnVudGltZS4ge3NlcnZpY2VJbnN0YW5jZT0xLCBzZXJ2aWNlTmFtZT1pZHQtZ2d2Mi1sYW1iZGEtZnVuY3Rpb24taWR0LTgyMjA0Mzg4MTA5NTY2NjMwMDYsIGN1cnJlbnRTdGF0ZT1TVE9QUElOR30K",
                "mime_type": "text/plain",
                "name": "idt-ggv2-lambda-function-idt-8220438810956663006.log"
              },
              {
                "data": "",
                "mime_type": "text/plain",
                "name": "aws.greengrass.LambdaLauncher.log"
              },
              {
                "data": "MjAyMy0wMy0zMFQwMjowMDo1MC43OTBaIFtXQVJOXSAoVGhyZWFkLTEpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLktlcm5lbDogU2h1dHRpbmcgZG93biBOdWNsZXVzIGR1ZSB0byBleHRlcm5hbCBzaWduYWwuIHt9CjIwMjMtMDMtMzBUMDI6MDA6NTAuNzk2WiBbSU5GT10gKFRocmVhZC0xKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5LZXJuZWxMaWZlY3ljbGU6IHN5c3RlbS1zaHV0ZG93bi4ge21haW49c2VydmljZXMubWFpbjpGSU5JU0hFRH0KMjAyMy0wMy0zMFQwMjowMDo1MC44MDBaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xOSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuR2VuZXJpY0V4dGVybmFsU2VydmljZTogc2VydmljZS1jbG9zZS4gU2VydmljZSBpcyBub3cgY2xvc2luZy4ge3NlcnZpY2VOYW1lPW1haW4sIGN1cnJlbnRTdGF0ZT1GSU5JU0hFRH0KMjAyMy0wMy0zMFQwMjowMDo1MC44MDNaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xMCkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuR2VuZXJpY0V4dGVybmFsU2VydmljZTogc2VydmljZS1jbG9zZS4gU2VydmljZSBpcyBub3cgY2xvc2luZy4ge3NlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLkxvY2FsSGVsbG9Xb3JsZCwgY3VycmVudFN0YXRlPUZJTklTSEVEfQoyMDIzLTAzLTMwVDAyOjAwOjUwLjgwNFogW0lORk9dIChwb29sLTItdGhyZWFkLTE5KSBjb20uYXdzLmdyZWVuZ3Jhc3MudGVsZW1ldHJ5LlRlbGVtZXRyeUFnZW50OiBzZXJ2aWNlLWNsb3NlLiBTZXJ2aWNlIGlzIG5vdyBjbG9zaW5nLiB7c2VydmljZU5hbWU9VGVsZW1ldHJ5QWdlbnQsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTAzLTMwVDAyOjAwOjUwLjgwN1ogW0lORk9dIChwb29sLTItdGhyZWFkLTIwKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5HZW5lcmljRXh0ZXJuYWxTZXJ2aWNlOiBzZXJ2aWNlLWNsb3NlLiBTZXJ2aWNlIGlzIG5vdyBjbG9zaW5nLiB7c2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuTnVjbGV1cywgY3VycmVudFN0YXRlPUZJTklTSEVEfQoyMDIzLTAzLTMwVDAyOjAwOjUwLjgwOFogW0lORk9dIChUZWxlbWV0cnlBZ2VudC1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy50ZWxlbWV0cnkuVGVsZW1ldHJ5QWdlbnQ6IHNlcnZpY2Utc2V0LXN0YXRlLiB7c2VydmljZU5hbWU9VGVsZW1ldHJ5QWdlbnQsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HLCBuZXdTdGF0ZT1TVE9QUElOR30KMjAyMy0wMy0zMFQwMjowMDo1MC44MTlaIFtJTkZPXSAoVGhyZWFkLTEpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLktlcm5lbExpZmVjeWNsZTogV2FpdGluZyBmb3Igc2VydmljZXMgdG8gc2h1dGRvd24uIHt9CjIwMjMtMDMtMzBUMDI6MDA6NTAuODE5WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMjIpIGNvbS5hd3MuZ3JlZW5ncmFzcy50ZWxlbWV0cnkuVGVsZW1ldHJ5QWdlbnQ6IENhbmNlbGxpbmcgYWxsIHRlbGVtZXRyeSBzY2hlZHVsZWQgdGFza3MuLiB7c2VydmljZU5hbWU9VGVsZW1ldHJ5QWdlbnQsIGN1cnJlbnRTdGF0ZT1TVE9QUElOR30KMjAyMy0wMy0zMFQwMjowMDo1MC44MjBaIFtJTkZPXSAoVGVsZW1ldHJ5QWdlbnQtbGlmZWN5Y2xlKSBjb20uYXdzLmdyZWVuZ3Jhc3MudGVsZW1ldHJ5LlRlbGVtZXRyeUFnZW50OiBzZXJ2aWNlLXNldC1zdGF0ZS4ge3NlcnZpY2VOYW1lPVRlbGVtZXRyeUFnZW50LCBjdXJyZW50U3RhdGU9U1RPUFBJTkcsIG5ld1N0YXRlPUZJTklTSEVEfQoyMDIzLTAzLTMwVDAyOjAwOjUwLjgyNFogW0lORk9dIChwb29sLTItdGhyZWFkLTUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5zdGF0dXMuRmxlZXRTdGF0dXNTZXJ2aWNlOiBzZXJ2aWNlLWNsb3NlLiBTZXJ2aWNlIGlzIG5vdyBjbG9zaW5nLiB7c2VydmljZU5hbWU9RmxlZXRTdGF0dXNTZXJ2aWNlLCBjdXJyZW50U3RhdGU9UlVOTklOR30KMjAyMy0wMy0zMFQwMjowMDo1MC44MjVaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xMCkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuVXBkYXRlU3lzdGVtUG9saWN5U2VydmljZTogc2VydmljZS1jbG9zZS4gU2VydmljZSBpcyBub3cgY2xvc2luZy4ge3NlcnZpY2VOYW1lPVVwZGF0ZVN5c3RlbVBvbGljeVNlcnZpY2UsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTAzLTMwVDAyOjAwOjUwLjgyNVogW0lORk9dIChGbGVldFN0YXR1c1NlcnZpY2UtbGlmZWN5Y2xlKSBjb20uYXdzLmdyZWVuZ3Jhc3Muc3RhdHVzLkZsZWV0U3RhdHVzU2VydmljZTogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1GbGVldFN0YXR1c1NlcnZpY2UsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HLCBuZXdTdGF0ZT1TVE9QUElOR30KMjAyMy0wMy0zMFQwMjowMDo1MC44MjdaIFtJTkZPXSAoVXBkYXRlU3lzdGVtUG9saWN5U2VydmljZS1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLlVwZGF0ZVN5c3RlbVBvbGljeVNlcnZpY2U6IHNlcnZpY2Utc2V0LXN0YXRlLiB7c2VydmljZU5hbWU9VXBkYXRlU3lzdGVtUG9saWN5U2VydmljZSwgY3VycmVudFN0YXRlPVJVTk5JTkcsIG5ld1N0YXRlPVNUT1BQSU5HfQoyMDIzLTAzLTMwVDAyOjAwOjUwLjgyNFogW0lORk9dIChwb29sLTItdGhyZWFkLTIxKSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5EZXBsb3ltZW50U2VydmljZTogc2VydmljZS1jbG9zZS4gU2VydmljZSBpcyBub3cgY2xvc2luZy4ge3NlcnZpY2VOYW1lPURlcGxveW1lbnRTZXJ2aWNlLCBjdXJyZW50U3RhdGU9UlVOTklOR30KMjAyMy0wMy0zMFQwMjowMDo1MC44MjlaIFtJTkZPXSAoVXBkYXRlU3lzdGVtUG9saWN5U2VydmljZS1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLlVwZGF0ZVN5c3RlbVBvbGljeVNlcnZpY2U6IFN0b3BwaW5nIGJhY2tpbmdUYXNrIHN0YXJ0LiB7c2VydmljZU5hbWU9VXBkYXRlU3lzdGVtUG9saWN5U2VydmljZSwgY3VycmVudFN0YXRlPVNUT1BQSU5HfQoyMDIzLTAzLTMwVDAyOjAwOjUwLjgzMFogW0lORk9dIChVcGRhdGVTeXN0ZW1Qb2xpY3lTZXJ2aWNlLWxpZmVjeWNsZSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuVXBkYXRlU3lzdGVtUG9saWN5U2VydmljZTogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1VcGRhdGVTeXN0ZW1Qb2xpY3lTZXJ2aWNlLCBjdXJyZW50U3RhdGU9U1RPUFBJTkcsIG5ld1N0YXRlPUZJTklTSEVEfQoyMDIzLTAzLTMwVDAyOjAwOjUwLjgzMVogW1dBUk5dIChwb29sLTItdGhyZWFkLTE0KSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5VcGRhdGVTeXN0ZW1Qb2xpY3lTZXJ2aWNlOiBzZXJ2aWNlLXJ1bi1pbnRlcnJ1cHRlZC4gU2VydmljZSBpbnRlcnJ1cHRlZCB3aGlsZSBydW5uaW5nIHN0YXJ0dXAuIHtzZXJ2aWNlTmFtZT1VcGRhdGVTeXN0ZW1Qb2xpY3lTZXJ2aWNlLCBjdXJyZW50U3RhdGU9RklOSVNIRUR9CjIwMjMtMDMtMzBUMDI6MDA6NTAuODMzWiBbSU5GT10gKEZsZWV0U3RhdHVzU2VydmljZS1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5zdGF0dXMuRmxlZXRTdGF0dXNTZXJ2aWNlOiBzZXJ2aWNlLXNldC1zdGF0ZS4ge3NlcnZpY2VOYW1lPUZsZWV0U3RhdHVzU2VydmljZSwgY3VycmVudFN0YXRlPVNUT1BQSU5HLCBuZXdTdGF0ZT1GSU5JU0hFRH0KMjAyMy0wMy0zMFQwMjowMDo1MC44MzRaIFtJTkZPXSAoRGVwbG95bWVudFNlcnZpY2UtbGlmZWN5Y2xlKSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5EZXBsb3ltZW50U2VydmljZTogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1EZXBsb3ltZW50U2VydmljZSwgY3VycmVudFN0YXRlPVJVTk5JTkcsIG5ld1N0YXRlPVNUT1BQSU5HfQoyMDIzLTAzLTMwVDAyOjAwOjUwLjgzNVogW0lORk9dIChEZXBsb3ltZW50U2VydmljZS1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5kZXBsb3ltZW50LkRlcGxveW1lbnRTZXJ2aWNlOiBTdG9wcGluZyBiYWNraW5nVGFzayBzdGFydC4ge3NlcnZpY2VOYW1lPURlcGxveW1lbnRTZXJ2aWNlLCBjdXJyZW50U3RhdGU9U1RPUFBJTkd9CjIwMjMtMDMtMzBUMDI6MDA6NTAuODM2WiBbSU5GT10gKERlcGxveW1lbnRTZXJ2aWNlLWxpZmVjeWNsZSkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudFNlcnZpY2U6IHNlcnZpY2Utc2V0LXN0YXRlLiB7c2VydmljZU5hbWU9RGVwbG95bWVudFNlcnZpY2UsIGN1cnJlbnRTdGF0ZT1TVE9QUElORywgbmV3U3RhdGU9RklOSVNIRUR9CjIwMjMtMDMtMzBUMDI6MDA6NTAuODM2WiBbV0FSTl0gKHBvb2wtMi10aHJlYWQtMTgpIGNvbS5hd3MuZ3JlZW5ncmFzcy5kZXBsb3ltZW50LkRlcGxveW1lbnRTZXJ2aWNlOiBzZXJ2aWNlLXJ1bi1pbnRlcnJ1cHRlZC4gU2VydmljZSBpbnRlcnJ1cHRlZCB3aGlsZSBydW5uaW5nIHN0YXJ0dXAuIHtzZXJ2aWNlTmFtZT1EZXBsb3ltZW50U2VydmljZSwgY3VycmVudFN0YXRlPVNUT1BQSU5HfQoyMDIzLTAzLTMwVDAyOjAwOjUwLjg4MFogW0lORk9dIChUaHJlYWQtMSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuS2VybmVsOiBlZmZlY3RpdmUtY29uZmlnLWR1bXAtY29tcGxldGUuIHtmaWxlPS90ZXN0L2dyZWVuZ3Jhc3MvdjIvY29uZmlnL2VmZmVjdGl2ZUNvbmZpZy55YW1sfQoyMDIzLTAzLTMwVDAyOjAwOjUwLjg4M1ogW1dBUk5dIChwb29sLTItdGhyZWFkLTE2KSBjb20uYXdzLmdyZWVuZ3Jhc3MubXF0dGNsaWVudC5NcXR0Q2xpZW50OiBTaHV0dGluZyBkb3duIHNwb29sZXIgdGFzay4ge30KMjAyMy0wMy0zMFQwMjowMDo1MC44ODRaIFtJTkZPXSAoU2VyaWFsaXplZCBsaXN0ZW5lciBwcm9jZXNzb3IpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLktlcm5lbExpZmVjeWNsZTogZXhlY3V0b3Itc2VydmljZS1zaHV0ZG93bi1pbml0aWF0ZWQuIHt9CjIwMjMtMDMtMzBUMDI6MDA6NTAuODg1WiBbSU5GT10gKFRocmVhZC0xKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5LZXJuZWxMaWZlY3ljbGU6IFdhaXRpbmcgZm9yIGV4ZWN1dG9ycyB0byBzaHV0ZG93bi4ge30KMjAyMy0wMy0zMFQwMjowMDo1MC44OTFaIFtJTkZPXSAoVGhyZWFkLTEpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLktlcm5lbExpZmVjeWNsZTogZXhlY3V0b3Itc2VydmljZS1zaHV0ZG93bi1jb21wbGV0ZS4ge2V4ZWN1dG9yLXRlcm1pbmF0ZWQ9dHJ1ZSwgc2NoZWR1bGVkLWV4ZWN1dG9yLXRlcm1pbmF0ZWQ9dHJ1ZX0KMjAyMy0wMy0zMFQwMjowMDo1MC44OTJaIFtJTkZPXSAoVGhyZWFkLTEpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLktlcm5lbExpZmVjeWNsZTogY29udGV4dC1zaHV0ZG93bi1pbml0aWF0ZWQuIHt9CjIwMjMtMDMtMzBUMDI6MDA6NTAuOTAwWiBbSU5GT10gKFRocmVhZC0xKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5LZXJuZWxMaWZlY3ljbGU6IGNvbnRleHQtc2h1dGRvd24tY29tcGxldGUuIHt9Cg\u003d\u003d",
                "mime_type": "text/plain",
                "name": "greengrass.log"
              },
              {
                "data": "MjAyMy0wMy0zMFQwMTo0MDozNi4zNjBaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNCkgYXdzLmdyZWVuZ3Jhc3MuTG9jYWxIZWxsb1dvcmxkOiBzaGVsbC1ydW5uZXItc3RhcnQuIHtzY3JpcHROYW1lPXNlcnZpY2VzLmF3cy5ncmVlbmdyYXNzLkxvY2FsSGVsbG9Xb3JsZC5saWZlY3ljbGUuUnVuLCBzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Mb2NhbEhlbGxvV29ybGQsIGN1cnJlbnRTdGF0ZT1TVEFSVElORywgY29tbWFuZD1bImphdmEgLURjb21wb25lbnROYW1lPVx1MDAyMkhlbGxvV29ybGRcdTAwMjIgLWphciAvdGVzdC9ncmVlbmdyYXNzL3YyL3BhY2thZ2VzL2FydGlmYWN0cy8uLi4iXX0KMjAyMy0wMy0zMFQwMTo0MDozNi42MDZaIFtJTkZPXSAoQ29waWVyKSBhd3MuZ3JlZW5ncmFzcy5Mb2NhbEhlbGxvV29ybGQ6IHN0ZG91dC4gSGVsbG8gV29ybGQhIS4ge3NjcmlwdE5hbWU9c2VydmljZXMuYXdzLmdyZWVuZ3Jhc3MuTG9jYWxIZWxsb1dvcmxkLmxpZmVjeWNsZS5SdW4sIHNlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLkxvY2FsSGVsbG9Xb3JsZCwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDMtMzBUMDE6NDA6MzYuNjIyWiBbSU5GT10gKENvcGllcikgYXdzLmdyZWVuZ3Jhc3MuTG9jYWxIZWxsb1dvcmxkOiBSdW4gc2NyaXB0IGV4aXRlZC4ge2V4aXRDb2RlPTAsIHNlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLkxvY2FsSGVsbG9Xb3JsZCwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDMtMzBUMDE6NTQ6MTguNzEyWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTMpIGF3cy5ncmVlbmdyYXNzLkxvY2FsSGVsbG9Xb3JsZDogc2hlbGwtcnVubmVyLXN0YXJ0LiB7c2NyaXB0TmFtZT1zZXJ2aWNlcy5hd3MuZ3JlZW5ncmFzcy5Mb2NhbEhlbGxvV29ybGQubGlmZWN5Y2xlLlJ1biwgc2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuTG9jYWxIZWxsb1dvcmxkLCBjdXJyZW50U3RhdGU9U1RBUlRJTkcsIGNvbW1hbmQ9WyJqYXZhIC1EY29tcG9uZW50TmFtZT1cdTAwMjJIZWxsb1dvcmxkXHUwMDIyIC1qYXIgL3Rlc3QvZ3JlZW5ncmFzcy92Mi9wYWNrYWdlcy9hcnRpZmFjdHMvLi4uIl19CjIwMjMtMDMtMzBUMDE6NTQ6MTkuMTk0WiBbSU5GT10gKENvcGllcikgYXdzLmdyZWVuZ3Jhc3MuTG9jYWxIZWxsb1dvcmxkOiBzdGRvdXQuIEhlbGxvIFdvcmxkISEuIHtzY3JpcHROYW1lPXNlcnZpY2VzLmF3cy5ncmVlbmdyYXNzLkxvY2FsSGVsbG9Xb3JsZC5saWZlY3ljbGUuUnVuLCBzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Mb2NhbEhlbGxvV29ybGQsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTAzLTMwVDAxOjU0OjE5LjIyMVogW0lORk9dIChDb3BpZXIpIGF3cy5ncmVlbmdyYXNzLkxvY2FsSGVsbG9Xb3JsZDogUnVuIHNjcmlwdCBleGl0ZWQuIHtleGl0Q29kZT0wLCBzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Mb2NhbEhlbGxvV29ybGQsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQo\u003d",
                "mime_type": "text/plain",
                "name": "aws.greengrass.LocalHelloWorld.log"
              },
              {
                "data": "MjAyMy0wMy0zMFQwMTo1Mzo0MC44MThaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xOSkgY29tLmF3cy5IZWxsb1dvcmxkOiBzaGVsbC1ydW5uZXItc3RhcnQuIHtzY3JpcHROYW1lPXNlcnZpY2VzLmNvbS5hd3MuSGVsbG9Xb3JsZC5saWZlY3ljbGUuUnVuLCBzZXJ2aWNlTmFtZT1jb20uYXdzLkhlbGxvV29ybGQsIGN1cnJlbnRTdGF0ZT1TVE9QUElORywgY29tbWFuZD1bImphdmEgLURjb21wb25lbnROYW1lPVx1MDAyMkhlbGxvV29ybGRcdTAwMjIgLWphciAvdGVzdC9ncmVlbmdyYXNzL3YyL3BhY2thZ2VzL2FydGlmYWN0cy0uLi4iXX0KMjAyMy0wMy0zMFQwMTo1Mzo0MS4wNzJaIFtJTkZPXSAoQ29waWVyKSBjb20uYXdzLkhlbGxvV29ybGQ6IHN0ZG91dC4gSGVsbG8gV29ybGQhIS4ge3NjcmlwdE5hbWU9c2VydmljZXMuY29tLmF3cy5IZWxsb1dvcmxkLmxpZmVjeWNsZS5SdW4sIHNlcnZpY2VOYW1lPWNvbS5hd3MuSGVsbG9Xb3JsZCwgY3VycmVudFN0YXRlPVNUT1BQSU5HfQoyMDIzLTAzLTMwVDAxOjUzOjQxLjM0NFogW0lORk9dIChDb3BpZXIpIGNvbS5hd3MuSGVsbG9Xb3JsZDogUnVuIHNjcmlwdCBleGl0ZWQuIHtleGl0Q29kZT0wLCBzZXJ2aWNlTmFtZT1jb20uYXdzLkhlbGxvV29ybGQsIGN1cnJlbnRTdGF0ZT1GSU5JU0hFRH0KMjAyMy0wMy0zMFQwMTo1NDoxOC43MTZaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNSkgY29tLmF3cy5IZWxsb1dvcmxkOiBzaGVsbC1ydW5uZXItc3RhcnQuIHtzY3JpcHROYW1lPXNlcnZpY2VzLmNvbS5hd3MuSGVsbG9Xb3JsZC5saWZlY3ljbGUuUnVuLCBzZXJ2aWNlTmFtZT1jb20uYXdzLkhlbGxvV29ybGQsIGN1cnJlbnRTdGF0ZT1TVEFSVElORywgY29tbWFuZD1bImphdmEgLURjb21wb25lbnROYW1lPVx1MDAyMkhlbGxvV29ybGRcdTAwMjIgLWphciAvdGVzdC9ncmVlbmdyYXNzL3YyL3BhY2thZ2VzL2FydGlmYWN0cy0uLi4iXX0KMjAyMy0wMy0zMFQwMTo1NDoxOS4xMDFaIFtJTkZPXSAoQ29waWVyKSBjb20uYXdzLkhlbGxvV29ybGQ6IHN0ZG91dC4gSGVsbG8gV29ybGQhIS4ge3NjcmlwdE5hbWU9c2VydmljZXMuY29tLmF3cy5IZWxsb1dvcmxkLmxpZmVjeWNsZS5SdW4sIHNlcnZpY2VOYW1lPWNvbS5hd3MuSGVsbG9Xb3JsZCwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDMtMzBUMDE6NTQ6MTkuMTI3WiBbSU5GT10gKENvcGllcikgY29tLmF3cy5IZWxsb1dvcmxkOiBSdW4gc2NyaXB0IGV4aXRlZC4ge2V4aXRDb2RlPTAsIHNlcnZpY2VOYW1lPWNvbS5hd3MuSGVsbG9Xb3JsZCwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDMtMzBUMDE6NTU6MTIuNjAxWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTMpIGNvbS5hd3MuSGVsbG9Xb3JsZDogc2hlbGwtcnVubmVyLXN0YXJ0LiB7c2NyaXB0TmFtZT1zZXJ2aWNlcy5jb20uYXdzLkhlbGxvV29ybGQubGlmZWN5Y2xlLlJ1biwgc2VydmljZU5hbWU9Y29tLmF3cy5IZWxsb1dvcmxkLCBjdXJyZW50U3RhdGU9U1RBUlRJTkcsIGNvbW1hbmQ9WyJqYXZhIC1EY29tcG9uZW50TmFtZT1cdTAwMjJIZWxsb1dvcmxkVXBkYXRlZFx1MDAyMiAtamFyIC90ZXN0L2dyZWVuZ3Jhc3MvdjIvcGFja2FnZXMvYXJ0Li4uIl19CjIwMjMtMDMtMzBUMDE6NTU6MTIuODAxWiBbSU5GT10gKENvcGllcikgY29tLmF3cy5IZWxsb1dvcmxkOiBzdGRvdXQuIEhlbGxvIFdvcmxkIFVwZGF0ZWQhIS4ge3NjcmlwdE5hbWU9c2VydmljZXMuY29tLmF3cy5IZWxsb1dvcmxkLmxpZmVjeWNsZS5SdW4sIHNlcnZpY2VOYW1lPWNvbS5hd3MuSGVsbG9Xb3JsZCwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDMtMzBUMDE6NTU6MTIuODI1WiBbSU5GT10gKENvcGllcikgY29tLmF3cy5IZWxsb1dvcmxkOiBSdW4gc2NyaXB0IGV4aXRlZC4ge2V4aXRDb2RlPTAsIHNlcnZpY2VOYW1lPWNvbS5hd3MuSGVsbG9Xb3JsZCwgY3VycmVudFN0YXRlPVJVTk5JTkd9Cg\u003d\u003d",
                "mime_type": "text/plain",
                "name": "com.aws.HelloWorld.log"
              },
              {
                "data": "",
                "mime_type": "text/plain",
                "name": "aws.greengrass.Nucleus.log"
              },
              {
                "data": "\u003d",
                "mime_type": "text/plain",
                "name": "greengrass_2023_03_30_01_0.log"
              },
              {
                "data": "",
                "mime_type": "text/plain",
                "name": "aws.greengrass.LambdaRuntimes.log"
              }
            ],
            "result": {
              "duration": 18498000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.FileSteps.copyLogs(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 3175000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.AWSResourcesSteps.close()"
            }
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.DockerSteps.removeCreatedImages()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.LoggerSteps.clearContext(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 30485000000,
              "status": "passed"
            },
            "line": 9,
            "name": "I create a Greengrass deployment with components",
            "match": {
              "location": "com.aws.greengrass.testing.features.DeploymentSteps.createDeployment(java.util.List\u003cjava.util.List\u003cjava.lang.String\u003e\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "com.aws.HelloWorld",
                  "classpath:/greengrass/components/recipes/hello_world_recipe.yaml"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 457000000,
              "status": "passed"
            },
            "line": 11,
            "name": "I deploy the Greengrass deployment configuration",
            "match": {
              "location": "com.aws.greengrass.testing.features.DeploymentSteps.startDeployment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 82170000000,
              "status": "passed"
            },
            "line": 12,
            "name": "the Greengrass deployment is COMPLETED on the device after 180 seconds",
            "match": {
              "arguments": [
                {
                  "val": "COMPLETED",
                  "offset": 29
                },
                {
                  "val": "180",
                  "offset": 59
                },
                {
                  "val": "seconds",
                  "offset": 63
                }
              ],
              "location": "com.aws.greengrass.testing.features.DeploymentSteps.deploymentSucceeds(java.lang.String,int,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2654000000,
              "status": "passed"
            },
            "line": 13,
            "name": "the com.aws.HelloWorld log on the device contains the line \"Hello World!!\" within 20 seconds",
            "match": {
              "arguments": [
                {
                  "val": "com.aws.HelloWorld",
                  "offset": 4
                },
                {
                  "val": "\"Hello World!!\"",
                  "offset": 59
                },
                {
                  "val": "20",
                  "offset": 82
                },
                {
                  "val": "seconds",
                  "offset": 85
                }
              ],
              "location": "com.aws.greengrass.testing.features.FileSteps.logContains(java.lang.String,java.lang.String,int,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2575000000,
              "status": "passed"
            },
            "line": 15,
            "name": "I create a Greengrass deployment with components",
            "match": {
              "location": "com.aws.greengrass.testing.features.DeploymentSteps.createDeployment(java.util.List\u003cjava.util.List\u003cjava.lang.String\u003e\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "com.aws.HelloWorld",
                  "classpath:/greengrass/components/recipes/hello_world_updated_recipe.yaml"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 429000000,
              "status": "passed"
            },
            "line": 17,
            "name": "I deploy the Greengrass deployment configuration",
            "match": {
              "location": "com.aws.greengrass.testing.features.DeploymentSteps.startDeployment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 39784000000,
              "status": "passed"
            },
            "line": 18,
            "name": "the Greengrass deployment is COMPLETED on the device after 180 seconds",
            "match": {
              "arguments": [
                {
                  "val": "COMPLETED",
                  "offset": 29
                },
                {
                  "val": "180",
                  "offset": 59
                },
                {
                  "val": "seconds",
                  "offset": 63
                }
              ],
              "location": "com.aws.greengrass.testing.features.DeploymentSteps.deploymentSucceeds(java.lang.String,int,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2675000000,
              "status": "passed"
            },
            "line": 19,
            "name": "the com.aws.HelloWorld log on the device contains the line \"Hello World Updated!!\" within 20 seconds",
            "match": {
              "arguments": [
                {
                  "val": "com.aws.HelloWorld",
                  "offset": 4
                },
                {
                  "val": "\"Hello World Updated!!\"",
                  "offset": 59
                },
                {
                  "val": "20",
                  "offset": 90
                },
                {
                  "val": "seconds",
                  "offset": 93
                }
              ],
              "location": "com.aws.greengrass.testing.features.FileSteps.logContains(java.lang.String,java.lang.String,int,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CloudDeployment"
          },
          {
            "name": "@IDT"
          },
          {
            "name": "@OTFStable"
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 4,
            "name": "my device is registered as a Thing",
            "match": {
              "location": "com.aws.greengrass.testing.features.RegistrationSteps.registerAsThing()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2641000000,
              "status": "passed"
            },
            "line": 5,
            "name": "my device is running Greengrass",
            "match": {
              "location": "com.aws.greengrass.testing.features.GreengrassSteps.start()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2023-03-30T02:01:12.415Z",
        "before": [
          {
            "result": {
              "duration": 8596000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.LoggerSteps.addContext(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 22,
        "name": "As a developer, I can create a component in Cloud and deploy it on my device via thing group",
        "description": "",
        "id": "testing-cloud-component-in-greengrass;as-a-developer--i-can-create-a-component-in-cloud-and-deploy-it-on-my-device-via-thing-group",
        "after": [
          {
            "result": {
              "duration": 323031000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.DeploymentSteps.cleanupDeployments()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.mqtt.MQTTSteps.disconnect()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.GreengrassSteps.close()"
            }
          },
          {
            "embeddings": [
              {
                "data": "",
                "mime_type": "text/plain",
                "name": "main.log"
              },
              {
                "data": "MjAyMy0wMy0zMFQwMTo1MDo1OS40MDZaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0zMykgaWR0LWdndjItbGFtYmRhLWZ1bmN0aW9uLWlkdC04MjIwNDM4ODEwOTU2NjYzMDA2OiBzaGVsbC1ydW5uZXItc3RhcnQuIHtzY3JpcHROYW1lPXNlcnZpY2VzLmlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODIyMDQzODgxMDk1NjY2MzAwNi5saWZlY3ljbGUuc3RhcnR1cC5zY3JpcHQsIHNlcnZpY2VJbnN0YW5jZT0xLCBzZXJ2aWNlTmFtZT1pZHQtZ2d2Mi1sYW1iZGEtZnVuY3Rpb24taWR0LTgyMjA0Mzg4MTA5NTY2NjMwMDYsIGN1cnJlbnRTdGF0ZT1TVEFSVElORywgY29tbWFuZD1bIi90ZXN0L2dyZWVuZ3Jhc3MvdjIvcGFja2FnZXMvYXJ0aWZhY3RzL2F3cy5ncmVlbmdyYXNzLkxhbWJkYUxhdW5jaGVyLzIuMC4xMC9sYS4uLiJdfQoyMDIzLTAzLTMwVDAxOjUwOjU5LjUyNVogW0lORk9dIChDb3BpZXIpIGlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODIyMDQzODgxMDk1NjY2MzAwNjogc3Rkb3V0LiBTdGFydGVkIHByb2Nlc3M6IDE0OTY1Mi4ge3NjcmlwdE5hbWU9c2VydmljZXMuaWR0LWdndjItbGFtYmRhLWZ1bmN0aW9uLWlkdC04MjIwNDM4ODEwOTU2NjYzMDA2LmxpZmVjeWNsZS5zdGFydHVwLnNjcmlwdCwgc2VydmljZUluc3RhbmNlPTEsIHNlcnZpY2VOYW1lPWlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODIyMDQzODgxMDk1NjY2MzAwNiwgY3VycmVudFN0YXRlPVNUQVJUSU5HfQoyMDIzLTAzLTMwVDAxOjUwOjU5LjUzMlogW0lORk9dIChDb3BpZXIpIGlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODIyMDQzODgxMDk1NjY2MzAwNjogU3RhcnR1cCBzY3JpcHQgZXhpdGVkLiB7ZXhpdENvZGU9MCwgc2VydmljZUluc3RhbmNlPTEsIHNlcnZpY2VOYW1lPWlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODIyMDQzODgxMDk1NjY2MzAwNiwgY3VycmVudFN0YXRlPVNUQVJUSU5HfQoyMDIzLTAzLTMwVDAxOjUxOjAyLjMwNFogW0lORk9dIChwb29sLTItdGhyZWFkLTM2KSBpZHQtZ2d2Mi1sYW1iZGEtZnVuY3Rpb24taWR0LTgyMjA0Mzg4MTA5NTY2NjMwMDY6IElkdFF1YWxpZmljYXRpb25MYW1iZGEgbG9hZGVkLi4uLi4ge3NlcnZpY2VJbnN0YW5jZT0xLCBzZXJ2aWNlTmFtZT1pZHQtZ2d2Mi1sYW1iZGEtZnVuY3Rpb24taWR0LTgyMjA0Mzg4MTA5NTY2NjMwMDYsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTAzLTMwVDAxOjUxOjAzLjI2M1ogW0lORk9dIChwb29sLTItdGhyZWFkLTM2KSBpZHQtZ2d2Mi1sYW1iZGEtZnVuY3Rpb24taWR0LTgyMjA0Mzg4MTA5NTY2NjMwMDY6IElkdFF1YWxpZmljYXRpb25MYW1iZGEgTGFtYmRhIFRyaWdnZXJlZC4ge3NlcnZpY2VJbnN0YW5jZT0xLCBzZXJ2aWNlTmFtZT1pZHQtZ2d2Mi1sYW1iZGEtZnVuY3Rpb24taWR0LTgyMjA0Mzg4MTA5NTY2NjMwMDYsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTAzLTMwVDAxOjUxOjAzLjI2NVogW0lORk9dIChwb29sLTItdGhyZWFkLTM2KSBpZHQtZ2d2Mi1sYW1iZGEtZnVuY3Rpb24taWR0LTgyMjA0Mzg4MTA5NTY2NjMwMDY6IElkdFF1YWxpZmljYXRpb25MYW1iZGEgcmVjZWl2ZWQgZXZlbnQge0xhbWJkYUlucHV0SW50RmllbGQ9MTAsIHBheWxvYWQ9bGFtYmRhLXF1YWxpZmljYXRpb24tcGF5bG9hZH0uIHtzZXJ2aWNlSW5zdGFuY2U9MSwgc2VydmljZU5hbWU9aWR0LWdndjItbGFtYmRhLWZ1bmN0aW9uLWlkdC04MjIwNDM4ODEwOTU2NjYzMDA2LCBjdXJyZW50U3RhdGU9UlVOTklOR30KMjAyMy0wMy0zMFQwMTo1MTowMy4yNjZaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0zNikgaWR0LWdndjItbGFtYmRhLWZ1bmN0aW9uLWlkdC04MjIwNDM4ODEwOTU2NjYzMDA2OiBJZHRRdWFsaWZpY2F0aW9uTGFtYmRhIHJlY2VpdmVkIGV2ZW50IFBheWxvYWQgOiBsYW1iZGEtcXVhbGlmaWNhdGlvbi1wYXlsb2FkLiB7c2VydmljZUluc3RhbmNlPTEsIHNlcnZpY2VOYW1lPWlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODIyMDQzODgxMDk1NjY2MzAwNiwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDMtMzBUMDE6NTM6MzguODA1WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtNDcpIGlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODIyMDQzODgxMDk1NjY2MzAwNjogc2hlbGwtcnVubmVyLXN0YXJ0LiB7c2NyaXB0TmFtZT1zZXJ2aWNlcy5pZHQtZ2d2Mi1sYW1iZGEtZnVuY3Rpb24taWR0LTgyMjA0Mzg4MTA5NTY2NjMwMDYubGlmZWN5Y2xlLnNodXRkb3duLnNjcmlwdCwgc2VydmljZUluc3RhbmNlPTEsIHNlcnZpY2VOYW1lPWlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODIyMDQzODgxMDk1NjY2MzAwNiwgY3VycmVudFN0YXRlPVNUT1BQSU5HLCBjb21tYW5kPVsiL3Rlc3QvZ3JlZW5ncmFzcy92Mi9wYWNrYWdlcy9hcnRpZmFjdHMvYXdzLmdyZWVuZ3Jhc3MuTGFtYmRhTGF1bmNoZXIvMi4wLjEwL2xhLi4uIl19CjIwMjMtMDMtMzBUMDE6NTM6MzguOTAzWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMzYpIGlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODIyMDQzODgxMDk1NjY2MzAwNjogU2h1dGRvd24gaG9vayBmb3IgamF2YSBydW50aW1lIGludm9rZWQuIFRlcm1pbmF0aW5nIGphdmEgcnVudGltZS4ge3NlcnZpY2VJbnN0YW5jZT0xLCBzZXJ2aWNlTmFtZT1pZHQtZ2d2Mi1sYW1iZGEtZnVuY3Rpb24taWR0LTgyMjA0Mzg4MTA5NTY2NjMwMDYsIGN1cnJlbnRTdGF0ZT1TVE9QUElOR30K",
                "mime_type": "text/plain",
                "name": "idt-ggv2-lambda-function-idt-8220438810956663006.log"
              },
              {
                "data": "",
                "mime_type": "text/plain",
                "name": "aws.greengrass.LambdaLauncher.log"
              },
              {
                "data": "\u003d",
                "mime_type": "text/plain",
                "name": "greengrass.log"
              },
              {
                "data": "MjAyMy0wMy0zMFQwMjowMToxNS4zOTdaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNCkgYXdzLmdyZWVuZ3Jhc3MuTG9jYWxIZWxsb1dvcmxkOiBzaGVsbC1ydW5uZXItc3RhcnQuIHtzY3JpcHROYW1lPXNlcnZpY2VzLmF3cy5ncmVlbmdyYXNzLkxvY2FsSGVsbG9Xb3JsZC5saWZlY3ljbGUuUnVuLCBzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Mb2NhbEhlbGxvV29ybGQsIGN1cnJlbnRTdGF0ZT1TVEFSVElORywgY29tbWFuZD1bImphdmEgLURjb21wb25lbnROYW1lPVx1MDAyMkhlbGxvV29ybGRcdTAwMjIgLWphciAvdGVzdC9ncmVlbmdyYXNzL3YyL3BhY2thZ2VzL2FydGlmYWN0cy8uLi4iXX0KMjAyMy0wMy0zMFQwMjowMToxNS42NzVaIFtJTkZPXSAoQ29waWVyKSBhd3MuZ3JlZW5ncmFzcy5Mb2NhbEhlbGxvV29ybGQ6IHN0ZG91dC4gSGVsbG8gV29ybGQhIS4ge3NjcmlwdE5hbWU9c2VydmljZXMuYXdzLmdyZWVuZ3Jhc3MuTG9jYWxIZWxsb1dvcmxkLmxpZmVjeWNsZS5SdW4sIHNlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLkxvY2FsSGVsbG9Xb3JsZCwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDMtMzBUMDI6MDE6MTUuNzAyWiBbSU5GT10gKENvcGllcikgYXdzLmdyZWVuZ3Jhc3MuTG9jYWxIZWxsb1dvcmxkOiBSdW4gc2NyaXB0IGV4aXRlZC4ge2V4aXRDb2RlPTAsIHNlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLkxvY2FsSGVsbG9Xb3JsZCwgY3VycmVudFN0YXRlPVJVTk5JTkd9Cg\u003d\u003d",
                "mime_type": "text/plain",
                "name": "aws.greengrass.LocalHelloWorld.log"
              },
              {
                "data": "MjAyMy0wMy0zMFQwMTo0MDozNi4zNjBaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNCkgYXdzLmdyZWVuZ3Jhc3MuTG9jYWxIZWxsb1dvcmxkOiBzaGVsbC1ydW5uZXItc3RhcnQuIHtzY3JpcHROYW1lPXNlcnZpY2VzLmF3cy5ncmVlbmdyYXNzLkxvY2FsSGVsbG9Xb3JsZC5saWZlY3ljbGUuUnVuLCBzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Mb2NhbEhlbGxvV29ybGQsIGN1cnJlbnRTdGF0ZT1TVEFSVElORywgY29tbWFuZD1bImphdmEgLURjb21wb25lbnROYW1lPVx1MDAyMkhlbGxvV29ybGRcdTAwMjIgLWphciAvdGVzdC9ncmVlbmdyYXNzL3YyL3BhY2thZ2VzL2FydGlmYWN0cy8uLi4iXX0KMjAyMy0wMy0zMFQwMTo0MDozNi42MDZaIFtJTkZPXSAoQ29waWVyKSBhd3MuZ3JlZW5ncmFzcy5Mb2NhbEhlbGxvV29ybGQ6IHN0ZG91dC4gSGVsbG8gV29ybGQhIS4ge3NjcmlwdE5hbWU9c2VydmljZXMuYXdzLmdyZWVuZ3Jhc3MuTG9jYWxIZWxsb1dvcmxkLmxpZmVjeWNsZS5SdW4sIHNlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLkxvY2FsSGVsbG9Xb3JsZCwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDMtMzBUMDE6NDA6MzYuNjIyWiBbSU5GT10gKENvcGllcikgYXdzLmdyZWVuZ3Jhc3MuTG9jYWxIZWxsb1dvcmxkOiBSdW4gc2NyaXB0IGV4aXRlZC4ge2V4aXRDb2RlPTAsIHNlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLkxvY2FsSGVsbG9Xb3JsZCwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDMtMzBUMDE6NTQ6MTguNzEyWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTMpIGF3cy5ncmVlbmdyYXNzLkxvY2FsSGVsbG9Xb3JsZDogc2hlbGwtcnVubmVyLXN0YXJ0LiB7c2NyaXB0TmFtZT1zZXJ2aWNlcy5hd3MuZ3JlZW5ncmFzcy5Mb2NhbEhlbGxvV29ybGQubGlmZWN5Y2xlLlJ1biwgc2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuTG9jYWxIZWxsb1dvcmxkLCBjdXJyZW50U3RhdGU9U1RBUlRJTkcsIGNvbW1hbmQ9WyJqYXZhIC1EY29tcG9uZW50TmFtZT1cdTAwMjJIZWxsb1dvcmxkXHUwMDIyIC1qYXIgL3Rlc3QvZ3JlZW5ncmFzcy92Mi9wYWNrYWdlcy9hcnRpZmFjdHMvLi4uIl19CjIwMjMtMDMtMzBUMDE6NTQ6MTkuMTk0WiBbSU5GT10gKENvcGllcikgYXdzLmdyZWVuZ3Jhc3MuTG9jYWxIZWxsb1dvcmxkOiBzdGRvdXQuIEhlbGxvIFdvcmxkISEuIHtzY3JpcHROYW1lPXNlcnZpY2VzLmF3cy5ncmVlbmdyYXNzLkxvY2FsSGVsbG9Xb3JsZC5saWZlY3ljbGUuUnVuLCBzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Mb2NhbEhlbGxvV29ybGQsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTAzLTMwVDAxOjU0OjE5LjIyMVogW0lORk9dIChDb3BpZXIpIGF3cy5ncmVlbmdyYXNzLkxvY2FsSGVsbG9Xb3JsZDogUnVuIHNjcmlwdCBleGl0ZWQuIHtleGl0Q29kZT0wLCBzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Mb2NhbEhlbGxvV29ybGQsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQo\u003d",
                "mime_type": "text/plain",
                "name": "aws.greengrass.LocalHelloWorld_2023_03_30_01_0.log"
              },
              {
                "data": "MjAyMy0wMy0zMFQwMjowMjoyNi43MDhaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xOCkgY29tLmF3cy5IZWxsb1dvcmxkOiBzaGVsbC1ydW5uZXItc3RhcnQuIHtzY3JpcHROYW1lPXNlcnZpY2VzLmNvbS5hd3MuSGVsbG9Xb3JsZC5saWZlY3ljbGUuUnVuLCBzZXJ2aWNlTmFtZT1jb20uYXdzLkhlbGxvV29ybGQsIGN1cnJlbnRTdGF0ZT1TVEFSVElORywgY29tbWFuZD1bImphdmEgLURjb21wb25lbnROYW1lPVx1MDAyMkhlbGxvV29ybGRcdTAwMjIgLWphciAvdGVzdC9ncmVlbmdyYXNzL3YyL3BhY2thZ2VzL2FydGlmYWN0cy0uLi4iXX0KMjAyMy0wMy0zMFQwMjowMjoyNi45MTdaIFtJTkZPXSAoQ29waWVyKSBjb20uYXdzLkhlbGxvV29ybGQ6IHN0ZG91dC4gSGVsbG8gV29ybGQhIS4ge3NjcmlwdE5hbWU9c2VydmljZXMuY29tLmF3cy5IZWxsb1dvcmxkLmxpZmVjeWNsZS5SdW4sIHNlcnZpY2VOYW1lPWNvbS5hd3MuSGVsbG9Xb3JsZCwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDMtMzBUMDI6MDI6MjYuOTQzWiBbSU5GT10gKENvcGllcikgY29tLmF3cy5IZWxsb1dvcmxkOiBSdW4gc2NyaXB0IGV4aXRlZC4ge2V4aXRDb2RlPTAsIHNlcnZpY2VOYW1lPWNvbS5hd3MuSGVsbG9Xb3JsZCwgY3VycmVudFN0YXRlPVJVTk5JTkd9Cg\u003d\u003d",
                "mime_type": "text/plain",
                "name": "com.aws.HelloWorld.log"
              },
              {
                "data": "",
                "mime_type": "text/plain",
                "name": "aws.greengrass.Nucleus.log"
              },
              {
                "data": "\u003d",
                "mime_type": "text/plain",
                "name": "greengrass_2023_03_30_01_0.log"
              },
              {
                "data": "",
                "mime_type": "text/plain",
                "name": "aws.greengrass.LambdaRuntimes.log"
              }
            ],
            "result": {
              "duration": 18321000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.FileSteps.copyLogs(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 2351000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.AWSResourcesSteps.close()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.DockerSteps.removeCreatedImages()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.LoggerSteps.clearContext(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 31537000000,
              "status": "passed"
            },
            "line": 23,
            "name": "I create a Greengrass deployment with components",
            "match": {
              "location": "com.aws.greengrass.testing.features.DeploymentSteps.createDeployment(java.util.List\u003cjava.util.List\u003cjava.lang.String\u003e\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "com.aws.HelloWorld",
                  "classpath:/greengrass/components/recipes/hello_world_recipe.yaml"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 635000000,
              "status": "passed"
            },
            "line": 25,
            "name": "I deploy the Greengrass deployment configuration to thing group",
            "match": {
              "location": "com.aws.greengrass.testing.features.DeploymentSteps.startDeploymentForThingGroup()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "java.lang.IllegalStateException: Deployment idt-63ea438cc5fbbf1a023d-gg-deployment did not reach COMPLETED\n\tat com.aws.greengrass.testing.features.DeploymentSteps.deploymentSucceeds(DeploymentSteps.java:311)\n\tat ✽.the Greengrass deployment is COMPLETED on the device after 180 seconds(classpath:greengrass/features/cloudComponent.feature:26)\n",
              "duration": 900269000000,
              "status": "failed"
            },
            "line": 26,
            "name": "the Greengrass deployment is COMPLETED on the device after 180 seconds",
            "match": {
              "arguments": [
                {
                  "val": "COMPLETED",
                  "offset": 29
                },
                {
                  "val": "180",
                  "offset": 59
                },
                {
                  "val": "seconds",
                  "offset": 63
                }
              ],
              "location": "com.aws.greengrass.testing.features.DeploymentSteps.deploymentSucceeds(java.lang.String,int,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 27,
            "name": "the com.aws.HelloWorld log on the device contains the line \"Hello World!!\" within 20 seconds",
            "match": {
              "arguments": [
                {
                  "val": "com.aws.HelloWorld",
                  "offset": 4
                },
                {
                  "val": "\"Hello World!!\"",
                  "offset": 59
                },
                {
                  "val": "20",
                  "offset": 82
                },
                {
                  "val": "seconds",
                  "offset": 85
                }
              ],
              "location": "com.aws.greengrass.testing.features.FileSteps.logContains(java.lang.String,java.lang.String,int,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 29,
            "name": "I create a Greengrass deployment with components",
            "match": {
              "location": "com.aws.greengrass.testing.features.DeploymentSteps.createDeployment(java.util.List\u003cjava.util.List\u003cjava.lang.String\u003e\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "com.aws.HelloWorld",
                  "classpath:/greengrass/components/recipes/hello_world_updated_recipe.yaml"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 31,
            "name": "I deploy the Greengrass deployment configuration to thing group",
            "match": {
              "location": "com.aws.greengrass.testing.features.DeploymentSteps.startDeploymentForThingGroup()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 32,
            "name": "the Greengrass deployment is COMPLETED on the device after 180 seconds",
            "match": {
              "arguments": [
                {
                  "val": "COMPLETED",
                  "offset": 29
                },
                {
                  "val": "180",
                  "offset": 59
                },
                {
                  "val": "seconds",
                  "offset": 63
                }
              ],
              "location": "com.aws.greengrass.testing.features.DeploymentSteps.deploymentSucceeds(java.lang.String,int,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "the com.aws.HelloWorld log on the device contains the line \"Hello World Updated!!\" within 20 seconds",
            "match": {
              "arguments": [
                {
                  "val": "com.aws.HelloWorld",
                  "offset": 4
                },
                {
                  "val": "\"Hello World Updated!!\"",
                  "offset": 59
                },
                {
                  "val": "20",
                  "offset": 90
                },
                {
                  "val": "seconds",
                  "offset": 93
                }
              ],
              "location": "com.aws.greengrass.testing.features.FileSteps.logContains(java.lang.String,java.lang.String,int,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CloudDeployment"
          },
          {
            "name": "@IDT"
          },
          {
            "name": "@OTFStable"
          }
        ]
      }
    ],
    "name": "Testing Cloud component in Greengrass",
    "description": "",
    "id": "testing-cloud-component-in-greengrass",
    "keyword": "Feature",
    "uri": "classpath:greengrass/features/cloudComponent.feature",
    "tags": []
  }
]