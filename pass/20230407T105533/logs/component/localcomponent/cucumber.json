[
  {
    "line": 1,
    "elements": [
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3840000000,
              "status": "passed"
            },
            "line": 4,
            "name": "my device is registered as a Thing",
            "match": {
              "location": "com.aws.greengrass.testing.features.RegistrationSteps.registerAsThing()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2640000000,
              "status": "passed"
            },
            "line": 5,
            "name": "my device is running Greengrass",
            "match": {
              "location": "com.aws.greengrass.testing.features.GreengrassSteps.start()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2023-04-07T03:01:13.926Z",
        "before": [
          {
            "result": {
              "duration": 10251000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.LoggerSteps.addContext(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 8,
        "name": "A component is deployed locally using CLI",
        "description": "",
        "id": "testing-local-deployment-using-cli-in-greengrass;a-component-is-deployed-locally-using-cli",
        "after": [
          {
            "result": {
              "duration": 117978000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.DeploymentSteps.cleanupDeployments()"
            }
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.mqtt.MQTTSteps.disconnect()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.GreengrassSteps.close()"
            }
          },
          {
            "embeddings": [
              {
                "data": "",
                "mime_type": "text/plain",
                "name": "main.log"
              },
              {
                "data": "MjAyMy0wNC0wN1QwMjo1OTo0Ny42NTNaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xOSkgYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXI6IHNoZWxsLXJ1bm5lci1zdGFydC4ge3NjcmlwdE5hbWU9c2VydmljZXMuYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIubGlmZWN5Y2xlLlJ1biwgc2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIsIGN1cnJlbnRTdGF0ZT1TVEFSVElORywgY29tbWFuZD1bImphdmEgLURpcGMub3BlcmF0aW9uPVx1MDAyMm1xdHRQdWJzdWJcdTAwMjIgLURjb21wb25lbnROYW1lPVx1MDAyMklvdE1xdHRTdWJzY3JpYmVyXHUwMDIyIC1qYXIgIC90Li4uIl19CjIwMjMtMDQtMDdUMDI6NTk6NDguOTM0WiBbV0FSTl0gKENvcGllcikgYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXI6IHN0ZGVyci4gQXByIDA3LCAyMDIzIDI6NTk6NDggQU0gc29mdHdhcmUuYW1hem9uLmF3c3Nkay5ldmVudHN0cmVhbXJwYy5FdmVudFN0cmVhbVJQQ0Nvbm5lY3Rpb24kMSBvbkNvbm5lY3Rpb25TZXR1cC4ge3NjcmlwdE5hbWU9c2VydmljZXMuYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIubGlmZWN5Y2xlLlJ1biwgc2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTA3VDAyOjU5OjQ4LjkzNlogW1dBUk5dIChDb3BpZXIpIGF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyOiBzdGRlcnIuIElORk86IFNvY2tldCBjb25uZWN0aW9uIC90ZXN0L2dyZWVuZ3Jhc3MvdjIvaXBjLnNvY2tldDo4MDMzIHRvIHNlcnZlciByZXN1bHQgW0FXU19FUlJPUl9TVUNDRVNTXS4ge3NjcmlwdE5hbWU9c2VydmljZXMuYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIubGlmZWN5Y2xlLlJ1biwgc2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTA3VDAyOjU5OjQ5LjMwOFogW1dBUk5dIChDb3BpZXIpIGF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyOiBzdGRlcnIuIEFwciAwNywgMjAyMyAyOjU5OjQ5IEFNIHNvZnR3YXJlLmFtYXpvbi5hd3NzZGsuZXZlbnRzdHJlYW1ycGMuRXZlbnRTdHJlYW1SUENDb25uZWN0aW9uJDEgb25Qcm90b2NvbE1lc3NhZ2UuIHtzY3JpcHROYW1lPXNlcnZpY2VzLmF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLmxpZmVjeWNsZS5SdW4sIHNlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLCBjdXJyZW50U3RhdGU9UlVOTklOR30KMjAyMy0wNC0wN1QwMjo1OTo0OS4zMDlaIFtXQVJOXSAoQ29waWVyKSBhd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0U3Vic2NyaWJlcjogc3RkZXJyLiBJTkZPOiBDb25uZWN0aW9uIGVzdGFibGlzaGVkIHdpdGggZXZlbnQgc3RyZWFtIFJQQyBzZXJ2ZXIuIHtzY3JpcHROYW1lPXNlcnZpY2VzLmF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLmxpZmVjeWNsZS5SdW4sIHNlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLCBjdXJyZW50U3RhdGU9UlVOTklOR30KMjAyMy0wNC0wN1QwMjo1OTo0OS4zMTBaIFtJTkZPXSAoQ29waWVyKSBhd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0U3Vic2NyaWJlcjogc3Rkb3V0LiBDb25uZWN0ZWQgdG8gSVBDLi4ge3NjcmlwdE5hbWU9c2VydmljZXMuYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIubGlmZWN5Y2xlLlJ1biwgc2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTA3VDAyOjU5OjQ5Ljk5OVogW0lORk9dIChDb3BpZXIpIGF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyOiBzdGRvdXQuIFN1YnNjcmliZWQgdG8gSW9UIHRvcGljIGlkdC9NcXR0L1Rlc3Qgd2l0aCBRT1M9QVRfTEVBU1RfT05DRS4ge3NjcmlwdE5hbWU9c2VydmljZXMuYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIubGlmZWN5Y2xlLlJ1biwgc2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTA3VDAyOjU5OjUwLjAxOFogW0lORk9dIChDb3BpZXIpIGF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyOiBzdGRvdXQuIFdhaXRpbmcgMzAgc2Vjb25kcyBmb3IgbWVzc2FnZXMuIHtzY3JpcHROYW1lPXNlcnZpY2VzLmF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLmxpZmVjeWNsZS5SdW4sIHNlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLCBjdXJyZW50U3RhdGU9UlVOTklOR30KMjAyMy0wNC0wN1QwMjo1OTo1MC4yMzBaIFtJTkZPXSAoQ29waWVyKSBhd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0U3Vic2NyaWJlcjogc3Rkb3V0LiBNZXNzYWdlIHJlY2VpdmVkLiBtZXNzYWdlPXRlc3QgbWVzc2FnZSwgZXhwZWN0ZWRNZXNzYWdlPXRlc3QgbWVzc2FnZS4ge3NjcmlwdE5hbWU9c2VydmljZXMuYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIubGlmZWN5Y2xlLlJ1biwgc2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTA3VDAyOjU5OjUwLjIzMVogW0lORk9dIChDb3BpZXIpIGF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyOiBzdGRvdXQuIFdhaXRpbmcgMzAgc2Vjb25kcyBmb3IgbWVzc2FnZXMuIHtzY3JpcHROYW1lPXNlcnZpY2VzLmF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLmxpZmVjeWNsZS5SdW4sIHNlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLCBjdXJyZW50U3RhdGU9UlVOTklOR30K",
                "mime_type": "text/plain",
                "name": "aws.greengrass.IotMqttSubscriber_2023_04_07_02_0.log"
              },
              {
                "data": "\u003d\u003d",
                "mime_type": "text/plain",
                "name": "greengrass.log"
              },
              {
                "data": "MjAyMy0wNC0wN1QwMzowMzozNy4xOTZaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xOCkgYXdzLmdyZWVuZ3Jhc3MuTG9jYWxIZWxsb1dvcmxkOiBzaGVsbC1ydW5uZXItc3RhcnQuIHtzY3JpcHROYW1lPXNlcnZpY2VzLmF3cy5ncmVlbmdyYXNzLkxvY2FsSGVsbG9Xb3JsZC5saWZlY3ljbGUuUnVuLCBzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Mb2NhbEhlbGxvV29ybGQsIGN1cnJlbnRTdGF0ZT1TVEFSVElORywgY29tbWFuZD1bImphdmEgLURjb21wb25lbnROYW1lPVx1MDAyMkhlbGxvV29ybGRcdTAwMjIgLWphciAvdGVzdC9ncmVlbmdyYXNzL3YyL3BhY2thZ2VzL2FydGlmYWN0cy8uLi4iXX0KMjAyMy0wNC0wN1QwMzowMzozNy41OTNaIFtJTkZPXSAoQ29waWVyKSBhd3MuZ3JlZW5ncmFzcy5Mb2NhbEhlbGxvV29ybGQ6IHN0ZG91dC4gSGVsbG8gV29ybGQhIS4ge3NjcmlwdE5hbWU9c2VydmljZXMuYXdzLmdyZWVuZ3Jhc3MuTG9jYWxIZWxsb1dvcmxkLmxpZmVjeWNsZS5SdW4sIHNlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLkxvY2FsSGVsbG9Xb3JsZCwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDQtMDdUMDM6MDM6MzcuNjI1WiBbSU5GT10gKENvcGllcikgYXdzLmdyZWVuZ3Jhc3MuTG9jYWxIZWxsb1dvcmxkOiBSdW4gc2NyaXB0IGV4aXRlZC4ge2V4aXRDb2RlPTAsIHNlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLkxvY2FsSGVsbG9Xb3JsZCwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDQtMDdUMDM6MDQ6NDQuMDEyWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTEpIGF3cy5ncmVlbmdyYXNzLkxvY2FsSGVsbG9Xb3JsZDogc2hlbGwtcnVubmVyLXN0YXJ0LiB7c2NyaXB0TmFtZT1zZXJ2aWNlcy5hd3MuZ3JlZW5ncmFzcy5Mb2NhbEhlbGxvV29ybGQubGlmZWN5Y2xlLlJ1biwgc2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuTG9jYWxIZWxsb1dvcmxkLCBjdXJyZW50U3RhdGU9U1RBUlRJTkcsIGNvbW1hbmQ9WyJqYXZhIC1EY29tcG9uZW50TmFtZT1cdTAwMjJIZWxsb1dvcmxkXHUwMDIyIC1qYXIgL3Rlc3QvZ3JlZW5ncmFzcy92Mi9wYWNrYWdlcy9hcnRpZmFjdHMvLi4uIl19CjIwMjMtMDQtMDdUMDM6MDQ6NDQuMjg2WiBbSU5GT10gKENvcGllcikgYXdzLmdyZWVuZ3Jhc3MuTG9jYWxIZWxsb1dvcmxkOiBzdGRvdXQuIEhlbGxvIFdvcmxkISEuIHtzY3JpcHROYW1lPXNlcnZpY2VzLmF3cy5ncmVlbmdyYXNzLkxvY2FsSGVsbG9Xb3JsZC5saWZlY3ljbGUuUnVuLCBzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Mb2NhbEhlbGxvV29ybGQsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTA3VDAzOjA0OjQ0LjI5OVogW0lORk9dIChDb3BpZXIpIGF3cy5ncmVlbmdyYXNzLkxvY2FsSGVsbG9Xb3JsZDogUnVuIHNjcmlwdCBleGl0ZWQuIHtleGl0Q29kZT0wLCBzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Mb2NhbEhlbGxvV29ybGQsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQo\u003d",
                "mime_type": "text/plain",
                "name": "aws.greengrass.LocalHelloWorld.log"
              },
              {
                "data": "\u003d",
                "mime_type": "text/plain",
                "name": "greengrass_2023_04_07_02_0.log"
              },
              {
                "data": "",
                "mime_type": "text/plain",
                "name": "aws.greengrass.Nucleus.log"
              }
            ],
            "result": {
              "duration": 14243000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.FileSteps.copyLogs(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 851000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.AWSResourcesSteps.close()"
            }
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.DockerSteps.removeCreatedImages()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.LoggerSteps.clearContext(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2680000000,
              "status": "passed"
            },
            "line": 9,
            "name": "I create a Greengrass deployment with components",
            "match": {
              "location": "com.aws.greengrass.testing.features.DeploymentSteps.createDeployment(java.util.List\u003cjava.util.List\u003cjava.lang.String\u003e\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "aws.greengrass.Cli",
                  "GG_CLI_VERSION"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 595000000,
              "status": "passed"
            },
            "line": 11,
            "name": "I deploy the Greengrass deployment configuration",
            "match": {
              "location": "com.aws.greengrass.testing.features.DeploymentSteps.startDeployment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 62866000000,
              "status": "passed"
            },
            "line": 12,
            "name": "the Greengrass deployment is COMPLETED on the device after 180 seconds",
            "match": {
              "arguments": [
                {
                  "val": "COMPLETED",
                  "offset": 29
                },
                {
                  "val": "180",
                  "offset": 59
                },
                {
                  "val": "seconds",
                  "offset": 63
                }
              ],
              "location": "com.aws.greengrass.testing.features.DeploymentSteps.deploymentSucceeds(java.lang.String,int,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1319000000,
              "status": "passed"
            },
            "line": 13,
            "name": "I verify greengrass-cli is available in greengrass root",
            "match": {
              "location": "com.aws.greengrass.testing.features.GreengrassCliSteps.verifyCliInstallation()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12166000000,
              "status": "passed"
            },
            "line": 14,
            "name": "I create a local deployment with components",
            "match": {
              "location": "com.aws.greengrass.testing.features.DeploymentSteps.createLocalDeployment(java.util.List\u003cjava.util.List\u003cjava.lang.String\u003e\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "aws.greengrass.LocalHelloWorld",
                  "local:/greengrass/components/recipes/local_hello_world.yaml"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 25523000000,
              "status": "passed"
            },
            "line": 16,
            "name": "the local Greengrass deployment is SUCCEEDED on the device after 120 seconds",
            "match": {
              "arguments": [
                {
                  "val": "SUCCEEDED",
                  "offset": 35
                },
                {
                  "val": "120",
                  "offset": 65
                }
              ],
              "location": "com.aws.greengrass.testing.features.GreengrassCliSteps.verifyLocalDeployment(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2649000000,
              "status": "passed"
            },
            "line": 17,
            "name": "the aws.greengrass.LocalHelloWorld log on the device contains the line \"Hello World!!\" within 20 seconds",
            "match": {
              "arguments": [
                {
                  "val": "aws.greengrass.LocalHelloWorld",
                  "offset": 4
                },
                {
                  "val": "\"Hello World!!\"",
                  "offset": 71
                },
                {
                  "val": "20",
                  "offset": 94
                },
                {
                  "val": "seconds",
                  "offset": 97
                }
              ],
              "location": "com.aws.greengrass.testing.features.FileSteps.logContains(java.lang.String,java.lang.String,int,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@LocalDeployment"
          },
          {
            "name": "@IDT"
          },
          {
            "name": "@OTFStable"
          }
        ]
      }
    ],
    "name": "Testing local deployment using CLI in Greengrass",
    "description": "",
    "id": "testing-local-deployment-using-cli-in-greengrass",
    "keyword": "Feature",
    "uri": "classpath:greengrass/features/localdeployment.feature",
    "tags": []
  }
]