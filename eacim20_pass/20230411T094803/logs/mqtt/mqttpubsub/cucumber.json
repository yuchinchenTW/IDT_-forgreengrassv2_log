[
  {
    "line": 1,
    "elements": [
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4135000000,
              "status": "passed"
            },
            "line": 4,
            "name": "my device is registered as a Thing",
            "match": {
              "location": "com.aws.greengrass.testing.features.RegistrationSteps.registerAsThing()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2646000000,
              "status": "passed"
            },
            "line": 5,
            "name": "my device is running Greengrass",
            "match": {
              "location": "com.aws.greengrass.testing.features.GreengrassSteps.start()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2023-04-11T01:57:13.334Z",
        "before": [
          {
            "result": {
              "duration": 13524000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.LoggerSteps.addContext(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 8,
        "name": "Component publishes MQTT message to Iot core and retrieves it as well",
        "description": "",
        "id": "testing-mqtt-proxying-in-greengrass;component-publishes-mqtt-message-to-iot-core-and-retrieves-it-as-well",
        "after": [
          {
            "result": {
              "duration": 85355000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.DeploymentSteps.cleanupDeployments()"
            }
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.mqtt.MQTTSteps.disconnect()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.GreengrassSteps.close()"
            }
          },
          {
            "embeddings": [
              {
                "data": "",
                "mime_type": "text/plain",
                "name": "greengrass_2023_04_11_01_0.log"
              },
              {
                "data": "",
                "mime_type": "text/plain",
                "name": "main.log"
              },
              {
                "data": "MjAyMy0wNC0xMVQwMjowMTozMC44MDdaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xMSkgYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFB1Ymxpc2hlcjogc2hlbGwtcnVubmVyLXN0YXJ0LiB7c2NyaXB0TmFtZT1zZXJ2aWNlcy5hd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0UHVibGlzaGVyLmxpZmVjeWNsZS5SdW4sIHNlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRQdWJsaXNoZXIsIGN1cnJlbnRTdGF0ZT1TVEFSVElORywgY29tbWFuZD1bImphdmEgLURpcGMub3BlcmF0aW9uPVx1MDAyMm1xdHRQdWJzdWJcdTAwMjIgLURjb21wb25lbnROYW1lPVx1MDAyMklvdE1xdHRQdWJsaXNoZXJcdTAwMjIgLWphciAvdGVzLi4uIl19CjIwMjMtMDQtMTFUMDI6MDE6MzIuMjcxWiBbV0FSTl0gKENvcGllcikgYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFB1Ymxpc2hlcjogc3RkZXJyLiBBcHIgMTEsIDIwMjMgMjowMTozMSBBTSBzb2Z0d2FyZS5hbWF6b24uYXdzc2RrLmV2ZW50c3RyZWFtcnBjLkV2ZW50U3RyZWFtUlBDQ29ubmVjdGlvbiQxIG9uQ29ubmVjdGlvblNldHVwLiB7c2NyaXB0TmFtZT1zZXJ2aWNlcy5hd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0UHVibGlzaGVyLmxpZmVjeWNsZS5SdW4sIHNlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRQdWJsaXNoZXIsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTExVDAyOjAxOjMyLjI3MlogW1dBUk5dIChDb3BpZXIpIGF3cy5ncmVlbmdyYXNzLklvdE1xdHRQdWJsaXNoZXI6IHN0ZGVyci4gSU5GTzogU29ja2V0IGNvbm5lY3Rpb24gL3Rlc3QvZ3JlZW5ncmFzcy92Mi9pcGMuc29ja2V0OjgwMzMgdG8gc2VydmVyIHJlc3VsdCBbQVdTX0VSUk9SX1NVQ0NFU1NdLiB7c2NyaXB0TmFtZT1zZXJ2aWNlcy5hd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0UHVibGlzaGVyLmxpZmVjeWNsZS5SdW4sIHNlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRQdWJsaXNoZXIsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTExVDAyOjAxOjMyLjcxOFogW1dBUk5dIChDb3BpZXIpIGF3cy5ncmVlbmdyYXNzLklvdE1xdHRQdWJsaXNoZXI6IHN0ZGVyci4gQXByIDExLCAyMDIzIDI6MDE6MzIgQU0gc29mdHdhcmUuYW1hem9uLmF3c3Nkay5ldmVudHN0cmVhbXJwYy5FdmVudFN0cmVhbVJQQ0Nvbm5lY3Rpb24kMSBvblByb3RvY29sTWVzc2FnZS4ge3NjcmlwdE5hbWU9c2VydmljZXMuYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFB1Ymxpc2hlci5saWZlY3ljbGUuUnVuLCBzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0UHVibGlzaGVyLCBjdXJyZW50U3RhdGU9UlVOTklOR30KMjAyMy0wNC0xMVQwMjowMTozMi43MTlaIFtXQVJOXSAoQ29waWVyKSBhd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0UHVibGlzaGVyOiBzdGRlcnIuIElORk86IENvbm5lY3Rpb24gZXN0YWJsaXNoZWQgd2l0aCBldmVudCBzdHJlYW0gUlBDIHNlcnZlci4ge3NjcmlwdE5hbWU9c2VydmljZXMuYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFB1Ymxpc2hlci5saWZlY3ljbGUuUnVuLCBzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0UHVibGlzaGVyLCBjdXJyZW50U3RhdGU9UlVOTklOR30KMjAyMy0wNC0xMVQwMjowMTozMi43MjJaIFtJTkZPXSAoQ29waWVyKSBhd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0UHVibGlzaGVyOiBzdGRvdXQuIENvbm5lY3RlZCB0byBJUEMuLiB7c2NyaXB0TmFtZT1zZXJ2aWNlcy5hd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0UHVibGlzaGVyLmxpZmVjeWNsZS5SdW4sIHNlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRQdWJsaXNoZXIsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTExVDAyOjAxOjQyLjQ3N1ogW0lORk9dIChDb3BpZXIpIGF3cy5ncmVlbmdyYXNzLklvdE1xdHRQdWJsaXNoZXI6IHN0ZG91dC4gUHVibGlzaGVkIHRvIElvVCB0b3BpYyBpZHQvTXF0dC9UZXN0IHdpdGggcGF5bG9hZCB0ZXN0IG1lc3NhZ2UgYW5kIHFvcyBBVF9MRUFTVF9PTkNFLiB7c2NyaXB0TmFtZT1zZXJ2aWNlcy5hd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0UHVibGlzaGVyLmxpZmVjeWNsZS5SdW4sIHNlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRQdWJsaXNoZXIsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTExVDAyOjAxOjQzLjgzM1ogW0lORk9dIChDb3BpZXIpIGF3cy5ncmVlbmdyYXNzLklvdE1xdHRQdWJsaXNoZXI6IFJ1biBzY3JpcHQgZXhpdGVkLiB7ZXhpdENvZGU9MCwgc2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFB1Ymxpc2hlciwgY3VycmVudFN0YXRlPVJVTk5JTkd9Cg\u003d\u003d",
                "mime_type": "text/plain",
                "name": "aws.greengrass.IotMqttPublisher.log"
              },
              {
                "data": "",
                "mime_type": "text/plain",
                "name": "aws.greengrass.LambdaRuntimes.log"
              },
              {
                "data": "",
                "mime_type": "text/plain",
                "name": "aws.greengrass.LambdaLauncher.log"
              },
              {
                "data": "MjAyMy0wNC0xMVQwMjowMDo1MC44NjhaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0zMSkgY29tLmF3cy5ncmVlbmdyYXNzLmNvbXBvbmVudG1hbmFnZXIuQ29tcG9uZW50TWFuYWdlcjogcHJlcGFyZS1wYWNrYWdlLXN0YXJ0LiB7cGFja2FnZUlkZW50aWZpZXI9YXdzLmdyZWVuZ3Jhc3MuTnVjbGV1cy12Mi45LjV9CjIwMjMtMDQtMTFUMDI6MDA6NTEuMDUxWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMzApIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLktlcm5lbDogQXR0ZW1wdCB0byBsb2FkIHNlcnZpY2UgZnJvbSBwbHVnaW5zLiB7c2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXJ9CjIwMjMtMDQtMTFUMDI6MDA6NTEuMDUyWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMzApIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLktlcm5lbDogQXR0ZW1wdCB0byBsb2FkIHNlcnZpY2UgZnJvbSBwbHVnaW5zLiB7c2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFB1Ymxpc2hlcn0KMjAyMy0wNC0xMVQwMjowMDo1MS4wNTRaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0zMCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuYm9vdHN0cmFwLkJvb3RzdHJhcE1hbmFnZXI6IEJvb3RzdHJhcCByZXF1aXJlZCBmb3IgY2xlYW5pbmcgdXAgcGx1Z2luKHMpLiB7cGx1Z2lucy10by1yZW1vdmU9W2F3cy5ncmVlbmdyYXNzLkxhbWJkYU1hbmFnZXJdfQoyMDIzLTA0LTExVDAyOjAwOjUxLjA2NlogW0lORk9dIChwb29sLTItdGhyZWFkLTMwKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5VcGRhdGVTeXN0ZW1Qb2xpY3lTZXJ2aWNlOiByZWdpc3Rlci1zZXJ2aWNlLXVwZGF0ZS1hY3Rpb24uIHthY3Rpb249MGQyMGNjNGItMDk2Zi00NDY5LWFlZWUtNWY4NWQwMzhhNmQ3LCBzZXJ2aWNlTmFtZT1VcGRhdGVTeXN0ZW1Qb2xpY3lTZXJ2aWNlLCBjdXJyZW50U3RhdGU9UlVOTklOR30KMjAyMy0wNC0xMVQwMjowMDo1MS4wNjhaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0zMSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuVXBkYXRlU3lzdGVtUG9saWN5U2VydmljZTogc2VydmljZS11cGRhdGUtc3RhcnQuIHtzZXJ2aWNlTmFtZT1VcGRhdGVTeXN0ZW1Qb2xpY3lTZXJ2aWNlLCBjdXJyZW50U3RhdGU9UlVOTklOR30KMjAyMy0wNC0xMVQwMjowMDo1MS4wNjlaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0zMSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuS2VybmVsOiBBdHRlbXB0IHRvIGxvYWQgc2VydmljZSBmcm9tIHBsdWdpbnMuIHtzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0U3Vic2NyaWJlcn0KMjAyMy0wNC0xMVQwMjowMDo1MS4wNzBaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0zMSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuS2VybmVsOiBBdHRlbXB0IHRvIGxvYWQgc2VydmljZSBmcm9tIHBsdWdpbnMuIHtzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0UHVibGlzaGVyfQoyMDIzLTA0LTExVDAyOjAwOjUxLjA3MlogW0lORk9dIChwb29sLTItdGhyZWFkLTMxKSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5EZXBsb3ltZW50Q29uZmlnTWVyZ2VyOiBtZXJnZS1jb25maWcuIEFwcGx5aW5nIGRlcGxveW1lbnQgY2hhbmdlcywgZGVwbG95bWVudCBjYW5ub3QgYmUgY2FuY2VsbGVkIG5vdy4ge2RlcGxveW1lbnQ9MGQyMGNjNGItMDk2Zi00NDY5LWFlZWUtNWY4NWQwMzhhNmQ3fQoyMDIzLTA0LTExVDAyOjAwOjUxLjA3M1ogW0lORk9dIChwb29sLTItdGhyZWFkLTMxKSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5EZXBsb3ltZW50RGlyZWN0b3J5TWFuYWdlcjogUGVyc2lzdCBjb25maWd1cmF0aW9uIHNuYXBzaG90LiB7ZmlsZT0vdGVzdC9ncmVlbmdyYXNzL3YyL2RlcGxveW1lbnRzLzBkMjBjYzRiLTA5NmYtNDQ2OS1hZWVlLTVmODVkMDM4YTZkNy9yb2xsYmFja19zbmFwc2hvdC50bG9nfQoyMDIzLTA0LTExVDAyOjAwOjUxLjEyNlogW0lORk9dIChwb29sLTItdGhyZWFkLTMyKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5HZW5lcmljRXh0ZXJuYWxTZXJ2aWNlOiBzZXJ2aWNlLWNsb3NlLiBTZXJ2aWNlIGlzIG5vdyBjbG9zaW5nLiB7c2VydmljZU5hbWU9bWFpbiwgY3VycmVudFN0YXRlPUlOU1RBTExFRH0KMjAyMy0wNC0xMVQwMjowMDo1MS4xMzBaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0zMykgY29tLmF3cy5ncmVlbmdyYXNzLmxhbWJkYW1hbmFnZXIuVXNlckxhbWJkYVNlcnZpY2U6IHNlcnZpY2UtY2xvc2UuIFNlcnZpY2UgaXMgbm93IGNsb3NpbmcuIHtzZXJ2aWNlSW5zdGFuY2U9MSwgc2VydmljZU5hbWU9aWR0LWdndjItbGFtYmRhLWZ1bmN0aW9uLWlkdC04NDQxNTMxMzYxMjkyOTAxNzkyLCBjdXJyZW50U3RhdGU9UlVOTklOR30KMjAyMy0wNC0xMVQwMjowMDo1MS4xMzVaIFtJTkZPXSAoaWR0LWdndjItbGFtYmRhLWZ1bmN0aW9uLWlkdC04NDQxNTMxMzYxMjkyOTAxNzkyIzEtbGlmZWN5Y2xlKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGFtYmRhbWFuYWdlci5Vc2VyTGFtYmRhU2VydmljZTogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlSW5zdGFuY2U9MSwgc2VydmljZU5hbWU9aWR0LWdndjItbGFtYmRhLWZ1bmN0aW9uLWlkdC04NDQxNTMxMzYxMjkyOTAxNzkyLCBjdXJyZW50U3RhdGU9UlVOTklORywgbmV3U3RhdGU9U1RPUFBJTkd9CjIwMjMtMDQtMTFUMDI6MDA6NTEuMTM5WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMzYpIGNvbS5hd3MuZ3JlZW5ncmFzcy5sYW1iZGFtYW5hZ2VyLlVzZXJMYW1iZGFTZXJ2aWNlOiBTaHV0ZG93biBpbml0aWF0ZWQuIHtzZXJ2aWNlSW5zdGFuY2U9MSwgc2VydmljZU5hbWU9aWR0LWdndjItbGFtYmRhLWZ1bmN0aW9uLWlkdC04NDQxNTMxMzYxMjkyOTAxNzkyLCBjdXJyZW50U3RhdGU9U1RPUFBJTkd9CjIwMjMtMDQtMTFUMDI6MDA6NTEuMTQxWiBbSU5GT10gKG1haW4tbGlmZWN5Y2xlKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5HZW5lcmljRXh0ZXJuYWxTZXJ2aWNlOiBTdG9wcGluZyBiYWNraW5nVGFzayB3YWl0aW5nIGZvciBkZXBlbmRlbmN5IHJlYWR5LiB7c2VydmljZU5hbWU9bWFpbiwgY3VycmVudFN0YXRlPUlOU1RBTExFRH0KMjAyMy0wNC0xMVQwMjowMDo1MS4xNDNaIFtXQVJOXSAocG9vbC0yLXRocmVhZC0yMykgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuR2VuZXJpY0V4dGVybmFsU2VydmljZTogc2VydmljZS1kZXBlbmRlbmN5LWVycm9yLiBHb3QgaW50ZXJydXB0ZWQgd2hpbGUgd2FpdGluZyBmb3IgZGVwZW5kZW5jeSByZWFkeS4ge3NlcnZpY2VOYW1lPW1haW4sIGN1cnJlbnRTdGF0ZT1JTlNUQUxMRUR9CjIwMjMtMDQtMTFUMDI6MDA6NTEuMTQ5WiBbSU5GT10gKG1haW4tbGlmZWN5Y2xlKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5HZW5lcmljRXh0ZXJuYWxTZXJ2aWNlOiBzZXJ2aWNlLXNldC1zdGF0ZS4ge3NlcnZpY2VOYW1lPW1haW4sIGN1cnJlbnRTdGF0ZT1JTlNUQUxMRUQsIG5ld1N0YXRlPUZJTklTSEVEfQoyMDIzLTA0LTExVDAyOjAwOjUxLjE1NFogW0lORk9dIChwb29sLTItdGhyZWFkLTIzKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5HZW5lcmljRXh0ZXJuYWxTZXJ2aWNlOiBzZXJ2aWNlLWNsb3NlLiBTZXJ2aWNlIGlzIG5vdyBjbG9zaW5nLiB7c2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuTnVjbGV1cywgY3VycmVudFN0YXRlPUZJTklTSEVEfQoyMDIzLTA0LTExVDAyOjAwOjUxLjE1N1ogW0lORk9dIChwb29sLTItdGhyZWFkLTIpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLkdlbmVyaWNFeHRlcm5hbFNlcnZpY2U6IHNlcnZpY2UtY2xvc2UuIFNlcnZpY2UgaXMgbm93IGNsb3NpbmcuIHtzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5MYW1iZGFSdW50aW1lcywgY3VycmVudFN0YXRlPUZJTklTSEVEfQoyMDIzLTA0LTExVDAyOjAwOjUxLjE2MVogW0lORk9dIChwb29sLTItdGhyZWFkLTM5KSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5EZXBsb3ltZW50U2VydmljZTogc2VydmljZS1jbG9zZS4gU2VydmljZSBpcyBub3cgY2xvc2luZy4ge3NlcnZpY2VOYW1lPURlcGxveW1lbnRTZXJ2aWNlLCBjdXJyZW50U3RhdGU9UlVOTklOR30KMjAyMy0wNC0xMVQwMjowMDo1MS4xNjFaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xKSBjb20uYXdzLmdyZWVuZ3Jhc3MudGVsZW1ldHJ5LlRlbGVtZXRyeUFnZW50OiBzZXJ2aWNlLWNsb3NlLiBTZXJ2aWNlIGlzIG5vdyBjbG9zaW5nLiB7c2VydmljZU5hbWU9VGVsZW1ldHJ5QWdlbnQsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTExVDAyOjAwOjUxLjE2MlogW0lORk9dIChEZXBsb3ltZW50U2VydmljZS1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5kZXBsb3ltZW50LkRlcGxveW1lbnRTZXJ2aWNlOiBzZXJ2aWNlLXNldC1zdGF0ZS4ge3NlcnZpY2VOYW1lPURlcGxveW1lbnRTZXJ2aWNlLCBjdXJyZW50U3RhdGU9UlVOTklORywgbmV3U3RhdGU9U1RPUFBJTkd9CjIwMjMtMDQtMTFUMDI6MDA6NTEuMTYyWiBbSU5GT10gKFRlbGVtZXRyeUFnZW50LWxpZmVjeWNsZSkgY29tLmF3cy5ncmVlbmdyYXNzLnRlbGVtZXRyeS5UZWxlbWV0cnlBZ2VudDogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1UZWxlbWV0cnlBZ2VudCwgY3VycmVudFN0YXRlPVJVTk5JTkcsIG5ld1N0YXRlPVNUT1BQSU5HfQoyMDIzLTA0LTExVDAyOjAwOjUxLjE2NFogW0lORk9dIChwb29sLTItdGhyZWFkLTIwKSBjb20uYXdzLmdyZWVuZ3Jhc3Muc3RhdHVzLkZsZWV0U3RhdHVzU2VydmljZTogc2VydmljZS1jbG9zZS4gU2VydmljZSBpcyBub3cgY2xvc2luZy4ge3NlcnZpY2VOYW1lPUZsZWV0U3RhdHVzU2VydmljZSwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDQtMTFUMDI6MDA6NTEuMTY0WiBbSU5GT10gKERlcGxveW1lbnRTZXJ2aWNlLWxpZmVjeWNsZSkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudFNlcnZpY2U6IFN0b3BwaW5nIGJhY2tpbmdUYXNrIHN0YXJ0LiB7c2VydmljZU5hbWU9RGVwbG95bWVudFNlcnZpY2UsIGN1cnJlbnRTdGF0ZT1TVE9QUElOR30KMjAyMy0wNC0xMVQwMjowMDo1MS4xNjNaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0yMykgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuVXBkYXRlU3lzdGVtUG9saWN5U2VydmljZTogc2VydmljZS1jbG9zZS4gU2VydmljZSBpcyBub3cgY2xvc2luZy4ge3NlcnZpY2VOYW1lPVVwZGF0ZVN5c3RlbVBvbGljeVNlcnZpY2UsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTExVDAyOjAwOjUxLjE2NVogW0lORk9dIChEZXBsb3ltZW50U2VydmljZS1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5kZXBsb3ltZW50LkRlcGxveW1lbnRTZXJ2aWNlOiBzZXJ2aWNlLXNldC1zdGF0ZS4ge3NlcnZpY2VOYW1lPURlcGxveW1lbnRTZXJ2aWNlLCBjdXJyZW50U3RhdGU9U1RPUFBJTkcsIG5ld1N0YXRlPUZJTklTSEVEfQoyMDIzLTA0LTExVDAyOjAwOjUxLjE2NVogW1dBUk5dIChwb29sLTItdGhyZWFkLTE0KSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5EZXBsb3ltZW50U2VydmljZTogc2VydmljZS1ydW4taW50ZXJydXB0ZWQuIFNlcnZpY2UgaW50ZXJydXB0ZWQgd2hpbGUgcnVubmluZyBzdGFydHVwLiB7c2VydmljZU5hbWU9RGVwbG95bWVudFNlcnZpY2UsIGN1cnJlbnRTdGF0ZT1TVE9QUElOR30KMjAyMy0wNC0xMVQwMjowMDo1MS4xNjZaIFtJTkZPXSAoRmxlZXRTdGF0dXNTZXJ2aWNlLWxpZmVjeWNsZSkgY29tLmF3cy5ncmVlbmdyYXNzLnN0YXR1cy5GbGVldFN0YXR1c1NlcnZpY2U6IHNlcnZpY2Utc2V0LXN0YXRlLiB7c2VydmljZU5hbWU9RmxlZXRTdGF0dXNTZXJ2aWNlLCBjdXJyZW50U3RhdGU9UlVOTklORywgbmV3U3RhdGU9U1RPUFBJTkd9CjIwMjMtMDQtMTFUMDI6MDA6NTEuMTY2WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMzEpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLktlcm5lbExpZmVjeWNsZTogV2FpdGluZyBmb3Igc2VydmljZXMgdG8gc2h1dGRvd24uIHt9CjIwMjMtMDQtMTFUMDI6MDA6NTEuMTY4WiBbSU5GT10gKFVwZGF0ZVN5c3RlbVBvbGljeVNlcnZpY2UtbGlmZWN5Y2xlKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5VcGRhdGVTeXN0ZW1Qb2xpY3lTZXJ2aWNlOiBzZXJ2aWNlLXNldC1zdGF0ZS4ge3NlcnZpY2VOYW1lPVVwZGF0ZVN5c3RlbVBvbGljeVNlcnZpY2UsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HLCBuZXdTdGF0ZT1TVE9QUElOR30KMjAyMy0wNC0xMVQwMjowMDo1MS4xNjhaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0zMikgY29tLmF3cy5ncmVlbmdyYXNzLmxhbWJkYW1hbmFnZXIuTGFtYmRhTWFuYWdlcjogc2VydmljZS1jbG9zZS4gU2VydmljZSBpcyBub3cgY2xvc2luZy4ge3NlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLkxhbWJkYU1hbmFnZXIsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTExVDAyOjAwOjUxLjE3MFogW0lORk9dIChVcGRhdGVTeXN0ZW1Qb2xpY3lTZXJ2aWNlLWxpZmVjeWNsZSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuVXBkYXRlU3lzdGVtUG9saWN5U2VydmljZTogU3RvcHBpbmcgYmFja2luZ1Rhc2sgc3RhcnQuIHtzZXJ2aWNlTmFtZT1VcGRhdGVTeXN0ZW1Qb2xpY3lTZXJ2aWNlLCBjdXJyZW50U3RhdGU9U1RPUFBJTkd9CjIwMjMtMDQtMTFUMDI6MDA6NTEuMTcxWiBbSU5GT10gKEZsZWV0U3RhdHVzU2VydmljZS1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5zdGF0dXMuRmxlZXRTdGF0dXNTZXJ2aWNlOiBzZXJ2aWNlLXNldC1zdGF0ZS4ge3NlcnZpY2VOYW1lPUZsZWV0U3RhdHVzU2VydmljZSwgY3VycmVudFN0YXRlPVNUT1BQSU5HLCBuZXdTdGF0ZT1GSU5JU0hFRH0KMjAyMy0wNC0xMVQwMjowMDo1MS4xNzFaIFtJTkZPXSAoVXBkYXRlU3lzdGVtUG9saWN5U2VydmljZS1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLlVwZGF0ZVN5c3RlbVBvbGljeVNlcnZpY2U6IHNlcnZpY2Utc2V0LXN0YXRlLiB7c2VydmljZU5hbWU9VXBkYXRlU3lzdGVtUG9saWN5U2VydmljZSwgY3VycmVudFN0YXRlPVNUT1BQSU5HLCBuZXdTdGF0ZT1GSU5JU0hFRH0KMjAyMy0wNC0xMVQwMjowMDo1MS4xNzFaIFtXQVJOXSAocG9vbC0yLXRocmVhZC04KSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5VcGRhdGVTeXN0ZW1Qb2xpY3lTZXJ2aWNlOiBzZXJ2aWNlLXJ1bi1pbnRlcnJ1cHRlZC4gU2VydmljZSBpbnRlcnJ1cHRlZCB3aGlsZSBydW5uaW5nIHN0YXJ0dXAuIHtzZXJ2aWNlTmFtZT1VcGRhdGVTeXN0ZW1Qb2xpY3lTZXJ2aWNlLCBjdXJyZW50U3RhdGU9U1RPUFBJTkd9CjIwMjMtMDQtMTFUMDI6MDA6NTEuMTYxWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMzQpIGNvbS5hd3MuZ3JlZW5ncmFzcy5sYW1iZGFtYW5hZ2VyLlVzZXJMYW1iZGFTZXJ2aWNlOiBzZXJ2aWNlLWNsb3NlLiBTZXJ2aWNlIGlzIG5vdyBjbG9zaW5nLiB7c2VydmljZUluc3RhbmNlPTAsIHNlcnZpY2VOYW1lPWlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODQ0MTUzMTM2MTI5MjkwMTc5MiwgY3VycmVudFN0YXRlPU5FV30KMjAyMy0wNC0xMVQwMjowMDo1MS4xNzNaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0zNSkgY29tLmF3cy5ncmVlbmdyYXNzLmxhbWJkYW1hbmFnZXIuVXNlckxhbWJkYVNlcnZpY2U6IHNlcnZpY2UtY2xvc2UuIFNlcnZpY2UgaXMgbm93IGNsb3NpbmcuIHtzZXJ2aWNlSW5zdGFuY2U9MSwgc2VydmljZU5hbWU9aWR0LWdndjItbGFtYmRhLWZ1bmN0aW9uLWlkdC04NDQxNTMxMzYxMjkyOTAxNzkyLCBjdXJyZW50U3RhdGU9U1RPUFBJTkd9CjIwMjMtMDQtMTFUMDI6MDA6NTEuMTc1WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMzgpIGNvbS5hd3MuZ3JlZW5ncmFzcy50ZXMuVG9rZW5FeGNoYW5nZVNlcnZpY2U6IHNlcnZpY2UtY2xvc2UuIFNlcnZpY2UgaXMgbm93IGNsb3NpbmcuIHtzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Ub2tlbkV4Y2hhbmdlU2VydmljZSwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDQtMTFUMDI6MDA6NTEuMTczWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMzcpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLkdlbmVyaWNFeHRlcm5hbFNlcnZpY2U6IHNlcnZpY2UtY2xvc2UuIFNlcnZpY2UgaXMgbm93IGNsb3NpbmcuIHtzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5MYW1iZGFMYXVuY2hlciwgY3VycmVudFN0YXRlPUZJTklTSEVEfQoyMDIzLTA0LTExVDAyOjAwOjUxLjE3OVogW0lORk9dIChwb29sLTItdGhyZWFkLTQwKSBjb20uYXdzLmdyZWVuZ3Jhc3MudGVsZW1ldHJ5LlRlbGVtZXRyeUFnZW50OiBDYW5jZWxsaW5nIGFsbCB0ZWxlbWV0cnkgc2NoZWR1bGVkIHRhc2tzLi4ge3NlcnZpY2VOYW1lPVRlbGVtZXRyeUFnZW50LCBjdXJyZW50U3RhdGU9U1RPUFBJTkd9CjIwMjMtMDQtMTFUMDI6MDA6NTEuMTgxWiBbSU5GT10gKFRlbGVtZXRyeUFnZW50LWxpZmVjeWNsZSkgY29tLmF3cy5ncmVlbmdyYXNzLnRlbGVtZXRyeS5UZWxlbWV0cnlBZ2VudDogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1UZWxlbWV0cnlBZ2VudCwgY3VycmVudFN0YXRlPVNUT1BQSU5HLCBuZXdTdGF0ZT1GSU5JU0hFRH0KMjAyMy0wNC0xMVQwMjowMDo1MS42MDdaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNykgY29tLmF3cy5ncmVlbmdyYXNzLmxhbWJkYW1hbmFnZXIuTGFtYmRhUmVxdWVzdEhhbmRsZXI6IGdldC13b3JrLWl0ZW0uIEdldCB3b3JrIG9wZXJhdGlvbiBnb3QgaW50ZXJydXB0ZWQuIHthcm49YXJuOmF3czpsYW1iZGE6dXMtd2VzdC0yOjExNjQwNzc0NDUwODpmdW5jdGlvbjppZHQtZ2d2Mi1sYW1iZGEtZnVuY3Rpb24taWR0LTg0NDE1MzEzNjEyOTI5MDE3OTI6MX0KMjAyMy0wNC0xMVQwMjowMDo1MS44NzRaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0zNikgY29tLmF3cy5ncmVlbmdyYXNzLmxhbWJkYW1hbmFnZXIuVXNlckxhbWJkYVNlcnZpY2U6IGdlbmVyaWMtc2VydmljZS1zaHV0ZG93bi4ge3NlcnZpY2VJbnN0YW5jZT0xLCBzZXJ2aWNlTmFtZT1pZHQtZ2d2Mi1sYW1iZGEtZnVuY3Rpb24taWR0LTg0NDE1MzEzNjEyOTI5MDE3OTIsIGN1cnJlbnRTdGF0ZT1TVE9QUElOR30KMjAyMy0wNC0xMVQwMjowMDo1MS44ODBaIFtJTkZPXSAoaWR0LWdndjItbGFtYmRhLWZ1bmN0aW9uLWlkdC04NDQxNTMxMzYxMjkyOTAxNzkyIzEtbGlmZWN5Y2xlKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGFtYmRhbWFuYWdlci5Vc2VyTGFtYmRhU2VydmljZTogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlSW5zdGFuY2U9MSwgc2VydmljZU5hbWU9aWR0LWdndjItbGFtYmRhLWZ1bmN0aW9uLWlkdC04NDQxNTMxMzYxMjkyOTAxNzkyLCBjdXJyZW50U3RhdGU9U1RPUFBJTkcsIG5ld1N0YXRlPUZJTklTSEVEfQoyMDIzLTA0LTExVDAyOjAwOjUxLjg4MlogW0lORk9dIChhd3MuZ3JlZW5ncmFzcy5Ub2tlbkV4Y2hhbmdlU2VydmljZS1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy50ZXMuVG9rZW5FeGNoYW5nZVNlcnZpY2U6IHNlcnZpY2Utc2V0LXN0YXRlLiB7c2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuVG9rZW5FeGNoYW5nZVNlcnZpY2UsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HLCBuZXdTdGF0ZT1TVE9QUElOR30KMjAyMy0wNC0xMVQwMjowMDo1MS44ODJaIFtJTkZPXSAoYXdzLmdyZWVuZ3Jhc3MuTGFtYmRhTWFuYWdlci1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5sYW1iZGFtYW5hZ2VyLkxhbWJkYU1hbmFnZXI6IHNlcnZpY2Utc2V0LXN0YXRlLiB7c2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuTGFtYmRhTWFuYWdlciwgY3VycmVudFN0YXRlPVJVTk5JTkcsIG5ld1N0YXRlPVNUT1BQSU5HfQoyMDIzLTA0LTExVDAyOjAwOjUxLjg4M1ogW0lORk9dIChwb29sLTItdGhyZWFkLTM1KSBjb20uYXdzLmdyZWVuZ3Jhc3MubGFtYmRhbWFuYWdlci5MYW1iZGFTZXJ2ZXI6IFNodXR0aW5nIGRvd24gbGFtYmRhIHNlcnZlci4ge30KMjAyMy0wNC0xMVQwMjowMDo1MS44ODNaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xOSkgY29tLmF3cy5ncmVlbmdyYXNzLnRlcy5Ub2tlbkV4Y2hhbmdlU2VydmljZTogVG9rZW5FeGNoYW5nZVNlcnZpY2UgaXMgc2h1dHRpbmcgZG93biEuIHtzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Ub2tlbkV4Y2hhbmdlU2VydmljZSwgY3VycmVudFN0YXRlPVNUT1BQSU5HfQoyMDIzLTA0LTExVDAyOjAwOjUxLjk5MlogW0lORk9dIChhd3MuZ3JlZW5ncmFzcy5MYW1iZGFNYW5hZ2VyLWxpZmVjeWNsZSkgY29tLmF3cy5ncmVlbmdyYXNzLmxhbWJkYW1hbmFnZXIuTGFtYmRhTWFuYWdlcjogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5MYW1iZGFNYW5hZ2VyLCBjdXJyZW50U3RhdGU9U1RPUFBJTkcsIG5ld1N0YXRlPUZJTklTSEVEfQoyMDIzLTA0LTExVDAyOjAwOjUxLjk5MlogW1dBUk5dIChwb29sLTItdGhyZWFkLTIyKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGFtYmRhbWFuYWdlci5GaWxlU3luYzogZmlsZS1zeW5jLiBUaHJlYWQgaW50ZXJydXB0ZWQgd2hpbGUgd2FpdGluZy4ge30KMjAyMy0wNC0xMVQwMjowMDo1Mi44ODdaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xOSkgY29tLmF3cy5ncmVlbmdyYXNzLnRlcy5Ub2tlbkV4Y2hhbmdlU2VydmljZTogU3RvcHBlZCBzZXJ2ZXIgYXQgcG9ydCAzODE1Ny4ge3NlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLlRva2VuRXhjaGFuZ2VTZXJ2aWNlLCBjdXJyZW50U3RhdGU9U1RPUFBJTkd9CjIwMjMtMDQtMTFUMDI6MDA6NTIuODg4WiBbSU5GT10gKGF3cy5ncmVlbmdyYXNzLlRva2VuRXhjaGFuZ2VTZXJ2aWNlLWxpZmVjeWNsZSkgY29tLmF3cy5ncmVlbmdyYXNzLnRlcy5Ub2tlbkV4Y2hhbmdlU2VydmljZTogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Ub2tlbkV4Y2hhbmdlU2VydmljZSwgY3VycmVudFN0YXRlPVNUT1BQSU5HLCBuZXdTdGF0ZT1GSU5JU0hFRH0KMjAyMy0wNC0xMVQwMjowMDo1Mi45MzVaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0zMSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuS2VybmVsOiBlZmZlY3RpdmUtY29uZmlnLWR1bXAtY29tcGxldGUuIHtmaWxlPS90ZXN0L2dyZWVuZ3Jhc3MvdjIvY29uZmlnL2VmZmVjdGl2ZUNvbmZpZy55YW1sfQoyMDIzLTA0LTExVDAyOjAwOjUyLjk0M1ogW0lORk9dIChwb29sLTItdGhyZWFkLTMxKSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5EZXBsb3ltZW50RGlyZWN0b3J5TWFuYWdlcjogUGVyc2lzdCBjb25maWd1cmF0aW9uIHNuYXBzaG90LiB7ZmlsZT0vdGVzdC9ncmVlbmdyYXNzL3YyL2RlcGxveW1lbnRzLzBkMjBjYzRiLTA5NmYtNDQ2OS1hZWVlLTVmODVkMDM4YTZkNy90YXJnZXRfY29uZmlnLnRsb2d9CjIwMjMtMDQtMTFUMDI6MDA6NTIuOTc3WiBbSU5GT10gKFNlcmlhbGl6ZWQgbGlzdGVuZXIgcHJvY2Vzc29yKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5LZXJuZWw6IEF0dGVtcHQgdG8gbG9hZCBzZXJ2aWNlIGZyb20gcGx1Z2lucy4ge3NlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyfQoyMDIzLTA0LTExVDAyOjAwOjUyLjk4MlogW0lORk9dIChwb29sLTItdGhyZWFkLTMxKSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5ib290c3RyYXAuQm9vdHN0cmFwTWFuYWdlcjogU2F2aW5nIGJvb3RzdHJhcCB0YXNrIGxpc3QgdG8gZmlsZS4ge2ZpbGVQYXRoPS90ZXN0L2dyZWVuZ3Jhc3MvdjIvZGVwbG95bWVudHMvMGQyMGNjNGItMDk2Zi00NDY5LWFlZWUtNWY4NWQwMzhhNmQ3L2Jvb3RzdHJhcF90YXNrLmpzb259CjIwMjMtMDQtMTFUMDI6MDA6NTIuOTkxWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMzEpIGNvbS5hd3MuZ3JlZW5ncmFzcy5kZXBsb3ltZW50LmJvb3RzdHJhcC5Cb290c3RyYXBNYW5hZ2VyOiBCb290c3RyYXAgdGFzayBsaXN0IGlzIHNhdmVkIHRvIGZpbGUuIHtmaWxlUGF0aD0vdGVzdC9ncmVlbmdyYXNzL3YyL2RlcGxveW1lbnRzLzBkMjBjYzRiLTA5NmYtNDQ2OS1hZWVlLTVmODVkMDM4YTZkNy9ib290c3RyYXBfdGFzay5qc29ufQoyMDIzLTA0LTExVDAyOjAwOjUyLjk5MVogW0lORk9dIChwb29sLTItdGhyZWFkLTMxKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5LZXJuZWxBbHRlcm5hdGl2ZXM6IFNldHRpbmcgdXAgbGF1bmNoIGRpcmVjdG9yeSBmb3IgbmV3IE51Y2xldXMuIHt9CjIwMjMtMDQtMTFUMDI6MDA6NTIuOTk5WiBbSU5GT10gKFNlcmlhbGl6ZWQgbGlzdGVuZXIgcHJvY2Vzc29yKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5LZXJuZWw6IEF0dGVtcHQgdG8gbG9hZCBzZXJ2aWNlIGZyb20gcGx1Z2lucy4ge3NlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRQdWJsaXNoZXJ9CjIwMjMtMDQtMTFUMDI6MDA6NTMuMDAyWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMzEpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLktlcm5lbEFsdGVybmF0aXZlczogRmluaXNoZWQgc2V0dXAgb2YgbGF1bmNoIGRpcmVjdG9yeSBmb3IgbmV3IE51Y2xldXMuIHt9CjIwMjMtMDQtMTFUMDI6MDA6NTMuMDAzWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMzEpIGNvbS5hd3MuZ3JlZW5ncmFzcy5kZXBsb3ltZW50LmFjdGl2YXRvci5EZXBsb3ltZW50QWN0aXZhdG9yOiBDb21wbGV0ZWQgYWxsIGJvb3RzdHJhcCB0YXNrcy4gQ29udGludWUgdG8gYWN0aXZhdGUgZGVwbG95bWVudCBjaGFuZ2VzLiB7fQoyMDIzLTA0LTExVDAyOjAwOjUzLjAwM1ogW0lORk9dIChwb29sLTItdGhyZWFkLTMxKSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5hY3RpdmF0b3IuRGVwbG95bWVudEFjdGl2YXRvcjogTnVjbGV1cyByZXN0YXJ0IHJlcXVlc3RlZCB0byBjb21wbGV0ZSBib290c3RyYXAgdGFzay4ge30KMjAyMy0wNC0xMVQwMjowMDo1My4wMDRaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0zMSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuS2VybmVsTGlmZWN5Y2xlOiBzeXN0ZW0tc2h1dGRvd24uIHttYWluPXNlcnZpY2VzLm1haW46RklOSVNIRUR9CjIwMjMtMDQtMTFUMDI6MDA6NTMuMjYxWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTkpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLkdlbmVyaWNFeHRlcm5hbFNlcnZpY2U6IHNlcnZpY2UtY2xvc2UuIFNlcnZpY2UgaXMgbm93IGNsb3NpbmcuIHtzZXJ2aWNlTmFtZT1tYWluLCBjdXJyZW50U3RhdGU9RklOSVNIRUR9CjIwMjMtMDQtMTFUMDI6MDA6NTMuMjYzWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTgpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLkdlbmVyaWNFeHRlcm5hbFNlcnZpY2U6IHNlcnZpY2UtY2xvc2UuIFNlcnZpY2UgaXMgbm93IGNsb3NpbmcuIHtzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0U3Vic2NyaWJlciwgY3VycmVudFN0YXRlPU5FV30KMjAyMy0wNC0xMVQwMjowMDo1My4yNjFaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0yMikgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuR2VuZXJpY0V4dGVybmFsU2VydmljZTogc2VydmljZS1jbG9zZS4gU2VydmljZSBpcyBub3cgY2xvc2luZy4ge3NlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRQdWJsaXNoZXIsIGN1cnJlbnRTdGF0ZT1ORVd9CjIwMjMtMDQtMTFUMDI6MDA6NTMuMjYzWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMzUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLkdlbmVyaWNFeHRlcm5hbFNlcnZpY2U6IHNlcnZpY2UtY2xvc2UuIFNlcnZpY2UgaXMgbm93IGNsb3NpbmcuIHtzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5OdWNsZXVzLCBjdXJyZW50U3RhdGU9RklOSVNIRUR9CjIwMjMtMDQtMTFUMDI6MDA6NTMuMjYzWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMzIpIGNvbS5hd3MuZ3JlZW5ncmFzcy5kZXBsb3ltZW50LkRlcGxveW1lbnRTZXJ2aWNlOiBzZXJ2aWNlLWNsb3NlLiBTZXJ2aWNlIGlzIG5vdyBjbG9zaW5nLiB7c2VydmljZU5hbWU9RGVwbG95bWVudFNlcnZpY2UsIGN1cnJlbnRTdGF0ZT1GSU5JU0hFRH0KMjAyMy0wNC0xMVQwMjowMDo1My4yNjVaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0zNykgY29tLmF3cy5ncmVlbmdyYXNzLnN0YXR1cy5GbGVldFN0YXR1c1NlcnZpY2U6IHNlcnZpY2UtY2xvc2UuIFNlcnZpY2UgaXMgbm93IGNsb3NpbmcuIHtzZXJ2aWNlTmFtZT1GbGVldFN0YXR1c1NlcnZpY2UsIGN1cnJlbnRTdGF0ZT1GSU5JU0hFRH0KMjAyMy0wNC0xMVQwMjowMDo1My4yNjVaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xOSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuVXBkYXRlU3lzdGVtUG9saWN5U2VydmljZTogc2VydmljZS1jbG9zZS4gU2VydmljZSBpcyBub3cgY2xvc2luZy4ge3NlcnZpY2VOYW1lPVVwZGF0ZVN5c3RlbVBvbGljeVNlcnZpY2UsIGN1cnJlbnRTdGF0ZT1GSU5JU0hFRH0KMjAyMy0wNC0xMVQwMjowMDo1My4yNjVaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0zOCkgY29tLmF3cy5ncmVlbmdyYXNzLnRlbGVtZXRyeS5UZWxlbWV0cnlBZ2VudDogc2VydmljZS1jbG9zZS4gU2VydmljZSBpcyBub3cgY2xvc2luZy4ge3NlcnZpY2VOYW1lPVRlbGVtZXRyeUFnZW50LCBjdXJyZW50U3RhdGU9RklOSVNIRUR9CjIwMjMtMDQtMTFUMDI6MDA6NTMuMjY2WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMzEpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLktlcm5lbExpZmVjeWNsZTogV2FpdGluZyBmb3Igc2VydmljZXMgdG8gc2h1dGRvd24uIHt9CjIwMjMtMDQtMTFUMDI6MDA6NTMuMzA3WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMzEpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLktlcm5lbDogZWZmZWN0aXZlLWNvbmZpZy1kdW1wLWNvbXBsZXRlLiB7ZmlsZT0vdGVzdC9ncmVlbmdyYXNzL3YyL2NvbmZpZy9lZmZlY3RpdmVDb25maWcueWFtbH0KMjAyMy0wNC0xMVQwMjowMDo1My4zMTFaIFtXQVJOXSAocG9vbC0yLXRocmVhZC0xMykgY29tLmF3cy5ncmVlbmdyYXNzLm1xdHRjbGllbnQuTXF0dENsaWVudDogU2h1dHRpbmcgZG93biBzcG9vbGVyIHRhc2suIHt9CjIwMjMtMDQtMTFUMDI6MDA6NTMuMzExWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMzEpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLktlcm5lbExpZmVjeWNsZTogV2FpdGluZyBmb3IgZXhlY3V0b3JzIHRvIHNodXRkb3duLiB7fQoyMDIzLTA0LTExVDAyOjAwOjUzLjMxNVogW0lORk9dIChwb29sLTItdGhyZWFkLTMwKSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5EZXBsb3ltZW50U2VydmljZTogZGVwbG95bWVudC10YXNrLWV4ZWN1dGlvbi4gQ2FuY2VsbGVkIGRlcGxveW1lbnQgbWVyZ2UgZnV0dXJlIGR1ZSB0byBpbnRlcnJ1cHQsIHVwZGF0ZSBtYXkgbm90IGdldCBjYW5jZWxsZWQgaWYgaXQgaXMgYWxyZWFkeSBiZWluZyBhcHBsaWVkLiB7ZGVwbG95bWVudElkPTBkMjBjYzRiLTA5NmYtNDQ2OS1hZWVlLTVmODVkMDM4YTZkNywgc2VydmljZU5hbWU9RGVwbG95bWVudFNlcnZpY2UsIGN1cnJlbnRTdGF0ZT1GSU5JU0hFRH0KMjAyMy0wNC0xMVQwMjowMDo1My4zMTJaIFtJTkZPXSAoU2VyaWFsaXplZCBsaXN0ZW5lciBwcm9jZXNzb3IpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLktlcm5lbExpZmVjeWNsZTogZXhlY3V0b3Itc2VydmljZS1zaHV0ZG93bi1pbml0aWF0ZWQuIHt9CjIwMjMtMDQtMTFUMDI6MDE6MjMuMzEzWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMzEpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLktlcm5lbExpZmVjeWNsZTogZXhlY3V0b3Itc2VydmljZS1zaHV0ZG93bi1jb21wbGV0ZS4ge2V4ZWN1dG9yLXRlcm1pbmF0ZWQ9ZmFsc2UsIHNjaGVkdWxlZC1leGVjdXRvci10ZXJtaW5hdGVkPXRydWV9CjIwMjMtMDQtMTFUMDI6MDE6MjMuMzE1WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMzEpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLktlcm5lbExpZmVjeWNsZTogY29udGV4dC1zaHV0ZG93bi1pbml0aWF0ZWQuIHt9CjIwMjMtMDQtMTFUMDI6MDE6MjMuMzIxWiBbSU5GT10gKFRocmVhZC00KSBjb20uYXdzLmdyZWVuZ3Jhc3MubXF0dGNsaWVudC5Bd3NJb3RNcXR0Q2xpZW50OiBDb25uZWN0aW9uIHB1cnBvc2VmdWxseSBpbnRlcnJ1cHRlZC4ge2NsaWVudElkPUVBQ0lNMjB9CjIwMjMtMDQtMTFUMDI6MDE6MjMuMzIzWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMzEpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLktlcm5lbExpZmVjeWNsZTogY29udGV4dC1zaHV0ZG93bi1jb21wbGV0ZS4ge30KMjAyMy0wNC0xMVQwMjowMToyNi45MTVaIFtJTkZPXSAobWFpbikgY29tLmF3cy5ncmVlbmdyYXNzLnV0aWwucGxhdGZvcm1zLlBsYXRmb3JtOiBHZXR0aW5nIHBsYXRmb3JtIGluc3RhbmNlIGNvbS5hd3MuZ3JlZW5ncmFzcy51dGlsLnBsYXRmb3Jtcy51bml4LmxpbnV4LkxpbnV4UGxhdGZvcm0uLiB7fQoyMDIzLTA0LTExVDAyOjAxOjI3LjI5MVogW0lORk9dIChtYWluKSBjb20uYXdzLmdyZWVuZ3Jhc3MuY29uZmlnLkNvbmZpZ3VyYXRpb246IGNvbmZpZy1sb2FkaW5nLiBSZWFkIGNvbmZpZ3VyYXRpb24gZnJvbSBhIGZpbGUgcGF0aC4ge3BhdGg9L3Rlc3QvZ3JlZW5ncmFzcy92Mi9kZXBsb3ltZW50cy8wZDIwY2M0Yi0wOTZmLTQ0NjktYWVlZS01Zjg1ZDAzOGE2ZDcvdGFyZ2V0X2NvbmZpZy50bG9nfQoyMDIzLTA0LTExVDAyOjAxOjI3Ljg5OVogW0lORk9dIChtYWluKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5LZXJuZWw6IGVmZmVjdGl2ZS1jb25maWctZHVtcC1jb21wbGV0ZS4ge2ZpbGU9L3Rlc3QvZ3JlZW5ncmFzcy92Mi9jb25maWcvZWZmZWN0aXZlQ29uZmlnLnlhbWx9CjIwMjMtMDQtMTFUMDI6MDE6MjguNDc5WiBbSU5GT10gKG1haW4pIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLktlcm5lbDogUmVzdW1lIGRlcGxveW1lbnQuIHtkZXBsb3ltZW50U3RhZ2U9S0VSTkVMX0FDVElWQVRJT059CjIwMjMtMDQtMTFUMDI6MDE6MjguNDgzWiBbSU5GT10gKG1haW4pIGNvbS5hd3MuZ3JlZW5ncmFzcy5kZXBsb3ltZW50LkRlcGxveW1lbnREaXJlY3RvcnlNYW5hZ2VyOiBMb2FkIGRlcGxveW1lbnQgbWV0YWRhdGEuIHtmaWxlPS90ZXN0L2dyZWVuZ3Jhc3MvdjIvZGVwbG95bWVudHMvMGQyMGNjNGItMDk2Zi00NDY5LWFlZWUtNWY4NWQwMzhhNmQ3L2RlcGxveW1lbnRfbWV0YWRhdGEuanNvbn0KMjAyMy0wNC0xMVQwMjowMToyOC43NTFaIFtJTkZPXSAobWFpbikgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuS2VybmVsTGlmZWN5Y2xlOiBzeXN0ZW0tc3RhcnQuIExhdW5jaCBOdWNsZXVzLiB7Y29uZmlnUGF0aD0vdGVzdC9ncmVlbmdyYXNzL3YyL2NvbmZpZywgcm9vdFBhdGg9L3Rlc3QvZ3JlZW5ncmFzcy92MiwgdmVyc2lvbj0yLjkuNX0KMjAyMy0wNC0xMVQwMjowMToyOS4yOThaIFtJTkZPXSAobWFpbikgc29mdHdhcmUuYW1hem9uLmF3c3Nkay5ldmVudHN0cmVhbXJwYy5ScGNTZXJ2ZXI6IElwY1NlcnZlciBzdGFydGVkLi4uLiB7fQoyMDIzLTA0LTExVDAyOjAxOjI5LjU0MVogW0lORk9dIChtYWluKSBjb20uYXdzLmdyZWVuZ3Jhc3Muc2VjdXJpdHkuU2VjdXJpdHlTZXJ2aWNlOiBSZWdpc3RlciBjcnlwdG8ga2V5IHNlcnZpY2UgcHJvdmlkZXIuIHtrZXlUeXBlPWZpbGV9CjIwMjMtMDQtMTFUMDI6MDE6MjkuNTQ0WiBbSU5GT10gKG1haW4pIGNvbS5hd3MuZ3JlZW5ncmFzcy5zZWN1cml0eS5TZWN1cml0eVNlcnZpY2U6IFJlZ2lzdGVyIGNyeXB0byBrZXkgc2VydmljZSBwcm92aWRlci4ge2tleVR5cGU9ZmlsZX0KMjAyMy0wNC0xMVQwMjowMToyOS41NzJaIFtJTkZPXSAobWFpbikgY29tLmF3cy5ncmVlbmdyYXNzLm1xdHRjbGllbnQuc3Bvb2wuU3Bvb2w6IFNwb29sZXIgaGFzIGJlZW4gY29uZmlndXJlZC4ge21heFNpemVJbkJ5dGVzPTI2MjE0NDAsIHN0b3JhZ2VUeXBlPU1lbW9yeSwga2VlcFFvczBXaGVuT2ZmbGluZT1mYWxzZX0KMjAyMy0wNC0xMVQwMjowMToyOS42OTJaIFtJTkZPXSAobWFpbikgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuS2VybmVsTGlmZWN5Y2xlOiBzZXJ2aWNlSW1wbGVtZW50b3JzOiB7VXBkYXRlU3lzdGVtUG9saWN5U2VydmljZTpjbGFzcyBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5VcGRhdGVTeXN0ZW1Qb2xpY3lTZXJ2aWNlLi4ufS4ge30KMjAyMy0wNC0xMVQwMjowMToyOS43MDhaIFtJTkZPXSAobWFpbikgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuS2VybmVsOiBBdHRlbXB0IHRvIGxvYWQgc2VydmljZSBmcm9tIHBsdWdpbnMuIHtzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0U3Vic2NyaWJlcn0KMjAyMy0wNC0xMVQwMjowMToyOS44MTZaIFtJTkZPXSAobWFpbikgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuS2VybmVsOiBBdHRlbXB0IHRvIGxvYWQgc2VydmljZSBmcm9tIHBsdWdpbnMuIHtzZXJ2aWNlTmFtZT1GbGVldFN0YXR1c1NlcnZpY2V9CjIwMjMtMDQtMTFUMDI6MDE6MjkuODYxWiBbSU5GT10gKG1haW4pIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLktlcm5lbDogQXR0ZW1wdCB0byBsb2FkIHNlcnZpY2UgZnJvbSBwbHVnaW5zLiB7c2VydmljZU5hbWU9RGVwbG95bWVudFNlcnZpY2V9CjIwMjMtMDQtMTFUMDI6MDE6MzAuMDM2WiBbSU5GT10gKG1haW4pIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLktlcm5lbDogQXR0ZW1wdCB0byBsb2FkIHNlcnZpY2UgZnJvbSBwbHVnaW5zLiB7c2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFB1Ymxpc2hlcn0KMjAyMy0wNC0xMVQwMjowMTozMC4wOTJaIFtJTkZPXSAobWFpbikgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuS2VybmVsOiBBdHRlbXB0IHRvIGxvYWQgc2VydmljZSBmcm9tIHBsdWdpbnMuIHtzZXJ2aWNlTmFtZT1UZWxlbWV0cnlBZ2VudH0KMjAyMy0wNC0xMVQwMjowMTozMC4xMDNaIFtJTkZPXSAocG9vbC0yLXRocmVhZC00KSBjb20uYXdzLmdyZWVuZ3Jhc3MubXF0dGNsaWVudC5Bd3NJb3RNcXR0Q2xpZW50OiBDb25uZWN0aW5nIHRvIEFXUyBJb1QgQ29yZS4ge2NsaWVudElkPUVBQ0lNMjB9CjIwMjMtMDQtMTFUMDI6MDE6MzAuMzYwWiBbSU5GT10gKG1haW4pIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLktlcm5lbDogQXR0ZW1wdCB0byBsb2FkIHNlcnZpY2UgZnJvbSBwbHVnaW5zLiB7c2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuTnVjbGV1c30KMjAyMy0wNC0xMVQwMjowMTozMC4zOTJaIFtJTkZPXSAobWFpbikgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuS2VybmVsOiBBdHRlbXB0IHRvIGxvYWQgc2VydmljZSBmcm9tIHBsdWdpbnMuIHtzZXJ2aWNlTmFtZT1VcGRhdGVTeXN0ZW1Qb2xpY3lTZXJ2aWNlfQoyMDIzLTA0LTExVDAyOjAxOjMwLjQwMVogW0lORk9dIChtYWluKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5LZXJuZWw6IEF0dGVtcHQgdG8gbG9hZCBzZXJ2aWNlIGZyb20gcGx1Z2lucy4ge3NlcnZpY2VOYW1lPW1haW59CjIwMjMtMDQtMTFUMDI6MDE6MzAuNTE4WiBbSU5GT10gKG1haW4pIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLktlcm5lbDogZWZmZWN0aXZlLWNvbmZpZy1kdW1wLWNvbXBsZXRlLiB7ZmlsZT0vdGVzdC9ncmVlbmdyYXNzL3YyL2NvbmZpZy9lZmZlY3RpdmVDb25maWcueWFtbH0KMjAyMy0wNC0xMVQwMjowMTozMC41MjBaIFtJTkZPXSAobWFpbikgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuS2VybmVsTGlmZWN5Y2xlOiBzeXN0ZW0tc3RhcnQuIHttYWluPXNlcnZpY2VzLm1haW46TkVXfQoyMDIzLTA0LTExVDAyOjAxOjMwLjU2MFogW0lORk9dIChhd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0U3Vic2NyaWJlci1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLkdlbmVyaWNFeHRlcm5hbFNlcnZpY2U6IHNlcnZpY2Utc2V0LXN0YXRlLiB7c2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIsIGN1cnJlbnRTdGF0ZT1ORVcsIG5ld1N0YXRlPUlOU1RBTExFRH0KMjAyMy0wNC0xMVQwMjowMTozMC41NjlaIFtJTkZPXSAoYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFB1Ymxpc2hlci1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLkdlbmVyaWNFeHRlcm5hbFNlcnZpY2U6IHNlcnZpY2Utc2V0LXN0YXRlLiB7c2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFB1Ymxpc2hlciwgY3VycmVudFN0YXRlPU5FVywgbmV3U3RhdGU9SU5TVEFMTEVEfQoyMDIzLTA0LTExVDAyOjAxOjMwLjU3NFogW0lORk9dIChhd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0U3Vic2NyaWJlci1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLkdlbmVyaWNFeHRlcm5hbFNlcnZpY2U6IHNlcnZpY2Utc2V0LXN0YXRlLiB7c2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIsIGN1cnJlbnRTdGF0ZT1JTlNUQUxMRUQsIG5ld1N0YXRlPVNUQVJUSU5HfQoyMDIzLTA0LTExVDAyOjAxOjMwLjU3NlogW0lORk9dIChGbGVldFN0YXR1c1NlcnZpY2UtbGlmZWN5Y2xlKSBjb20uYXdzLmdyZWVuZ3Jhc3Muc3RhdHVzLkZsZWV0U3RhdHVzU2VydmljZTogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1GbGVldFN0YXR1c1NlcnZpY2UsIGN1cnJlbnRTdGF0ZT1ORVcsIG5ld1N0YXRlPUlOU1RBTExFRH0KMjAyMy0wNC0xMVQwMjowMTozMC41ODNaIFtJTkZPXSAoRmxlZXRTdGF0dXNTZXJ2aWNlLWxpZmVjeWNsZSkgY29tLmF3cy5ncmVlbmdyYXNzLnN0YXR1cy5GbGVldFN0YXR1c1NlcnZpY2U6IHNlcnZpY2Utc2V0LXN0YXRlLiB7c2VydmljZU5hbWU9RmxlZXRTdGF0dXNTZXJ2aWNlLCBjdXJyZW50U3RhdGU9SU5TVEFMTEVELCBuZXdTdGF0ZT1TVEFSVElOR30KMjAyMy0wNC0xMVQwMjowMTozMC41OTBaIFtJTkZPXSAoRGVwbG95bWVudFNlcnZpY2UtbGlmZWN5Y2xlKSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5EZXBsb3ltZW50U2VydmljZTogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1EZXBsb3ltZW50U2VydmljZSwgY3VycmVudFN0YXRlPU5FVywgbmV3U3RhdGU9SU5TVEFMTEVEfQoyMDIzLTA0LTExVDAyOjAxOjMwLjU5NVogW0lORk9dIChGbGVldFN0YXR1c1NlcnZpY2UtbGlmZWN5Y2xlKSBjb20uYXdzLmdyZWVuZ3Jhc3Muc3RhdHVzLkZsZWV0U3RhdHVzU2VydmljZTogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1GbGVldFN0YXR1c1NlcnZpY2UsIGN1cnJlbnRTdGF0ZT1TVEFSVElORywgbmV3U3RhdGU9UlVOTklOR30KMjAyMy0wNC0xMVQwMjowMTozMC41OTZaIFtJTkZPXSAoRGVwbG95bWVudFNlcnZpY2UtbGlmZWN5Y2xlKSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5EZXBsb3ltZW50U2VydmljZTogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1EZXBsb3ltZW50U2VydmljZSwgY3VycmVudFN0YXRlPUlOU1RBTExFRCwgbmV3U3RhdGU9U1RBUlRJTkd9CjIwMjMtMDQtMTFUMDI6MDE6MzAuNjA1WiBbSU5GT10gKFRlbGVtZXRyeUFnZW50LWxpZmVjeWNsZSkgY29tLmF3cy5ncmVlbmdyYXNzLnRlbGVtZXRyeS5UZWxlbWV0cnlBZ2VudDogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1UZWxlbWV0cnlBZ2VudCwgY3VycmVudFN0YXRlPU5FVywgbmV3U3RhdGU9SU5TVEFMTEVEfQoyMDIzLTA0LTExVDAyOjAxOjMwLjYwOFogW0lORk9dIChtYWluLWxpZmVjeWNsZSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuR2VuZXJpY0V4dGVybmFsU2VydmljZTogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1tYWluLCBjdXJyZW50U3RhdGU9TkVXLCBuZXdTdGF0ZT1JTlNUQUxMRUR9CjIwMjMtMDQtMTFUMDI6MDE6MzAuNjIzWiBbSU5GT10gKFRlbGVtZXRyeUFnZW50LWxpZmVjeWNsZSkgY29tLmF3cy5ncmVlbmdyYXNzLnRlbGVtZXRyeS5UZWxlbWV0cnlBZ2VudDogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1UZWxlbWV0cnlBZ2VudCwgY3VycmVudFN0YXRlPUlOU1RBTExFRCwgbmV3U3RhdGU9U1RBUlRJTkd9CjIwMjMtMDQtMTFUMDI6MDE6MzAuNjI2WiBbSU5GT10gKERlcGxveW1lbnRTZXJ2aWNlLWxpZmVjeWNsZSkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudFNlcnZpY2U6IHNlcnZpY2Utc2V0LXN0YXRlLiB7c2VydmljZU5hbWU9RGVwbG95bWVudFNlcnZpY2UsIGN1cnJlbnRTdGF0ZT1TVEFSVElORywgbmV3U3RhdGU9UlVOTklOR30KMjAyMy0wNC0xMVQwMjowMTozMC42MjhaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudFNlcnZpY2U6IFJlY2VpdmVkIGRlcGxveW1lbnQgaW4gdGhlIHF1ZXVlLiB7RGVwbG95bWVudElkPWFybjphd3M6Z3JlZW5ncmFzczp1cy13ZXN0LTI6MTE2NDA3NzQ0NTA4OmNvbmZpZ3VyYXRpb246dGhpbmcvRUFDSU0yMDoyLCBHcmVlbmdyYXNzRGVwbG95bWVudElkPTBkMjBjYzRiLTA5NmYtNDQ2OS1hZWVlLTVmODVkMDM4YTZkNywgRGVwbG95bWVudFR5cGU9U0hBRE9XLCBzZXJ2aWNlTmFtZT1EZXBsb3ltZW50U2VydmljZSwgY3VycmVudFN0YXRlPVNUQVJUSU5HfQoyMDIzLTA0LTExVDAyOjAxOjMwLjYyOVogW0lORk9dIChUZWxlbWV0cnlBZ2VudC1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy50ZWxlbWV0cnkuVGVsZW1ldHJ5QWdlbnQ6IHNlcnZpY2Utc2V0LXN0YXRlLiB7c2VydmljZU5hbWU9VGVsZW1ldHJ5QWdlbnQsIGN1cnJlbnRTdGF0ZT1TVEFSVElORywgbmV3U3RhdGU9UlVOTklOR30KMjAyMy0wNC0xMVQwMjowMTozMC42MzZaIFtJTkZPXSAoYXdzLmdyZWVuZ3Jhc3MuTnVjbGV1cy1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLkdlbmVyaWNFeHRlcm5hbFNlcnZpY2U6IHNlcnZpY2Utc2V0LXN0YXRlLiB7c2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuTnVjbGV1cywgY3VycmVudFN0YXRlPU5FVywgbmV3U3RhdGU9SU5TVEFMTEVEfQoyMDIzLTA0LTExVDAyOjAxOjMwLjY0MVogW0lORk9dIChVcGRhdGVTeXN0ZW1Qb2xpY3lTZXJ2aWNlLWxpZmVjeWNsZSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuVXBkYXRlU3lzdGVtUG9saWN5U2VydmljZTogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1VcGRhdGVTeXN0ZW1Qb2xpY3lTZXJ2aWNlLCBjdXJyZW50U3RhdGU9TkVXLCBuZXdTdGF0ZT1JTlNUQUxMRUR9CjIwMjMtMDQtMTFUMDI6MDE6MzAuNjQ4WiBbSU5GT10gKFVwZGF0ZVN5c3RlbVBvbGljeVNlcnZpY2UtbGlmZWN5Y2xlKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5VcGRhdGVTeXN0ZW1Qb2xpY3lTZXJ2aWNlOiBzZXJ2aWNlLXNldC1zdGF0ZS4ge3NlcnZpY2VOYW1lPVVwZGF0ZVN5c3RlbVBvbGljeVNlcnZpY2UsIGN1cnJlbnRTdGF0ZT1JTlNUQUxMRUQsIG5ld1N0YXRlPVNUQVJUSU5HfQoyMDIzLTA0LTExVDAyOjAxOjMwLjY1MlogW0lORk9dIChhd3MuZ3JlZW5ncmFzcy5OdWNsZXVzLWxpZmVjeWNsZSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuR2VuZXJpY0V4dGVybmFsU2VydmljZTogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5OdWNsZXVzLCBjdXJyZW50U3RhdGU9SU5TVEFMTEVELCBuZXdTdGF0ZT1TVEFSVElOR30KMjAyMy0wNC0xMVQwMjowMTozMC42NjBaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xOCkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuR2VuZXJpY0V4dGVybmFsU2VydmljZTogZ2VuZXJpYy1zZXJ2aWNlLWZpbmlzaGVkLiBOb3RoaW5nIGRvbmUuIHtzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5OdWNsZXVzLCBjdXJyZW50U3RhdGU9U1RBUlRJTkd9CjIwMjMtMDQtMTFUMDI6MDE6MzAuNjYyWiBbSU5GT10gKGF3cy5ncmVlbmdyYXNzLk51Y2xldXMtbGlmZWN5Y2xlKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5HZW5lcmljRXh0ZXJuYWxTZXJ2aWNlOiBzZXJ2aWNlLXNldC1zdGF0ZS4ge3NlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLk51Y2xldXMsIGN1cnJlbnRTdGF0ZT1TVEFSVElORywgbmV3U3RhdGU9RklOSVNIRUR9CjIwMjMtMDQtMTFUMDI6MDE6MzAuNjY2WiBbSU5GT10gKGF3cy5ncmVlbmdyYXNzLk51Y2xldXMtbGlmZWN5Y2xlKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5HZW5lcmljRXh0ZXJuYWxTZXJ2aWNlOiBzZXJ2aWNlLXNldC1zdGF0ZS4ge3NlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLk51Y2xldXMsIGN1cnJlbnRTdGF0ZT1GSU5JU0hFRCwgbmV3U3RhdGU9U1RPUFBJTkd9CjIwMjMtMDQtMTFUMDI6MDE6MzAuNjY5WiBbSU5GT10gKFVwZGF0ZVN5c3RlbVBvbGljeVNlcnZpY2UtbGlmZWN5Y2xlKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5VcGRhdGVTeXN0ZW1Qb2xpY3lTZXJ2aWNlOiBzZXJ2aWNlLXNldC1zdGF0ZS4ge3NlcnZpY2VOYW1lPVVwZGF0ZVN5c3RlbVBvbGljeVNlcnZpY2UsIGN1cnJlbnRTdGF0ZT1TVEFSVElORywgbmV3U3RhdGU9UlVOTklOR30KMjAyMy0wNC0xMVQwMjowMTozMC42NzhaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNykgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuR2VuZXJpY0V4dGVybmFsU2VydmljZTogU2h1dGRvd24gaW5pdGlhdGVkLiB7c2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuTnVjbGV1cywgY3VycmVudFN0YXRlPVNUT1BQSU5HfQoyMDIzLTA0LTExVDAyOjAxOjMwLjY4NlogW0lORk9dIChwb29sLTItdGhyZWFkLTE3KSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5HZW5lcmljRXh0ZXJuYWxTZXJ2aWNlOiBnZW5lcmljLXNlcnZpY2Utc2h1dGRvd24uIHtzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5OdWNsZXVzLCBjdXJyZW50U3RhdGU9U1RPUFBJTkd9CjIwMjMtMDQtMTFUMDI6MDE6MzAuNjg3WiBbSU5GT10gKGF3cy5ncmVlbmdyYXNzLk51Y2xldXMtbGlmZWN5Y2xlKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5HZW5lcmljRXh0ZXJuYWxTZXJ2aWNlOiBzZXJ2aWNlLXNldC1zdGF0ZS4ge3NlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLk51Y2xldXMsIGN1cnJlbnRTdGF0ZT1TVE9QUElORywgbmV3U3RhdGU9RklOSVNIRUR9CjIwMjMtMDQtMTFUMDI6MDE6MzAuNzQ5WiBbSU5GT10gKG1haW4pIGNvbS5hd3MuZ3JlZW5ncmFzcy5zdGF0dXMuRmxlZXRTdGF0dXNTZXJ2aWNlOiBmc3Mtc3RhdHVzLXVwZGF0ZS1wdWJsaXNoZWQuIFN0YXR1cyB1cGRhdGUgcHVibGlzaGVkIHRvIEZTUy4ge3RyaWdnZXI9TlVDTEVVU19MQVVOQ0gsIHNlcnZpY2VOYW1lPUZsZWV0U3RhdHVzU2VydmljZSwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDQtMTFUMDI6MDE6MzAuNzU2WiBbSU5GT10gKGF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLWxpZmVjeWNsZSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuR2VuZXJpY0V4dGVybmFsU2VydmljZTogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0U3Vic2NyaWJlciwgY3VycmVudFN0YXRlPVNUQVJUSU5HLCBuZXdTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTExVDAyOjAxOjMwLjc1OFogW0lORk9dIChhd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0UHVibGlzaGVyLWxpZmVjeWNsZSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuR2VuZXJpY0V4dGVybmFsU2VydmljZTogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0UHVibGlzaGVyLCBjdXJyZW50U3RhdGU9SU5TVEFMTEVELCBuZXdTdGF0ZT1TVEFSVElOR30KMjAyMy0wNC0xMVQwMjowMTozMC43NzBaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudFN0YXR1c0tlZXBlcjogU3RvcmVkIGRlcGxveW1lbnQgc3RhdHVzLiB7RGVwbG95bWVudElkPWFybjphd3M6Z3JlZW5ncmFzczp1cy13ZXN0LTI6MTE2NDA3NzQ0NTA4OmNvbmZpZ3VyYXRpb246dGhpbmcvRUFDSU0yMDoyLCBHcmVlbmdyYXNzRGVwbG95bWVudElkPTBkMjBjYzRiLTA5NmYtNDQ2OS1hZWVlLTVmODVkMDM4YTZkNywgRGVwbG95bWVudFN0YXR1cz1JTl9QUk9HUkVTU30KMjAyMy0wNC0xMVQwMjowMTozMC44MzVaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuU2hhZG93RGVwbG95bWVudExpc3RlbmVyOiBVcGRhdGVkIHJlcG9ydGVkIHN0YXRlIGZvciBkZXBsb3ltZW50LiB7Q09ORklHVVJBVElPTl9BUk49YXJuOmF3czpncmVlbmdyYXNzOnVzLXdlc3QtMjoxMTY0MDc3NDQ1MDg6Y29uZmlndXJhdGlvbjp0aGluZy9FQUNJTTIwOjIsIHN0YXR1cz1JTl9QUk9HUkVTU30KMjAyMy0wNC0xMVQwMjowMTozMC44NDRaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudFNlcnZpY2U6IFN0YXJ0ZWQgZGVwbG95bWVudCBleGVjdXRpb24uIHtzZXJ2aWNlTmFtZT1EZXBsb3ltZW50U2VydmljZSwgY3VycmVudFN0YXRlPVJVTk5JTkcsIGRlcGxveW1lbnQ9YXJuOmF3czpncmVlbmdyYXNzOnVzLXdlc3QtMjoxMTY0MDc3NDQ1MDg6Y29uZmlndXJhdGlvbjp0aGluZy9FQUNJTTIwOjJ9CjIwMjMtMDQtMTFUMDI6MDE6MzAuODYzWiBbSU5GT10gKGF3cy5ncmVlbmdyYXNzLklvdE1xdHRQdWJsaXNoZXItbGlmZWN5Y2xlKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5HZW5lcmljRXh0ZXJuYWxTZXJ2aWNlOiBzZXJ2aWNlLXNldC1zdGF0ZS4ge3NlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRQdWJsaXNoZXIsIGN1cnJlbnRTdGF0ZT1TVEFSVElORywgbmV3U3RhdGU9UlVOTklOR30KMjAyMy0wNC0xMVQwMjowMTozMC44NzBaIFtJTkZPXSAobWFpbi1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLkdlbmVyaWNFeHRlcm5hbFNlcnZpY2U6IHNlcnZpY2Utc2V0LXN0YXRlLiB7c2VydmljZU5hbWU9bWFpbiwgY3VycmVudFN0YXRlPUlOU1RBTExFRCwgbmV3U3RhdGU9U1RBUlRJTkd9CjIwMjMtMDQtMTFUMDI6MDE6MzAuODc0WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTYpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLkdlbmVyaWNFeHRlcm5hbFNlcnZpY2U6IGdlbmVyaWMtc2VydmljZS1maW5pc2hlZC4gTm90aGluZyBkb25lLiB7c2VydmljZU5hbWU9bWFpbiwgY3VycmVudFN0YXRlPVNUQVJUSU5HfQoyMDIzLTA0LTExVDAyOjAxOjMwLjg3OFogW0lORk9dIChtYWluLWxpZmVjeWNsZSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuR2VuZXJpY0V4dGVybmFsU2VydmljZTogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1tYWluLCBjdXJyZW50U3RhdGU9U1RBUlRJTkcsIG5ld1N0YXRlPUZJTklTSEVEfQoyMDIzLTA0LTExVDAyOjAxOjMwLjg5MVogW0lORk9dIChtYWluLWxpZmVjeWNsZSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuR2VuZXJpY0V4dGVybmFsU2VydmljZTogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1tYWluLCBjdXJyZW50U3RhdGU9RklOSVNIRUQsIG5ld1N0YXRlPVNUT1BQSU5HfQoyMDIzLTA0LTExVDAyOjAxOjMwLjg5NVogW0lORk9dIChwb29sLTItdGhyZWFkLTE2KSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5HZW5lcmljRXh0ZXJuYWxTZXJ2aWNlOiBTaHV0ZG93biBpbml0aWF0ZWQuIHtzZXJ2aWNlTmFtZT1tYWluLCBjdXJyZW50U3RhdGU9U1RPUFBJTkd9CjIwMjMtMDQtMTFUMDI6MDE6MzAuODk2WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTYpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLkdlbmVyaWNFeHRlcm5hbFNlcnZpY2U6IGdlbmVyaWMtc2VydmljZS1zaHV0ZG93bi4ge3NlcnZpY2VOYW1lPW1haW4sIGN1cnJlbnRTdGF0ZT1TVE9QUElOR30KMjAyMy0wNC0xMVQwMjowMTozMC44OThaIFtJTkZPXSAobWFpbi1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLkdlbmVyaWNFeHRlcm5hbFNlcnZpY2U6IHNlcnZpY2Utc2V0LXN0YXRlLiB7c2VydmljZU5hbWU9bWFpbiwgY3VycmVudFN0YXRlPVNUT1BQSU5HLCBuZXdTdGF0ZT1GSU5JU0hFRH0KMjAyMy0wNC0xMVQwMjowMTozMS44NTZaIFtJTkZPXSAoVGhyZWFkLTUpIHNvZnR3YXJlLmFtYXpvbi5hd3NzZGsuZXZlbnRzdHJlYW1ycGMuUnBjU2VydmVyOiBOZXcgY29ubmVjdGlvbiBjb2RlIFtBV1NfRVJST1JfU1VDQ0VTU10gZm9yIFtJZCAzNywgQ2xhc3MgU2VydmVyQ29ubmVjdGlvbiwgUmVmcyAxXSgyMDIzLTA0LTExVDAyOjAxOjMxLjg1NDcwNjgxM1opIC0gPG51bGw+LiB7fQoyMDIzLTA0LTExVDAyOjAxOjMxLjg5NVogW0lORk9dIChUaHJlYWQtNSkgc29mdHdhcmUuYW1hem9uLmF3c3Nkay5ldmVudHN0cmVhbXJwYy5ScGNTZXJ2ZXI6IE5ldyBjb25uZWN0aW9uIGNvZGUgW0FXU19FUlJPUl9TVUNDRVNTXSBmb3IgW0lkIDM4LCBDbGFzcyBTZXJ2ZXJDb25uZWN0aW9uLCBSZWZzIDFdKDIwMjMtMDQtMTFUMDI6MDE6MzEuODk0ODI0NzExWikgLSA8bnVsbD4uIHt9CjIwMjMtMDQtMTFUMDI6MDE6MzEuOTAyWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTMpIGNvbS5hd3MuZ3JlZW5ncmFzcy5jb21wb25lbnRtYW5hZ2VyLkNvbXBvbmVudFN0b3JlOiBkZWxldGUtY29tcG9uZW50LWZpbmlzaC4ge2NvbXBvbmVudElkZW50aWZpZXI9YXdzLmdyZWVuZ3Jhc3MuVG9rZW5FeGNoYW5nZVNlcnZpY2UtdjIuMC4zfQoyMDIzLTA0LTExVDAyOjAxOjMxLjkyMlogW0lORk9dIChwb29sLTItdGhyZWFkLTEzKSBjb20uYXdzLmdyZWVuZ3Jhc3MuY29tcG9uZW50bWFuYWdlci5Db21wb25lbnRTdG9yZTogZGVsZXRlLWNvbXBvbmVudC1maW5pc2guIHtjb21wb25lbnRJZGVudGlmaWVyPWF3cy5ncmVlbmdyYXNzLkxhbWJkYUxhdW5jaGVyLXYyLjAuMTB9CjIwMjMtMDQtMTFUMDI6MDE6MzEuOTU4WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTMpIGNvbS5hd3MuZ3JlZW5ncmFzcy5jb21wb25lbnRtYW5hZ2VyLkNvbXBvbmVudFN0b3JlOiBkZWxldGUtY29tcG9uZW50LWZpbmlzaC4ge2NvbXBvbmVudElkZW50aWZpZXI9YXdzLmdyZWVuZ3Jhc3MuTGFtYmRhUnVudGltZXMtdjIuMC44fQoyMDIzLTA0LTExVDAyOjAxOjMyLjY4N1ogW0lORk9dIChUaHJlYWQtNSkgc29mdHdhcmUuYW1hem9uLmF3c3Nkay5ldmVudHN0cmVhbXJwYy5TZXJ2aWNlT3BlcmF0aW9uTWFwcGluZ0NvbnRpbnVhdGlvbkhhbmRsZXI6IGF3cy5ncmVlbmdyYXNzI0dyZWVuZ3Jhc3NDb3JlSVBDIGF1dGhlbnRpY2F0ZWQgaWRlbnRpdHk6IGF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLiB7fQoyMDIzLTA0LTExVDAyOjAxOjMyLjY5MFogW0lORk9dIChUaHJlYWQtNSkgc29mdHdhcmUuYW1hem9uLmF3c3Nkay5ldmVudHN0cmVhbXJwYy5TZXJ2aWNlT3BlcmF0aW9uTWFwcGluZ0NvbnRpbnVhdGlvbkhhbmRsZXI6IENvbm5lY3Rpb24gYWNjZXB0ZWQgZm9yIGF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLiB7fQoyMDIzLTA0LTExVDAyOjAxOjMyLjY5MlogW0lORk9dIChUaHJlYWQtNSkgc29mdHdhcmUuYW1hem9uLmF3c3Nkay5ldmVudHN0cmVhbXJwYy5TZXJ2aWNlT3BlcmF0aW9uTWFwcGluZ0NvbnRpbnVhdGlvbkhhbmRsZXI6IFNlbmRpbmcgY29ubmVjdCByZXNwb25zZSBmb3IgYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIuIHt9CjIwMjMtMDQtMTFUMDI6MDE6MzIuNjk4WiBbSU5GT10gKFRocmVhZC01KSBzb2Z0d2FyZS5hbWF6b24uYXdzc2RrLmV2ZW50c3RyZWFtcnBjLlNlcnZpY2VPcGVyYXRpb25NYXBwaW5nQ29udGludWF0aW9uSGFuZGxlcjogYXdzLmdyZWVuZ3Jhc3MjR3JlZW5ncmFzc0NvcmVJUEMgYXV0aGVudGljYXRlZCBpZGVudGl0eTogYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFB1Ymxpc2hlci4ge30KMjAyMy0wNC0xMVQwMjowMTozMi43MDFaIFtJTkZPXSAoVGhyZWFkLTUpIHNvZnR3YXJlLmFtYXpvbi5hd3NzZGsuZXZlbnRzdHJlYW1ycGMuU2VydmljZU9wZXJhdGlvbk1hcHBpbmdDb250aW51YXRpb25IYW5kbGVyOiBDb25uZWN0aW9uIGFjY2VwdGVkIGZvciBhd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0UHVibGlzaGVyLiB7fQoyMDIzLTA0LTExVDAyOjAxOjMyLjcwM1ogW0lORk9dIChUaHJlYWQtNSkgc29mdHdhcmUuYW1hem9uLmF3c3Nkay5ldmVudHN0cmVhbXJwYy5TZXJ2aWNlT3BlcmF0aW9uTWFwcGluZ0NvbnRpbnVhdGlvbkhhbmRsZXI6IFNlbmRpbmcgY29ubmVjdCByZXNwb25zZSBmb3IgYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFB1Ymxpc2hlci4ge30KMjAyMy0wNC0xMVQwMjowMTozMy4zMTBaIFtXQVJOXSAoVGhyZWFkLTUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLkdlbmVyaWNFeHRlcm5hbFNlcnZpY2U6IHNlcnZpY2UtaW52YWxpZC1zdGF0ZS1lcnJvci4gSW52YWxpZCByZXBvcnRlZCBzdGF0ZS4ge3NlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRQdWJsaXNoZXIsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HLCBuZXdTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTExVDAyOjAxOjMzLjc1NFogW0lORk9dIChwb29sLTItdGhyZWFkLTEzKSBjb20uYXdzLmdyZWVuZ3Jhc3MuY29tcG9uZW50bWFuYWdlci5Db21wb25lbnRTdG9yZTogZGVsZXRlLWNvbXBvbmVudC1maW5pc2guIHtjb21wb25lbnRJZGVudGlmaWVyPWlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODQ0MTUzMTM2MTI5MjkwMTc5Mi12MS4wLjB9CjIwMjMtMDQtMTFUMDI6MDE6MzMuNzcwWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTMpIGNvbS5hd3MuZ3JlZW5ncmFzcy5jb21wb25lbnRtYW5hZ2VyLkNvbXBvbmVudFN0b3JlOiBkZWxldGUtY29tcG9uZW50LWZpbmlzaC4ge2NvbXBvbmVudElkZW50aWZpZXI9YXdzLmdyZWVuZ3Jhc3MuTGFtYmRhTWFuYWdlci12Mi4yLjd9CjIwMjMtMDQtMTFUMDI6MDE6NDEuMTc4WiBbSU5GT10gKFRocmVhZC00KSBjb20uYXdzLmdyZWVuZ3Jhc3MubXF0dGNsaWVudC5Bd3NJb3RNcXR0Q2xpZW50OiBDb25uZWN0aW5nIHRvIEFXUyBJb1QgQ29yZS4ge2NsaWVudElkPUVBQ0lNMjB9CjIwMjMtMDQtMTFUMDI6MDE6NDEuMTgxWiBbSU5GT10gKFRocmVhZC00KSBjb20uYXdzLmdyZWVuZ3Jhc3MubXF0dGNsaWVudC5Bd3NJb3RNcXR0Q2xpZW50OiBDb25uZWN0aW9uIHB1cnBvc2VmdWxseSBpbnRlcnJ1cHRlZC4ge2NsaWVudElkPUVBQ0lNMjB9CjIwMjMtMDQtMTFUMDI6MDE6NDIuMDIwWiBbSU5GT10gKFRocmVhZC00KSBjb20uYXdzLmdyZWVuZ3Jhc3MubXF0dGNsaWVudC5Bd3NJb3RNcXR0Q2xpZW50OiBTdWNjZXNzZnVsbHkgY29ubmVjdGVkIHRvIEFXUyBJb1QgQ29yZS4ge2NsaWVudElkPUVBQ0lNMjAsIHNlc3Npb25QcmVzZW50PWZhbHNlfQoyMDIzLTA0LTExVDAyOjAxOjQyLjQ4MFogW0lORk9dIChUaHJlYWQtNSkgc29mdHdhcmUuYW1hem9uLmF3c3Nkay5ldmVudHN0cmVhbXJwYy5ScGNTZXJ2ZXI6IFNlcnZlciBjb25uZWN0aW9uIGNsb3NlZCBjb2RlIFtzb2NrZXQgaXMgY2xvc2VkLl06IFtJZCAzOCwgQ2xhc3MgU2VydmVyQ29ubmVjdGlvbiwgUmVmcyAxXSgyMDIzLTA0LTExVDAyOjAxOjMxLjg5NDgyNDcxMVopIC0gPG51bGw+LiB7fQoyMDIzLTA0LTExVDAyOjAxOjQyLjQ4NlogW1dBUk5dIChUaHJlYWQtNSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuR2VuZXJpY0V4dGVybmFsU2VydmljZTogc2VydmljZS1pbnZhbGlkLXN0YXRlLWVycm9yLiBJbnZhbGlkIHJlcG9ydGVkIHN0YXRlLiB7c2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HLCBuZXdTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTExVDAyOjAxOjQzLjgzMlogW0lORk9dIChDb3BpZXIpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLkdlbmVyaWNFeHRlcm5hbFNlcnZpY2U6IFJ1biBzY3JpcHQgZXhpdGVkLiB7ZXhpdENvZGU9MCwgc2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFB1Ymxpc2hlciwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDQtMTFUMDI6MDE6NDMuODM1WiBbSU5GT10gKENvcGllcikgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuR2VuZXJpY0V4dGVybmFsU2VydmljZTogZ2VuZXJpYy1zZXJ2aWNlLXN0b3BwaW5nLiBTZXJ2aWNlIGZpbmlzaGVkIHJ1bm5pbmcuIHtzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0UHVibGlzaGVyLCBjdXJyZW50U3RhdGU9UlVOTklOR30KMjAyMy0wNC0xMVQwMjowMTo0My44MzdaIFtJTkZPXSAoYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFB1Ymxpc2hlci1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLkdlbmVyaWNFeHRlcm5hbFNlcnZpY2U6IHNlcnZpY2Utc2V0LXN0YXRlLiB7c2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFB1Ymxpc2hlciwgY3VycmVudFN0YXRlPVJVTk5JTkcsIG5ld1N0YXRlPVNUT1BQSU5HfQoyMDIzLTA0LTExVDAyOjAxOjQzLjg0MVogW0lORk9dIChwb29sLTItdGhyZWFkLTQpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLkdlbmVyaWNFeHRlcm5hbFNlcnZpY2U6IFNodXRkb3duIGluaXRpYXRlZC4ge3NlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRQdWJsaXNoZXIsIGN1cnJlbnRTdGF0ZT1TVE9QUElOR30KMjAyMy0wNC0xMVQwMjowMTo0My44NDNaIFtJTkZPXSAocG9vbC0yLXRocmVhZC00KSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5HZW5lcmljRXh0ZXJuYWxTZXJ2aWNlOiBnZW5lcmljLXNlcnZpY2Utc2h1dGRvd24uIHtzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0UHVibGlzaGVyLCBjdXJyZW50U3RhdGU9U1RPUFBJTkd9CjIwMjMtMDQtMTFUMDI6MDE6NDMuODQ1WiBbSU5GT10gKGF3cy5ncmVlbmdyYXNzLklvdE1xdHRQdWJsaXNoZXItbGlmZWN5Y2xlKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5HZW5lcmljRXh0ZXJuYWxTZXJ2aWNlOiBzZXJ2aWNlLXNldC1zdGF0ZS4ge3NlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRQdWJsaXNoZXIsIGN1cnJlbnRTdGF0ZT1TVE9QUElORywgbmV3U3RhdGU9RklOSVNIRUR9CjIwMjMtMDQtMTFUMDI6MDE6NDQuMDg3WiBbSU5GT10gKFRocmVhZC00KSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5Jb3RKb2JzSGVscGVyOiBObyBkZXBsb3ltZW50IGpvYiBmb3VuZC4ge1RoaW5nTmFtZT1FQUNJTTIwfQoyMDIzLTA0LTExVDAyOjAxOjQ0LjQ0N1ogW0lORk9dIChUaHJlYWQtNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuU2hhZG93RGVwbG95bWVudExpc3RlbmVyOiBEdXBsaWNhdGUgZGVwbG95bWVudCBub3RpZmljYXRpb24uIElnbm9yaW5nIHNoYWRvdyB1cGRhdGUuIHtDT05GSUdVUkFUSU9OX0FSTj1hcm46YXdzOmdyZWVuZ3Jhc3M6dXMtd2VzdC0yOjExNjQwNzc0NDUwODpjb25maWd1cmF0aW9uOnRoaW5nL0VBQ0lNMjA6Mn0KMjAyMy0wNC0xMVQwMjowMTo0NS44NDZaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudFNlcnZpY2U6IEN1cnJlbnQgZGVwbG95bWVudCBmaW5pc2hlZC4ge0RlcGxveW1lbnRJZD1hcm46YXdzOmdyZWVuZ3Jhc3M6dXMtd2VzdC0yOjExNjQwNzc0NDUwODpjb25maWd1cmF0aW9uOnRoaW5nL0VBQ0lNMjA6MiwgR3JlZW5ncmFzc0RlcGxveW1lbnRJZD0wZDIwY2M0Yi0wOTZmLTQ0NjktYWVlZS01Zjg1ZDAzOGE2ZDcsIHNlcnZpY2VOYW1lPURlcGxveW1lbnRTZXJ2aWNlLCBjdXJyZW50U3RhdGU9UlVOTklOR30KMjAyMy0wNC0xMVQwMjowMTo0Ni4wMzhaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudFN0YXR1c0tlZXBlcjogU3RvcmVkIGRlcGxveW1lbnQgc3RhdHVzLiB7RGVwbG95bWVudElkPWFybjphd3M6Z3JlZW5ncmFzczp1cy13ZXN0LTI6MTE2NDA3NzQ0NTA4OmNvbmZpZ3VyYXRpb246dGhpbmcvRUFDSU0yMDoyLCBHcmVlbmdyYXNzRGVwbG95bWVudElkPTBkMjBjYzRiLTA5NmYtNDQ2OS1hZWVlLTVmODVkMDM4YTZkNywgRGVwbG95bWVudFN0YXR1cz1TVUNDRUVERUR9CjIwMjMtMDQtMTFUMDI6MDE6NDYuMDQ0WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTQpIGNvbS5hd3MuZ3JlZW5ncmFzcy5kZXBsb3ltZW50LlNoYWRvd0RlcGxveW1lbnRMaXN0ZW5lcjogVXBkYXRlZCByZXBvcnRlZCBzdGF0ZSBmb3IgZGVwbG95bWVudC4ge0NPTkZJR1VSQVRJT05fQVJOPWFybjphd3M6Z3JlZW5ncmFzczp1cy13ZXN0LTI6MTE2NDA3NzQ0NTA4OmNvbmZpZ3VyYXRpb246dGhpbmcvRUFDSU0yMDoyLCBzdGF0dXM9U1VDQ0VFREVEfQoyMDIzLTA0LTExVDAyOjAxOjQ2LjA5NVogW0lORk9dIChwb29sLTItdGhyZWFkLTE0KSBjb20uYXdzLmdyZWVuZ3Jhc3Muc3RhdHVzLkZsZWV0U3RhdHVzU2VydmljZTogZnNzLXN0YXR1cy11cGRhdGUtcHVibGlzaGVkLiBTdGF0dXMgdXBkYXRlIHB1Ymxpc2hlZCB0byBGU1MuIHt0cmlnZ2VyPVRISU5HX0RFUExPWU1FTlQsIHNlcnZpY2VOYW1lPUZsZWV0U3RhdHVzU2VydmljZSwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDQtMTFUMDI6MDE6NDYuMTAwWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTQpIGNvbS5hd3MuZ3JlZW5ncmFzcy5kZXBsb3ltZW50LkRlcGxveW1lbnREaXJlY3RvcnlNYW5hZ2VyOiBQZXJzaXN0IGxpbmsgdG8gbGFzdCBkZXBsb3ltZW50LiB7bGluaz0vdGVzdC9ncmVlbmdyYXNzL3YyL2RlcGxveW1lbnRzL3ByZXZpb3VzLXN1Y2Nlc3N9CjIwMjMtMDQtMTFUMDI6MDE6NDYuMTAxWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTQpIGNvbS5hd3MuZ3JlZW5ncmFzcy5kZXBsb3ltZW50LkRlcGxveW1lbnREaXJlY3RvcnlNYW5hZ2VyOiBDbGVhbiB1cCBsaW5rIHRvIGVhcmxpZXIgZGVwbG95bWVudC4ge2xpbms9L3Rlc3QvZ3JlZW5ncmFzcy92Mi9kZXBsb3ltZW50cy9wcmV2aW91cy1zdWNjZXNzfQoyMDIzLTA0LTExVDAyOjAxOjUzLjIzMFogW0lORk9dIChUaHJlYWQtNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuU2hhZG93RGVwbG95bWVudExpc3RlbmVyOiBBZGRlZCBzaGFkb3cgZGVwbG95bWVudCBqb2IuIHtJRD1hcm46YXdzOmdyZWVuZ3Jhc3M6dXMtd2VzdC0yOjExNjQwNzc0NDUwODpjb25maWd1cmF0aW9uOnRoaW5nL0VBQ0lNMjA6M30KMjAyMy0wNC0xMVQwMjowMjowMS4xMDdaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudFNlcnZpY2U6IFJlY2VpdmVkIGRlcGxveW1lbnQgaW4gdGhlIHF1ZXVlLiB7RGVwbG95bWVudElkPWFybjphd3M6Z3JlZW5ncmFzczp1cy13ZXN0LTI6MTE2NDA3NzQ0NTA4OmNvbmZpZ3VyYXRpb246dGhpbmcvRUFDSU0yMDozLCBHcmVlbmdyYXNzRGVwbG95bWVudElkPW51bGwsIERlcGxveW1lbnRUeXBlPVNIQURPVywgc2VydmljZU5hbWU9RGVwbG95bWVudFNlcnZpY2UsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTExVDAyOjAyOjAxLjEwOFogW0lORk9dIChwb29sLTItdGhyZWFkLTE0KSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5EZXBsb3ltZW50U2VydmljZTogUmVjZWl2ZWQgZGVwbG95bWVudCBkb2N1bWVudCBpbiBxdWV1ZS4ge2RvY3VtZW50PXsiZGVwbG95bWVudElkIjoiZDg4YWQyZGYtMTA3OS00Mjg1LThjZGItNjc0NTM5YzFkNTg5Iiwic2NoZW1hRGF0ZSI6IjIwMjEtMDUtMTciLCJkZXBsb3ltZW50TmFtZSI6IkVtcHR5RGVwbG95bWVudCIsImNvbmZpZ3VyYXRpb25Bcm4iOiJhcm46YXdzOmdyZWVuZ3Jhc3M6dXMtd2VzdC0yOjExNjQwNzc0NDUwODpjb25maWd1cmF0aW9uOnRoaW5nL0VBQ0lNMjA6MyIsImNyZWF0aW9uVGltZXN0YW1wIjoxNjgxMTc4NTEzMDQ2LCJjb21wb25lbnRzIjp7fSwiZmFpbHVyZUhhbmRsaW5nUG9saWN5IjoiUk9MTEJBQ0siLCJyZXF1aXJlZENhcGFiaWxpdGllcyI6W10sImNvbXBvbmVudFVwZGF0ZVBvbGljeSI6eyJ0aW1lb3V0Ijo2MCwiYWN0aW9uIjoiTk9USUZZX0NPTVBPTkVOVFMifSwiY29uZmlndXJhdGlvblZhbGlkYXRpb25Qb2xpY3kiOnsidGltZW91dCI6NjB9fSwgc2VydmljZU5hbWU9RGVwbG95bWVudFNlcnZpY2UsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTExVDAyOjAyOjAxLjE4NFogW0lORk9dIChwb29sLTItdGhyZWFkLTE0KSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5EZXBsb3ltZW50U3RhdHVzS2VlcGVyOiBTdG9yZWQgZGVwbG95bWVudCBzdGF0dXMuIHtEZXBsb3ltZW50SWQ9YXJuOmF3czpncmVlbmdyYXNzOnVzLXdlc3QtMjoxMTY0MDc3NDQ1MDg6Y29uZmlndXJhdGlvbjp0aGluZy9FQUNJTTIwOjMsIEdyZWVuZ3Jhc3NEZXBsb3ltZW50SWQ9ZDg4YWQyZGYtMTA3OS00Mjg1LThjZGItNjc0NTM5YzFkNTg5LCBEZXBsb3ltZW50U3RhdHVzPUlOX1BST0dSRVNTfQoyMDIzLTA0LTExVDAyOjAyOjAxLjE4OVogW0lORk9dIChwb29sLTItdGhyZWFkLTE0KSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5TaGFkb3dEZXBsb3ltZW50TGlzdGVuZXI6IFVwZGF0ZWQgcmVwb3J0ZWQgc3RhdGUgZm9yIGRlcGxveW1lbnQuIHtDT05GSUdVUkFUSU9OX0FSTj1hcm46YXdzOmdyZWVuZ3Jhc3M6dXMtd2VzdC0yOjExNjQwNzc0NDUwODpjb25maWd1cmF0aW9uOnRoaW5nL0VBQ0lNMjA6Mywgc3RhdHVzPUlOX1BST0dSRVNTfQoyMDIzLTA0LTExVDAyOjAyOjAxLjE5M1ogW0lORk9dIChwb29sLTItdGhyZWFkLTE0KSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5EZXBsb3ltZW50RGlyZWN0b3J5TWFuYWdlcjogQ3JlYXRlIHdvcmsgZGlyZWN0b3J5IGZvciBuZXcgZGVwbG95bWVudC4ge2RlcGxveW1lbnRJZD1kODhhZDJkZi0xMDc5LTQyODUtOGNkYi02NzQ1MzljMWQ1ODksIGxpbms9L3Rlc3QvZ3JlZW5ncmFzcy92Mi9kZXBsb3ltZW50cy9vbmdvaW5nLCBkaXJlY3Rvcnk9L3Rlc3QvZ3JlZW5ncmFzcy92Mi9kZXBsb3ltZW50cy9kODhhZDJkZi0xMDc5LTQyODUtOGNkYi02NzQ1MzljMWQ1ODl9CjIwMjMtMDQtMTFUMDI6MDI6MDEuMTk2WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTQpIGNvbS5hd3MuZ3JlZW5ncmFzcy5kZXBsb3ltZW50LkRlcGxveW1lbnREaXJlY3RvcnlNYW5hZ2VyOiBQZXJzaXN0IGRlcGxveW1lbnQgbWV0YWRhdGEuIHtmaWxlPS90ZXN0L2dyZWVuZ3Jhc3MvdjIvZGVwbG95bWVudHMvZDg4YWQyZGYtMTA3OS00Mjg1LThjZGItNjc0NTM5YzFkNTg5L2RlcGxveW1lbnRfbWV0YWRhdGEuanNvbiwgZGVwbG95bWVudElkPWQ4OGFkMmRmLTEwNzktNDI4NS04Y2RiLTY3NDUzOWMxZDU4OX0KMjAyMy0wNC0xMVQwMjowMjowMS4yNjRaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudFNlcnZpY2U6IFN0YXJ0ZWQgZGVwbG95bWVudCBleGVjdXRpb24uIHtzZXJ2aWNlTmFtZT1EZXBsb3ltZW50U2VydmljZSwgY3VycmVudFN0YXRlPVJVTk5JTkcsIGRlcGxveW1lbnQ9YXJuOmF3czpncmVlbmdyYXNzOnVzLXdlc3QtMjoxMTY0MDc3NDQ1MDg6Y29uZmlndXJhdGlvbjp0aGluZy9FQUNJTTIwOjN9CjIwMjMtMDQtMTFUMDI6MDI6MDEuMjY1WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtNSkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudFNlcnZpY2U6IGRlcGxveW1lbnQtdGFzay1leGVjdXRpb24uIFN0YXJ0aW5nIGRlcGxveW1lbnQgdGFzay4ge0RlcGxveW1lbnQgc2VydmljZSBjb25maWc9e0NvbXBvbmVudFRvR3JvdXBzPXthd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0UHVibGlzaGVyPXthcm46YXdzOmdyZWVuZ3Jhc3M6dXMtd2VzdC0yOjExNjQwNzc0NDUwODpjb25maWd1cmF0aW9uOnRoaW5nL0VBQ0lNMjA6Mj10aGluZy9FQUNJTTIwfSwgYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXI9e2Fybjphd3M6Z3JlZW5ncmFzczp1cy13ZXN0LTI6MTE2NDA3NzQ0NTA4OmNvbmZpZ3VyYXRpb246dGhpbmcvRUFDSU0yMDoyPXRoaW5nL0VBQ0lNMjB9LCBhd3MuZ3JlZW5ncmFzcy5OdWNsZXVzPXthcm46YXdzOmdyZWVuZ3Jhc3M6dXMtd2VzdC0yOjExNjQwNzc0NDUwODpjb25maWd1cmF0aW9uOnRoaW5nL0VBQ0lNMjA6Mj10aGluZy9FQUNJTTIwfX0sIGRlcGVuZGVuY2llcz1bXSwgR3JvdXBUb0xhc3REZXBsb3ltZW50PXt0aGluZy9FQUNJTTIwPXtjb25maWdBcm49YXJuOmF3czpncmVlbmdyYXNzOnVzLXdlc3QtMjoxMTY0MDc3NDQ1MDg6Y29uZmlndXJhdGlvbjp0aGluZy9FQUNJTTIwOjIsIHRpbWVzdGFtcD0xNjgxMTc4MzEzMTc1fX0sIEdyb3VwVG9Sb290Q29tcG9uZW50cz17dGhpbmcvRUFDSU0yMD17YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFB1Ymxpc2hlcj17Z3JvdXBDb25maWdBcm49YXJuOmF3czpncmVlbmdyYXNzOnVzLXdlc3QtMjoxMTY0MDc3NDQ1MDg6Y29uZmlndXJhdGlvbjp0aGluZy9FQUNJTTIwOjIsIGdyb3VwQ29uZmlnTmFtZT10aGluZy9FQUNJTTIwLCB2ZXJzaW9uPTEuMC4wLTk1ZjNjOGI1MDIyNzU2YTQ2MzA4fSwgYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXI9e2dyb3VwQ29uZmlnQXJuPWFybjphd3M6Z3JlZW5ncmFzczp1cy13ZXN0LTI6MTE2NDA3NzQ0NTA4OmNvbmZpZ3VyYXRpb246dGhpbmcvRUFDSU0yMDoyLCBncm91cENvbmZpZ05hbWU9dGhpbmcvRUFDSU0yMCwgdmVyc2lvbj0xLjAuMC05NWYzYzhiNTAyMjc1NmE0NjMwOH0sIGF3cy5ncmVlbmdyYXNzLk51Y2xldXM9e2dyb3VwQ29uZmlnQXJuPWFybjphd3M6Z3JlZW5ncmFzczp1cy13ZXN0LTI6MTE2NDA3NzQ0NTA4OmNvbmZpZ3VyYXRpb246dGhpbmcvRUFDSU0yMDoyLCBncm91cENvbmZpZ05hbWU9dGhpbmcvRUFDSU0yMCwgdmVyc2lvbj0yLjkuNX19fSwgcnVudGltZT17UHJvY2Vzc2VkRGVwbG95bWVudHM9e319LCB2ZXJzaW9uPTAuMC4wfSwgZGVwbG95bWVudElkPWQ4OGFkMmRmLTEwNzktNDI4NS04Y2RiLTY3NDUzOWMxZDU4OSwgc2VydmljZU5hbWU9RGVwbG95bWVudFNlcnZpY2UsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTExVDAyOjAyOjA2LjY1OVogW0lORk9dIChwb29sLTItdGhyZWFkLTQpIGNvbS5hd3MuZ3JlZW5ncmFzcy5jb21wb25lbnRtYW5hZ2VyLkRlcGVuZGVuY3lSZXNvbHZlcjogcmVzb2x2ZS1ncm91cC1kZXBlbmRlbmNpZXMtc3RhcnQuIFN0YXJ0IHRvIHJlc29sdmUgZ3JvdXAgZGVwZW5kZW5jaWVzLiB7dGFyZ2V0Q29tcG9uZW50cz1bXSwgY29tcG9uZW50VG9WZXJzaW9uUmVxdWlyZW1lbnRzPXt9fQoyMDIzLTA0LTExVDAyOjAyOjA2LjY2N1ogW0lORk9dIChwb29sLTItdGhyZWFkLTQpIGNvbS5hd3MuZ3JlZW5ncmFzcy5jb21wb25lbnRtYW5hZ2VyLkRlcGVuZGVuY3lSZXNvbHZlcjogcmVzb2x2ZS1ncm91cC1kZXBlbmRlbmNpZXMtZmluaXNoLiBGaW5pc2ggcmVzb2x2aW5nIGdyb3VwIGRlcGVuZGVuY2llcy4ge3Jlc29sdmVkQ29tcG9uZW50cz17fSwgY29tcG9uZW50VG9WZXJzaW9uUmVxdWlyZW1lbnRzPXt9fQoyMDIzLTA0LTExVDAyOjAyOjA2LjY5MlogW0lORk9dIChwb29sLTItdGhyZWFkLTUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLlVwZGF0ZVN5c3RlbVBvbGljeVNlcnZpY2U6IHJlZ2lzdGVyLXNlcnZpY2UtdXBkYXRlLWFjdGlvbi4ge2FjdGlvbj1kODhhZDJkZi0xMDc5LTQyODUtOGNkYi02NzQ1MzljMWQ1ODksIHNlcnZpY2VOYW1lPVVwZGF0ZVN5c3RlbVBvbGljeVNlcnZpY2UsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTExVDAyOjAyOjA2LjcwMVogW0lORk9dIChwb29sLTItdGhyZWFkLTQpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLlVwZGF0ZVN5c3RlbVBvbGljeVNlcnZpY2U6IHNlcnZpY2UtdXBkYXRlLXN0YXJ0LiB7c2VydmljZU5hbWU9VXBkYXRlU3lzdGVtUG9saWN5U2VydmljZSwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDQtMTFUMDI6MDI6MDYuNzA4WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudENvbmZpZ01lcmdlcjogbWVyZ2UtY29uZmlnLiBBcHBseWluZyBkZXBsb3ltZW50IGNoYW5nZXMsIGRlcGxveW1lbnQgY2Fubm90IGJlIGNhbmNlbGxlZCBub3cuIHtkZXBsb3ltZW50PWQ4OGFkMmRmLTEwNzktNDI4NS04Y2RiLTY3NDUzOWMxZDU4OX0KMjAyMy0wNC0xMVQwMjowMjowNi43MTBaIFtJTkZPXSAocG9vbC0yLXRocmVhZC00KSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5EZXBsb3ltZW50RGlyZWN0b3J5TWFuYWdlcjogUGVyc2lzdCBjb25maWd1cmF0aW9uIHNuYXBzaG90LiB7ZmlsZT0vdGVzdC9ncmVlbmdyYXNzL3YyL2RlcGxveW1lbnRzL2Q4OGFkMmRmLTEwNzktNDI4NS04Y2RiLTY3NDUzOWMxZDU4OS9yb2xsYmFja19zbmFwc2hvdC50bG9nfQoyMDIzLTA0LTExVDAyOjAyOjA2LjgwM1ogW0lORk9dIChTZXJpYWxpemVkIGxpc3RlbmVyIHByb2Nlc3NvcikgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuR2VuZXJpY0V4dGVybmFsU2VydmljZTogc2VydmljZS1jb25maWctY2hhbmdlLiBSZXF1ZXN0aW5nIHJlc3RhcnQgZm9yIGNvbXBvbmVudC4ge2NvbmZpZ05vZGU9c2VydmljZXMubWFpbi5saWZlY3ljbGUsIHNlcnZpY2VOYW1lPW1haW4sIGN1cnJlbnRTdGF0ZT1GSU5JU0hFRH0KMjAyMy0wNC0xMVQwMjowMjowNi44MDRaIFtJTkZPXSAobWFpbi1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLkdlbmVyaWNFeHRlcm5hbFNlcnZpY2U6IHNlcnZpY2Utc2V0LXN0YXRlLiB7c2VydmljZU5hbWU9bWFpbiwgY3VycmVudFN0YXRlPUZJTklTSEVELCBuZXdTdGF0ZT1JTlNUQUxMRUR9CjIwMjMtMDQtMTFUMDI6MDI6MDYuODY5WiBbSU5GT10gKG1haW4tbGlmZWN5Y2xlKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5HZW5lcmljRXh0ZXJuYWxTZXJ2aWNlOiBzZXJ2aWNlLXNldC1zdGF0ZS4ge3NlcnZpY2VOYW1lPW1haW4sIGN1cnJlbnRTdGF0ZT1JTlNUQUxMRUQsIG5ld1N0YXRlPVNUQVJUSU5HfQoyMDIzLTA0LTExVDAyOjAyOjA2Ljg3MVogW0lORk9dIChwb29sLTItdGhyZWFkLTQpIGNvbS5hd3MuZ3JlZW5ncmFzcy5kZXBsb3ltZW50LkRlcGxveW1lbnRDb25maWdNZXJnZXI6IG1lcmdlLWNvbmZpZy4gUmVtb3Zpbmcgc2VydmljZXMuIHtzZXJ2aWNlLXRvLXJlbW92ZT1bYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIsIGF3cy5ncmVlbmdyYXNzLklvdE1xdHRQdWJsaXNoZXJdfQoyMDIzLTA0LTExVDAyOjAyOjA2Ljg3M1ogW0lORk9dIChwb29sLTItdGhyZWFkLTEzKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5HZW5lcmljRXh0ZXJuYWxTZXJ2aWNlOiBnZW5lcmljLXNlcnZpY2UtZmluaXNoZWQuIE5vdGhpbmcgZG9uZS4ge3NlcnZpY2VOYW1lPW1haW4sIGN1cnJlbnRTdGF0ZT1TVEFSVElOR30KMjAyMy0wNC0xMVQwMjowMjowNi44NzNaIFtJTkZPXSAobWFpbi1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLkdlbmVyaWNFeHRlcm5hbFNlcnZpY2U6IHNlcnZpY2Utc2V0LXN0YXRlLiB7c2VydmljZU5hbWU9bWFpbiwgY3VycmVudFN0YXRlPVNUQVJUSU5HLCBuZXdTdGF0ZT1GSU5JU0hFRH0KMjAyMy0wNC0xMVQwMjowMjowNi44NzVaIFtJTkZPXSAobWFpbi1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLkdlbmVyaWNFeHRlcm5hbFNlcnZpY2U6IHNlcnZpY2Utc2V0LXN0YXRlLiB7c2VydmljZU5hbWU9bWFpbiwgY3VycmVudFN0YXRlPUZJTklTSEVELCBuZXdTdGF0ZT1TVE9QUElOR30KMjAyMy0wNC0xMVQwMjowMjowNi44NzdaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xMykgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuR2VuZXJpY0V4dGVybmFsU2VydmljZTogU2h1dGRvd24gaW5pdGlhdGVkLiB7c2VydmljZU5hbWU9bWFpbiwgY3VycmVudFN0YXRlPVNUT1BQSU5HfQoyMDIzLTA0LTExVDAyOjAyOjA2Ljg3OFogW0lORk9dIChwb29sLTItdGhyZWFkLTEzKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5HZW5lcmljRXh0ZXJuYWxTZXJ2aWNlOiBnZW5lcmljLXNlcnZpY2Utc2h1dGRvd24uIHtzZXJ2aWNlTmFtZT1tYWluLCBjdXJyZW50U3RhdGU9U1RPUFBJTkd9CjIwMjMtMDQtMTFUMDI6MDI6MDYuODgwWiBbSU5GT10gKG1haW4tbGlmZWN5Y2xlKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5HZW5lcmljRXh0ZXJuYWxTZXJ2aWNlOiBzZXJ2aWNlLXNldC1zdGF0ZS4ge3NlcnZpY2VOYW1lPW1haW4sIGN1cnJlbnRTdGF0ZT1TVE9QUElORywgbmV3U3RhdGU9RklOSVNIRUR9CjIwMjMtMDQtMTFUMDI6MDI6MDYuODgzWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTMpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLkdlbmVyaWNFeHRlcm5hbFNlcnZpY2U6IHNlcnZpY2UtY2xvc2UuIFNlcnZpY2UgaXMgbm93IGNsb3NpbmcuIHtzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0U3Vic2NyaWJlciwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDQtMTFUMDI6MDI6MDYuODkyWiBbSU5GT10gKGF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLWxpZmVjeWNsZSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuR2VuZXJpY0V4dGVybmFsU2VydmljZTogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0U3Vic2NyaWJlciwgY3VycmVudFN0YXRlPVJVTk5JTkcsIG5ld1N0YXRlPVNUT1BQSU5HfQoyMDIzLTA0LTExVDAyOjAyOjA2Ljg5NFogW0lORk9dIChwb29sLTItdGhyZWFkLTE2KSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5HZW5lcmljRXh0ZXJuYWxTZXJ2aWNlOiBTaHV0ZG93biBpbml0aWF0ZWQuIHtzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0U3Vic2NyaWJlciwgY3VycmVudFN0YXRlPVNUT1BQSU5HfQoyMDIzLTA0LTExVDAyOjAyOjA2Ljg5NlogW0lORk9dIChwb29sLTItdGhyZWFkLTE2KSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5HZW5lcmljRXh0ZXJuYWxTZXJ2aWNlOiBTaHV0dGluZyBkb3duIHByb2Nlc3MgWyJqYXZhIC1EaXBjLm9wZXJhdGlvbj1cdTAwMjJtcXR0UHVic3ViXHUwMDIyIC1EY29tcG9uZW50TmFtZT1cdTAwMjJJb3RNcXR0U3Vic2NyaWJlclx1MDAyMiAtamFyICAvdC4uLiJdLiB7c2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIsIGN1cnJlbnRTdGF0ZT1TVE9QUElOR30KMjAyMy0wNC0xMVQwMjowMjowNi44OTdaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNikgY29tLmF3cy5ncmVlbmdyYXNzLnV0aWwucGxhdGZvcm1zLlBsYXRmb3JtOiBLaWxsaW5nIGNoaWxkIHByb2Nlc3NlcyBvZiBwaWQgOTg0NjAsIGZvcmNlIGlzIGZhbHNlLiB7fQoyMDIzLTA0LTExVDAyOjAyOjA3LjMzNFogW0lORk9dIChwb29sLTItdGhyZWFkLTE2KSBjb20uYXdzLmdyZWVuZ3Jhc3MudXRpbC5wbGF0Zm9ybXMuUGxhdGZvcm06IEtpbGxpbmcgY2hpbGQgcHJvY2Vzc2VzIG9mIHBpZCA5ODQ2MCwgZm9yY2UgaXMgdHJ1ZS4ge30KMjAyMy0wNC0xMVQwMjowMjowNy42MDdaIFtXQVJOXSAocG9vbC0yLXRocmVhZC0xNikgY29tLmF3cy5ncmVlbmdyYXNzLnV0aWwucGxhdGZvcm1zLlBsYXRmb3JtOiBraWxsIGV4aXRlZCBub24temVybyAocHJvY2VzcyBub3QgZm91bmQgb3Igb3RoZXIgZXJyb3IpLiB7c3Rkb3V0PSwgcGlkPTk4NDYwLCBleGl0LWNvZGU9MSwgc3RkZXJyPWtpbGw6ICg5ODQ2MCk6IE5vIHN1Y2ggcHJvY2Vzc30KMjAyMy0wNC0xMVQwMjowMjowNy42MDhaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNikgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuR2VuZXJpY0V4dGVybmFsU2VydmljZTogU2h1dGRvd24gY29tcGxldGVkIGZvciBwcm9jZXNzIFsiamF2YSAtRGlwYy5vcGVyYXRpb249XHUwMDIybXF0dFB1YnN1Ylx1MDAyMiAtRGNvbXBvbmVudE5hbWU9XHUwMDIySW90TXF0dFN1YnNjcmliZXJcdTAwMjIgLWphciAgL3QuLi4iXS4ge3NlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLCBjdXJyZW50U3RhdGU9U1RPUFBJTkd9CjIwMjMtMDQtMTFUMDI6MDI6MDcuNjA5WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTYpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLkdlbmVyaWNFeHRlcm5hbFNlcnZpY2U6IGdlbmVyaWMtc2VydmljZS1zaHV0ZG93bi4ge3NlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLCBjdXJyZW50U3RhdGU9U1RPUFBJTkd9CjIwMjMtMDQtMTFUMDI6MDI6MDcuNjEwWiBbSU5GT10gKENvcGllcikgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuR2VuZXJpY0V4dGVybmFsU2VydmljZTogUnVuIHNjcmlwdCBleGl0ZWQuIHtleGl0Q29kZT0xMzcsIHNlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLCBjdXJyZW50U3RhdGU9U1RPUFBJTkd9CjIwMjMtMDQtMTFUMDI6MDI6MDcuNjEzWiBbSU5GT10gKGF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLWxpZmVjeWNsZSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuR2VuZXJpY0V4dGVybmFsU2VydmljZTogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1hd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0U3Vic2NyaWJlciwgY3VycmVudFN0YXRlPVNUT1BQSU5HLCBuZXdTdGF0ZT1GSU5JU0hFRH0KMjAyMy0wNC0xMVQwMjowMjowNy42MTVaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xMykgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuR2VuZXJpY0V4dGVybmFsU2VydmljZTogc2VydmljZS1jbG9zZS4gU2VydmljZSBpcyBub3cgY2xvc2luZy4ge3NlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRQdWJsaXNoZXIsIGN1cnJlbnRTdGF0ZT1GSU5JU0hFRH0KMjAyMy0wNC0xMVQwMjowMjowNy42MTlaIFtXQVJOXSAocG9vbC0yLXRocmVhZC00KSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5EZXBsb3ltZW50Q29uZmlnTWVyZ2VyOiBTZXJ2aWNlIHRvcGljcyBub2RlIGRvZXNuJ3QgZXhpc3QuLiB7c2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXJ9CjIwMjMtMDQtMTFUMDI6MDI6MDcuNjIwWiBbV0FSTl0gKHBvb2wtMi10aHJlYWQtNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudENvbmZpZ01lcmdlcjogU2VydmljZSB0b3BpY3Mgbm9kZSBkb2Vzbid0IGV4aXN0Li4ge3NlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRQdWJsaXNoZXJ9CjIwMjMtMDQtMTFUMDI6MDI6MDcuNjIwWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuYWN0aXZhdG9yLkRlcGxveW1lbnRBY3RpdmF0b3I6IG1lcmdlLWNvbmZpZy4gQWxsIHNlcnZpY2VzIHVwZGF0ZWQuIHtkZXBsb3ltZW50SWQ9ZDg4YWQyZGYtMTA3OS00Mjg1LThjZGItNjc0NTM5YzFkNTg5fQoyMDIzLTA0LTExVDAyOjAyOjA3LjYyMlogW0lORk9dIChwb29sLTItdGhyZWFkLTUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5kZXBsb3ltZW50LkRlcGxveW1lbnRTZXJ2aWNlOiBkZXBsb3ltZW50LXRhc2stZXhlY3V0aW9uLiBGaW5pc2hlZCBkZXBsb3ltZW50IHRhc2suIHtkZXBsb3ltZW50SWQ9ZDg4YWQyZGYtMTA3OS00Mjg1LThjZGItNjc0NTM5YzFkNTg5LCBzZXJ2aWNlTmFtZT1EZXBsb3ltZW50U2VydmljZSwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDQtMTFUMDI6MDI6MDcuNjI1WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtNCkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuVXBkYXRlU3lzdGVtUG9saWN5U2VydmljZTogc2VydmljZS11cGRhdGUtZmluaXNoLiB7c2VydmljZU5hbWU9VXBkYXRlU3lzdGVtUG9saWN5U2VydmljZSwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDQtMTFUMDI6MDI6MDcuNjUzWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtNSkgY29tLmF3cy5ncmVlbmdyYXNzLmNvbXBvbmVudG1hbmFnZXIuQ29tcG9uZW50U3RvcmU6IGRlbGV0ZS1jb21wb25lbnQtZmluaXNoLiB7Y29tcG9uZW50SWRlbnRpZmllcj1hd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0U3Vic2NyaWJlci12MS4wLjAtOTVmM2M4YjUwMjI3NTZhNDYzMDh9CjIwMjMtMDQtMTFUMDI6MDI6MDcuNjgyWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtNSkgY29tLmF3cy5ncmVlbmdyYXNzLmNvbXBvbmVudG1hbmFnZXIuQ29tcG9uZW50U3RvcmU6IGRlbGV0ZS1jb21wb25lbnQtZmluaXNoLiB7Y29tcG9uZW50SWRlbnRpZmllcj1hd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0UHVibGlzaGVyLXYxLjAuMC05NWYzYzhiNTAyMjc1NmE0NjMwOH0KMjAyMy0wNC0xMVQwMjowMjowNy43ODJaIFtJTkZPXSAoVGhyZWFkLTUpIHNvZnR3YXJlLmFtYXpvbi5hd3NzZGsuZXZlbnRzdHJlYW1ycGMuUnBjU2VydmVyOiBTZXJ2ZXIgY29ubmVjdGlvbiBjbG9zZWQgY29kZSBbc29ja2V0IGlzIGNsb3NlZC5dOiBbSWQgMzcsIENsYXNzIFNlcnZlckNvbm5lY3Rpb24sIFJlZnMgMV0oMjAyMy0wNC0xMVQwMjowMTozMS44NTQ3MDY4MTNaKSAtIDxudWxsPi4ge30KMjAyMy0wNC0xMVQwMjowMjoxNi4yNjVaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudFNlcnZpY2U6IEN1cnJlbnQgZGVwbG95bWVudCBmaW5pc2hlZC4ge0RlcGxveW1lbnRJZD1hcm46YXdzOmdyZWVuZ3Jhc3M6dXMtd2VzdC0yOjExNjQwNzc0NDUwODpjb25maWd1cmF0aW9uOnRoaW5nL0VBQ0lNMjA6MywgR3JlZW5ncmFzc0RlcGxveW1lbnRJZD1kODhhZDJkZi0xMDc5LTQyODUtOGNkYi02NzQ1MzljMWQ1ODksIHNlcnZpY2VOYW1lPURlcGxveW1lbnRTZXJ2aWNlLCBjdXJyZW50U3RhdGU9UlVOTklOR30KMjAyMy0wNC0xMVQwMjowMjoxNi4zNDlaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudFN0YXR1c0tlZXBlcjogU3RvcmVkIGRlcGxveW1lbnQgc3RhdHVzLiB7RGVwbG95bWVudElkPWFybjphd3M6Z3JlZW5ncmFzczp1cy13ZXN0LTI6MTE2NDA3NzQ0NTA4OmNvbmZpZ3VyYXRpb246dGhpbmcvRUFDSU0yMDozLCBHcmVlbmdyYXNzRGVwbG95bWVudElkPWQ4OGFkMmRmLTEwNzktNDI4NS04Y2RiLTY3NDUzOWMxZDU4OSwgRGVwbG95bWVudFN0YXR1cz1TVUNDRUVERUR9CjIwMjMtMDQtMTFUMDI6MDI6MTYuMzU0WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTQpIGNvbS5hd3MuZ3JlZW5ncmFzcy5kZXBsb3ltZW50LlNoYWRvd0RlcGxveW1lbnRMaXN0ZW5lcjogVXBkYXRlZCByZXBvcnRlZCBzdGF0ZSBmb3IgZGVwbG95bWVudC4ge0NPTkZJR1VSQVRJT05fQVJOPWFybjphd3M6Z3JlZW5ncmFzczp1cy13ZXN0LTI6MTE2NDA3NzQ0NTA4OmNvbmZpZ3VyYXRpb246dGhpbmcvRUFDSU0yMDozLCBzdGF0dXM9U1VDQ0VFREVEfQoyMDIzLTA0LTExVDAyOjAyOjE2LjM1OVogW0lORk9dIChwb29sLTItdGhyZWFkLTE0KSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5LZXJuZWw6IEF0dGVtcHQgdG8gbG9hZCBzZXJ2aWNlIGZyb20gcGx1Z2lucy4ge3NlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyfQoyMDIzLTA0LTExVDAyOjAyOjE2LjM2MVogW0lORk9dIChwb29sLTItdGhyZWFkLTE0KSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5LZXJuZWw6IEF0dGVtcHQgdG8gbG9hZCBzZXJ2aWNlIGZyb20gcGx1Z2lucy4ge3NlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRQdWJsaXNoZXJ9CjIwMjMtMDQtMTFUMDI6MDI6MTYuMzc0WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTQpIGNvbS5hd3MuZ3JlZW5ncmFzcy5zdGF0dXMuRmxlZXRTdGF0dXNTZXJ2aWNlOiBmc3Mtc3RhdHVzLXVwZGF0ZS1wdWJsaXNoZWQuIFN0YXR1cyB1cGRhdGUgcHVibGlzaGVkIHRvIEZTUy4ge3RyaWdnZXI9VEhJTkdfREVQTE9ZTUVOVCwgc2VydmljZU5hbWU9RmxlZXRTdGF0dXNTZXJ2aWNlLCBjdXJyZW50U3RhdGU9UlVOTklOR30KMjAyMy0wNC0xMVQwMjowMjoxNi4zNzVaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudERpcmVjdG9yeU1hbmFnZXI6IFBlcnNpc3QgbGluayB0byBsYXN0IGRlcGxveW1lbnQuIHtsaW5rPS90ZXN0L2dyZWVuZ3Jhc3MvdjIvZGVwbG95bWVudHMvcHJldmlvdXMtc3VjY2Vzc30KMjAyMy0wNC0xMVQwMjowMjoxNi4zNzdaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudERpcmVjdG9yeU1hbmFnZXI6IENsZWFuIHVwIGxpbmsgdG8gZWFybGllciBkZXBsb3ltZW50LiB7bGluaz0vdGVzdC9ncmVlbmdyYXNzL3YyL2RlcGxveW1lbnRzL3ByZXZpb3VzLXN1Y2Nlc3N9CjIwMjMtMDQtMTFUMDI6MDI6MTguMzc3WiBbSU5GT10gKFRocmVhZC00KSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5Jb3RKb2JzSGVscGVyOiBSZWNlaXZlZCBuZXcgZGVwbG95bWVudCBub3RpZmljYXRpb24uIFJlcXVlc3RpbmcgZGV0YWlscy4ge1RoaW5nTmFtZT1FQUNJTTIwfQoyMDIzLTA0LTExVDAyOjAyOjE4LjY5M1ogW0lORk9dIChUaHJlYWQtNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuSW90Sm9ic0hlbHBlcjogUmVjZWl2ZWQgSW90IGpvYiBkZXNjcmlwdGlvbi4ge1N0YXR1cz1RVUVVRUQsIHF1ZXVlQXQ9VHVlIEFwciAxMSAwMjowMjoxOCBHTVQgMjAyMywgVGhpbmdOYW1lPUVBQ0lNMjAsIEpvYklkPTBhZjI4YWY4LWVkM2ItNDAzYy1iMWE3LWM2MDViZDg2MTUyZH0KMjAyMy0wNC0xMVQwMjowMjoxOC43MTlaIFtJTkZPXSAoVGhyZWFkLTQpIGNvbS5hd3MuZ3JlZW5ncmFzcy5kZXBsb3ltZW50LklvdEpvYnNIZWxwZXI6IEFkZGVkIHRoZSBqb2IgdG8gdGhlIHF1ZXVlLiB7VGhpbmdOYW1lPUVBQ0lNMjAsIEpvYklkPTBhZjI4YWY4LWVkM2ItNDAzYy1iMWE3LWM2MDViZDg2MTUyZH0KMjAyMy0wNC0xMVQwMjowMjozMS4zODRaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudFNlcnZpY2U6IFJlY2VpdmVkIGRlcGxveW1lbnQgaW4gdGhlIHF1ZXVlLiB7RGVwbG95bWVudElkPTBhZjI4YWY4LWVkM2ItNDAzYy1iMWE3LWM2MDViZDg2MTUyZCwgR3JlZW5ncmFzc0RlcGxveW1lbnRJZD1udWxsLCBEZXBsb3ltZW50VHlwZT1JT1RfSk9CUywgc2VydmljZU5hbWU9RGVwbG95bWVudFNlcnZpY2UsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTExVDAyOjAyOjMxLjM4NlogW0lORk9dIChwb29sLTItdGhyZWFkLTE0KSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5EZXBsb3ltZW50U2VydmljZTogUmVjZWl2ZWQgZGVwbG95bWVudCBkb2N1bWVudCBpbiBxdWV1ZS4ge2RvY3VtZW50PXsiY29uZmlndXJhdGlvblZhbGlkYXRpb25Qb2xpY3kiOnsidGltZW91dCI6NjAuMH0sImNvbXBvbmVudHMiOnt9LCJjb21wb25lbnRVcGRhdGVQb2xpY3kiOnsidGltZW91dCI6NjAuMCwiYWN0aW9uIjoiTk9USUZZX0NPTVBPTkVOVFMifSwic2NoZW1hRGF0ZSI6IjIwMjEtMDUtMTciLCJkZXBsb3ltZW50SWQiOiJhNWM5NzgxZi1kZDQ1LTQxZmItYTkxMC00OGEwY2Q4NWFhOGIiLCJjcmVhdGlvblRpbWVzdGFtcCI6MS42ODExNzg1MzcwMTFFMTIsImRlcGxveW1lbnROYW1lIjoiRW1wdHlEZXBsb3ltZW50IiwiZmFpbHVyZUhhbmRsaW5nUG9saWN5IjoiUk9MTEJBQ0siLCJjb25maWd1cmF0aW9uQXJuIjoiYXJuOmF3czpncmVlbmdyYXNzOnVzLXdlc3QtMjoxMTY0MDc3NDQ1MDg6Y29uZmlndXJhdGlvbjp0aGluZ2dyb3VwL0dyZWVuZ3Jhc3NRdWlja1N0YXJ0R3JvdXBfdGVzdDoxMDAiLCJyZXF1aXJlZENhcGFiaWxpdGllcyI6W119LCBzZXJ2aWNlTmFtZT1EZXBsb3ltZW50U2VydmljZSwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDQtMTFUMDI6MDI6MzEuNDQxWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTQpIGNvbS5hd3MuZ3JlZW5ncmFzcy5kZXBsb3ltZW50LkRlcGxveW1lbnRTdGF0dXNLZWVwZXI6IFN0b3JlZCBkZXBsb3ltZW50IHN0YXR1cy4ge0RlcGxveW1lbnRJZD0wYWYyOGFmOC1lZDNiLTQwM2MtYjFhNy1jNjA1YmQ4NjE1MmQsIEdyZWVuZ3Jhc3NEZXBsb3ltZW50SWQ9YTVjOTc4MWYtZGQ0NS00MWZiLWE5MTAtNDhhMGNkODVhYThiLCBEZXBsb3ltZW50U3RhdHVzPUlOX1BST0dSRVNTfQoyMDIzLTA0LTExVDAyOjAyOjMxLjQ0NlogW0lORk9dIChwb29sLTItdGhyZWFkLTE0KSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5Jb3RKb2JzSGVscGVyOiBVcGRhdGluZyBzdGF0dXMgb2YgcGVyc2lzdGVkIGRlcGxveW1lbnQuIHtTdGF0dXM9SU5fUFJPR1JFU1MsIFN0YXR1c0RldGFpbHM9e30sIFRoaW5nTmFtZT1FQUNJTTIwLCBKb2JJZD0wYWYyOGFmOC1lZDNiLTQwM2MtYjFhNy1jNjA1YmQ4NjE1MmR9CjIwMjMtMDQtMTFUMDI6MDI6MzIuMDI4WiBbSU5GT10gKFRocmVhZC00KSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5Jb3RKb2JzSGVscGVyOiBKb2Igc3RhdHVzIHVwZGF0ZSB3YXMgYWNjZXB0ZWQuIHtTdGF0dXM9SU5fUFJPR1JFU1MsIFRoaW5nTmFtZT1FQUNJTTIwLCBKb2JJZD0wYWYyOGFmOC1lZDNiLTQwM2MtYjFhNy1jNjA1YmQ4NjE1MmR9CjIwMjMtMDQtMTFUMDI6MDI6MzIuMzc5WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTQpIGNvbS5hd3MuZ3JlZW5ncmFzcy5kZXBsb3ltZW50LkRlcGxveW1lbnREaXJlY3RvcnlNYW5hZ2VyOiBDcmVhdGUgd29yayBkaXJlY3RvcnkgZm9yIG5ldyBkZXBsb3ltZW50LiB7ZGVwbG95bWVudElkPWE1Yzk3ODFmLWRkNDUtNDFmYi1hOTEwLTQ4YTBjZDg1YWE4YiwgbGluaz0vdGVzdC9ncmVlbmdyYXNzL3YyL2RlcGxveW1lbnRzL29uZ29pbmcsIGRpcmVjdG9yeT0vdGVzdC9ncmVlbmdyYXNzL3YyL2RlcGxveW1lbnRzL2E1Yzk3ODFmLWRkNDUtNDFmYi1hOTEwLTQ4YTBjZDg1YWE4Yn0KMjAyMy0wNC0xMVQwMjowMjozMi4zODFaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudERpcmVjdG9yeU1hbmFnZXI6IFBlcnNpc3QgZGVwbG95bWVudCBtZXRhZGF0YS4ge2ZpbGU9L3Rlc3QvZ3JlZW5ncmFzcy92Mi9kZXBsb3ltZW50cy9hNWM5NzgxZi1kZDQ1LTQxZmItYTkxMC00OGEwY2Q4NWFhOGIvZGVwbG95bWVudF9tZXRhZGF0YS5qc29uLCBkZXBsb3ltZW50SWQ9YTVjOTc4MWYtZGQ0NS00MWZiLWE5MTAtNDhhMGNkODVhYThifQoyMDIzLTA0LTExVDAyOjAyOjMyLjM5NFogW0lORk9dIChwb29sLTItdGhyZWFkLTE0KSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5EZXBsb3ltZW50U2VydmljZTogU3RhcnRlZCBkZXBsb3ltZW50IGV4ZWN1dGlvbi4ge3NlcnZpY2VOYW1lPURlcGxveW1lbnRTZXJ2aWNlLCBjdXJyZW50U3RhdGU9UlVOTklORywgZGVwbG95bWVudD0wYWYyOGFmOC1lZDNiLTQwM2MtYjFhNy1jNjA1YmQ4NjE1MmR9CjIwMjMtMDQtMTFUMDI6MDI6MzIuMzk0WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtNSkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudFNlcnZpY2U6IGRlcGxveW1lbnQtdGFzay1leGVjdXRpb24uIFN0YXJ0aW5nIGRlcGxveW1lbnQgdGFzay4ge0RlcGxveW1lbnQgc2VydmljZSBjb25maWc9e0NvbXBvbmVudFRvR3JvdXBzPXt9LCBkZXBlbmRlbmNpZXM9W10sIEdyb3VwVG9MYXN0RGVwbG95bWVudD17dGhpbmcvRUFDSU0yMD17Y29uZmlnQXJuPWFybjphd3M6Z3JlZW5ncmFzczp1cy13ZXN0LTI6MTE2NDA3NzQ0NTA4OmNvbmZpZ3VyYXRpb246dGhpbmcvRUFDSU0yMDozLCB0aW1lc3RhbXA9MTY4MTE3ODUxMzA0Nn0sIHRoaW5nZ3JvdXAvR3JlZW5ncmFzc1F1aWNrU3RhcnRHcm91cF90ZXN0PXt9fSwgR3JvdXBUb1Jvb3RDb21wb25lbnRzPXt0aGluZy9FQUNJTTIwPXt9fSwgcnVudGltZT17UHJvY2Vzc2VkRGVwbG95bWVudHM9e319LCB2ZXJzaW9uPTAuMC4wfSwgZGVwbG95bWVudElkPWE1Yzk3ODFmLWRkNDUtNDFmYi1hOTEwLTQ4YTBjZDg1YWE4Yiwgc2VydmljZU5hbWU9RGVwbG95bWVudFNlcnZpY2UsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTExVDAyOjAyOjMzLjI3N1ogW0lORk9dIChwb29sLTItdGhyZWFkLTQpIGNvbS5hd3MuZ3JlZW5ncmFzcy5jb21wb25lbnRtYW5hZ2VyLkRlcGVuZGVuY3lSZXNvbHZlcjogcmVzb2x2ZS1ncm91cC1kZXBlbmRlbmNpZXMtc3RhcnQuIFN0YXJ0IHRvIHJlc29sdmUgZ3JvdXAgZGVwZW5kZW5jaWVzLiB7dGFyZ2V0Q29tcG9uZW50cz1bXSwgY29tcG9uZW50VG9WZXJzaW9uUmVxdWlyZW1lbnRzPXt9fQoyMDIzLTA0LTExVDAyOjAyOjMzLjI3OVogW0lORk9dIChwb29sLTItdGhyZWFkLTQpIGNvbS5hd3MuZ3JlZW5ncmFzcy5jb21wb25lbnRtYW5hZ2VyLkRlcGVuZGVuY3lSZXNvbHZlcjogcmVzb2x2ZS1ncm91cC1kZXBlbmRlbmNpZXMtZmluaXNoLiBGaW5pc2ggcmVzb2x2aW5nIGdyb3VwIGRlcGVuZGVuY2llcy4ge3Jlc29sdmVkQ29tcG9uZW50cz17fSwgY29tcG9uZW50VG9WZXJzaW9uUmVxdWlyZW1lbnRzPXt9fQoyMDIzLTA0LTExVDAyOjAyOjMzLjI4NFogW0lORk9dIChwb29sLTItdGhyZWFkLTUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLlVwZGF0ZVN5c3RlbVBvbGljeVNlcnZpY2U6IHJlZ2lzdGVyLXNlcnZpY2UtdXBkYXRlLWFjdGlvbi4ge2FjdGlvbj1hNWM5NzgxZi1kZDQ1LTQxZmItYTkxMC00OGEwY2Q4NWFhOGIsIHNlcnZpY2VOYW1lPVVwZGF0ZVN5c3RlbVBvbGljeVNlcnZpY2UsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTExVDAyOjAyOjMzLjI4N1ogW0lORk9dIChwb29sLTItdGhyZWFkLTQpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLlVwZGF0ZVN5c3RlbVBvbGljeVNlcnZpY2U6IHNlcnZpY2UtdXBkYXRlLXN0YXJ0LiB7c2VydmljZU5hbWU9VXBkYXRlU3lzdGVtUG9saWN5U2VydmljZSwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDQtMTFUMDI6MDI6MzMuMjkwWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudENvbmZpZ01lcmdlcjogbWVyZ2UtY29uZmlnLiBBcHBseWluZyBkZXBsb3ltZW50IGNoYW5nZXMsIGRlcGxveW1lbnQgY2Fubm90IGJlIGNhbmNlbGxlZCBub3cuIHtkZXBsb3ltZW50PWE1Yzk3ODFmLWRkNDUtNDFmYi1hOTEwLTQ4YTBjZDg1YWE4Yn0KMjAyMy0wNC0xMVQwMjowMjozMy4yOTFaIFtJTkZPXSAocG9vbC0yLXRocmVhZC00KSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5EZXBsb3ltZW50RGlyZWN0b3J5TWFuYWdlcjogUGVyc2lzdCBjb25maWd1cmF0aW9uIHNuYXBzaG90LiB7ZmlsZT0vdGVzdC9ncmVlbmdyYXNzL3YyL2RlcGxveW1lbnRzL2E1Yzk3ODFmLWRkNDUtNDFmYi1hOTEwLTQ4YTBjZDg1YWE4Yi9yb2xsYmFja19zbmFwc2hvdC50bG9nfQoyMDIzLTA0LTExVDAyOjAyOjMzLjM3OFogW0lORk9dIChwb29sLTItdGhyZWFkLTQpIGNvbS5hd3MuZ3JlZW5ncmFzcy5kZXBsb3ltZW50LkRlcGxveW1lbnRDb25maWdNZXJnZXI6IG1lcmdlLWNvbmZpZy4gUmVtb3Zpbmcgc2VydmljZXMuIHtzZXJ2aWNlLXRvLXJlbW92ZT1bXX0KMjAyMy0wNC0xMVQwMjowMjozMy4zNzlaIFtJTkZPXSAocG9vbC0yLXRocmVhZC00KSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5hY3RpdmF0b3IuRGVwbG95bWVudEFjdGl2YXRvcjogbWVyZ2UtY29uZmlnLiBBbGwgc2VydmljZXMgdXBkYXRlZC4ge2RlcGxveW1lbnRJZD1hNWM5NzgxZi1kZDQ1LTQxZmItYTkxMC00OGEwY2Q4NWFhOGJ9CjIwMjMtMDQtMTFUMDI6MDI6MzMuMzgxWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtNCkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuVXBkYXRlU3lzdGVtUG9saWN5U2VydmljZTogc2VydmljZS11cGRhdGUtZmluaXNoLiB7c2VydmljZU5hbWU9VXBkYXRlU3lzdGVtUG9saWN5U2VydmljZSwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDQtMTFUMDI6MDI6MzMuMzgxWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtNSkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudFNlcnZpY2U6IGRlcGxveW1lbnQtdGFzay1leGVjdXRpb24uIEZpbmlzaGVkIGRlcGxveW1lbnQgdGFzay4ge2RlcGxveW1lbnRJZD1hNWM5NzgxZi1kZDQ1LTQxZmItYTkxMC00OGEwY2Q4NWFhOGIsIHNlcnZpY2VOYW1lPURlcGxveW1lbnRTZXJ2aWNlLCBjdXJyZW50U3RhdGU9UlVOTklOR30KMjAyMy0wNC0xMVQwMjowMjo0Ny4zOTVaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudFNlcnZpY2U6IEN1cnJlbnQgZGVwbG95bWVudCBmaW5pc2hlZC4ge0RlcGxveW1lbnRJZD0wYWYyOGFmOC1lZDNiLTQwM2MtYjFhNy1jNjA1YmQ4NjE1MmQsIEdyZWVuZ3Jhc3NEZXBsb3ltZW50SWQ9YTVjOTc4MWYtZGQ0NS00MWZiLWE5MTAtNDhhMGNkODVhYThiLCBzZXJ2aWNlTmFtZT1EZXBsb3ltZW50U2VydmljZSwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDQtMTFUMDI6MDI6NDcuNDY5WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTQpIGNvbS5hd3MuZ3JlZW5ncmFzcy5kZXBsb3ltZW50LkRlcGxveW1lbnRTdGF0dXNLZWVwZXI6IFN0b3JlZCBkZXBsb3ltZW50IHN0YXR1cy4ge0RlcGxveW1lbnRJZD0wYWYyOGFmOC1lZDNiLTQwM2MtYjFhNy1jNjA1YmQ4NjE1MmQsIEdyZWVuZ3Jhc3NEZXBsb3ltZW50SWQ9YTVjOTc4MWYtZGQ0NS00MWZiLWE5MTAtNDhhMGNkODVhYThiLCBEZXBsb3ltZW50U3RhdHVzPVNVQ0NFRURFRH0KMjAyMy0wNC0xMVQwMjowMjo0Ny40NzFaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuSW90Sm9ic0hlbHBlcjogVXBkYXRpbmcgc3RhdHVzIG9mIHBlcnNpc3RlZCBkZXBsb3ltZW50LiB7U3RhdHVzPVNVQ0NFRURFRCwgU3RhdHVzRGV0YWlscz17ZGV0YWlsZWQtZGVwbG95bWVudC1zdGF0dXM9U1VDQ0VTU0ZVTH0sIFRoaW5nTmFtZT1FQUNJTTIwLCBKb2JJZD0wYWYyOGFmOC1lZDNiLTQwM2MtYjFhNy1jNjA1YmQ4NjE1MmR9CjIwMjMtMDQtMTFUMDI6MDI6NDguMDExWiBbSU5GT10gKFRocmVhZC00KSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5Jb3RKb2JzSGVscGVyOiBKb2Igc3RhdHVzIHVwZGF0ZSB3YXMgYWNjZXB0ZWQuIHtTdGF0dXM9U1VDQ0VFREVELCBUaGluZ05hbWU9RUFDSU0yMCwgSm9iSWQ9MGFmMjhhZjgtZWQzYi00MDNjLWIxYTctYzYwNWJkODYxNTJkfQoyMDIzLTA0LTExVDAyOjAyOjQ4LjQzOVogW0lORk9dIChwb29sLTItdGhyZWFkLTE0KSBjb20uYXdzLmdyZWVuZ3Jhc3Muc3RhdHVzLkZsZWV0U3RhdHVzU2VydmljZTogZnNzLXN0YXR1cy11cGRhdGUtcHVibGlzaGVkLiBTdGF0dXMgdXBkYXRlIHB1Ymxpc2hlZCB0byBGU1MuIHt0cmlnZ2VyPVRISU5HX0dST1VQX0RFUExPWU1FTlQsIHNlcnZpY2VOYW1lPUZsZWV0U3RhdHVzU2VydmljZSwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDQtMTFUMDI6MDI6NDguNDQwWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTQpIGNvbS5hd3MuZ3JlZW5ncmFzcy5kZXBsb3ltZW50LkRlcGxveW1lbnREaXJlY3RvcnlNYW5hZ2VyOiBQZXJzaXN0IGxpbmsgdG8gbGFzdCBkZXBsb3ltZW50LiB7bGluaz0vdGVzdC9ncmVlbmdyYXNzL3YyL2RlcGxveW1lbnRzL3ByZXZpb3VzLXN1Y2Nlc3N9CjIwMjMtMDQtMTFUMDI6MDI6NDguNDQyWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTQpIGNvbS5hd3MuZ3JlZW5ncmFzcy5kZXBsb3ltZW50LkRlcGxveW1lbnREaXJlY3RvcnlNYW5hZ2VyOiBDbGVhbiB1cCBsaW5rIHRvIGVhcmxpZXIgZGVwbG95bWVudC4ge2xpbms9L3Rlc3QvZ3JlZW5ncmFzcy92Mi9kZXBsb3ltZW50cy9wcmV2aW91cy1zdWNjZXNzfQoyMDIzLTA0LTExVDAyOjAyOjQ5LjI3OVogW0lORk9dIChUaHJlYWQtNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuSW90Sm9ic0hlbHBlcjogUmVjZWl2ZWQgZW1wdHkgam9icyBpbiBub3RpZmljYXRpb24gLiB7VGhpbmdOYW1lPUVBQ0lNMjB9CjIwMjMtMDQtMTFUMDI6MDM6MTcuNTYwWiBbV0FSTl0gKFRocmVhZC0xKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5LZXJuZWw6IFNodXR0aW5nIGRvd24gTnVjbGV1cyBkdWUgdG8gZXh0ZXJuYWwgc2lnbmFsLiB7fQoyMDIzLTA0LTExVDAyOjAzOjE3LjU2MlogW0lORk9dIChUaHJlYWQtMSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuS2VybmVsTGlmZWN5Y2xlOiBzeXN0ZW0tc2h1dGRvd24uIHttYWluPXNlcnZpY2VzLm1haW46RklOSVNIRUR9CjIwMjMtMDQtMTFUMDI6MDM6MTcuNTYzWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtNSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuR2VuZXJpY0V4dGVybmFsU2VydmljZTogc2VydmljZS1jbG9zZS4gU2VydmljZSBpcyBub3cgY2xvc2luZy4ge3NlcnZpY2VOYW1lPW1haW4sIGN1cnJlbnRTdGF0ZT1GSU5JU0hFRH0KMjAyMy0wNC0xMVQwMjowMzoxNy41NjVaIFtJTkZPXSAocG9vbC0yLXRocmVhZC00KSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5HZW5lcmljRXh0ZXJuYWxTZXJ2aWNlOiBzZXJ2aWNlLWNsb3NlLiBTZXJ2aWNlIGlzIG5vdyBjbG9zaW5nLiB7c2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuTnVjbGV1cywgY3VycmVudFN0YXRlPUZJTklTSEVEfQoyMDIzLTA0LTExVDAyOjAzOjE3LjU2NlogW0lORk9dIChwb29sLTItdGhyZWFkLTUpIGNvbS5hd3MuZ3JlZW5ncmFzcy50ZWxlbWV0cnkuVGVsZW1ldHJ5QWdlbnQ6IHNlcnZpY2UtY2xvc2UuIFNlcnZpY2UgaXMgbm93IGNsb3NpbmcuIHtzZXJ2aWNlTmFtZT1UZWxlbWV0cnlBZ2VudCwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDQtMTFUMDI6MDM6MTcuNTY1WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTApIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLlVwZGF0ZVN5c3RlbVBvbGljeVNlcnZpY2U6IHNlcnZpY2UtY2xvc2UuIFNlcnZpY2UgaXMgbm93IGNsb3NpbmcuIHtzZXJ2aWNlTmFtZT1VcGRhdGVTeXN0ZW1Qb2xpY3lTZXJ2aWNlLCBjdXJyZW50U3RhdGU9UlVOTklOR30KMjAyMy0wNC0xMVQwMjowMzoxNy41NjlaIFtJTkZPXSAoVGVsZW1ldHJ5QWdlbnQtbGlmZWN5Y2xlKSBjb20uYXdzLmdyZWVuZ3Jhc3MudGVsZW1ldHJ5LlRlbGVtZXRyeUFnZW50OiBzZXJ2aWNlLXNldC1zdGF0ZS4ge3NlcnZpY2VOYW1lPVRlbGVtZXRyeUFnZW50LCBjdXJyZW50U3RhdGU9UlVOTklORywgbmV3U3RhdGU9U1RPUFBJTkd9CjIwMjMtMDQtMTFUMDI6MDM6MTcuNTY5WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMjApIGNvbS5hd3MuZ3JlZW5ncmFzcy5kZXBsb3ltZW50LkRlcGxveW1lbnRTZXJ2aWNlOiBzZXJ2aWNlLWNsb3NlLiBTZXJ2aWNlIGlzIG5vdyBjbG9zaW5nLiB7c2VydmljZU5hbWU9RGVwbG95bWVudFNlcnZpY2UsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTExVDAyOjAzOjE3LjU3MFogW0lORk9dIChVcGRhdGVTeXN0ZW1Qb2xpY3lTZXJ2aWNlLWxpZmVjeWNsZSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuVXBkYXRlU3lzdGVtUG9saWN5U2VydmljZTogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1VcGRhdGVTeXN0ZW1Qb2xpY3lTZXJ2aWNlLCBjdXJyZW50U3RhdGU9UlVOTklORywgbmV3U3RhdGU9U1RPUFBJTkd9CjIwMjMtMDQtMTFUMDI6MDM6MTcuNTcwWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtNCkgY29tLmF3cy5ncmVlbmdyYXNzLnRlbGVtZXRyeS5UZWxlbWV0cnlBZ2VudDogQ2FuY2VsbGluZyBhbGwgdGVsZW1ldHJ5IHNjaGVkdWxlZCB0YXNrcy4uIHtzZXJ2aWNlTmFtZT1UZWxlbWV0cnlBZ2VudCwgY3VycmVudFN0YXRlPVNUT1BQSU5HfQoyMDIzLTA0LTExVDAyOjAzOjE3LjU3MFogW0lORk9dIChUaHJlYWQtMSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuS2VybmVsTGlmZWN5Y2xlOiBXYWl0aW5nIGZvciBzZXJ2aWNlcyB0byBzaHV0ZG93bi4ge30KMjAyMy0wNC0xMVQwMjowMzoxNy41NzFaIFtJTkZPXSAoVXBkYXRlU3lzdGVtUG9saWN5U2VydmljZS1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLlVwZGF0ZVN5c3RlbVBvbGljeVNlcnZpY2U6IFN0b3BwaW5nIGJhY2tpbmdUYXNrIHN0YXJ0LiB7c2VydmljZU5hbWU9VXBkYXRlU3lzdGVtUG9saWN5U2VydmljZSwgY3VycmVudFN0YXRlPVNUT1BQSU5HfQoyMDIzLTA0LTExVDAyOjAzOjE3LjU3MlogW0lORk9dIChUZWxlbWV0cnlBZ2VudC1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy50ZWxlbWV0cnkuVGVsZW1ldHJ5QWdlbnQ6IHNlcnZpY2Utc2V0LXN0YXRlLiB7c2VydmljZU5hbWU9VGVsZW1ldHJ5QWdlbnQsIGN1cnJlbnRTdGF0ZT1TVE9QUElORywgbmV3U3RhdGU9RklOSVNIRUR9CjIwMjMtMDQtMTFUMDI6MDM6MTcuNTcwWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMTkpIGNvbS5hd3MuZ3JlZW5ncmFzcy5zdGF0dXMuRmxlZXRTdGF0dXNTZXJ2aWNlOiBzZXJ2aWNlLWNsb3NlLiBTZXJ2aWNlIGlzIG5vdyBjbG9zaW5nLiB7c2VydmljZU5hbWU9RmxlZXRTdGF0dXNTZXJ2aWNlLCBjdXJyZW50U3RhdGU9UlVOTklOR30KMjAyMy0wNC0xMVQwMjowMzoxNy41NzNaIFtXQVJOXSAocG9vbC0yLXRocmVhZC0xOCkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuVXBkYXRlU3lzdGVtUG9saWN5U2VydmljZTogc2VydmljZS1ydW4taW50ZXJydXB0ZWQuIFNlcnZpY2UgaW50ZXJydXB0ZWQgd2hpbGUgcnVubmluZyBzdGFydHVwLiB7c2VydmljZU5hbWU9VXBkYXRlU3lzdGVtUG9saWN5U2VydmljZSwgY3VycmVudFN0YXRlPVNUT1BQSU5HfQoyMDIzLTA0LTExVDAyOjAzOjE3LjU3NFogW0lORk9dIChGbGVldFN0YXR1c1NlcnZpY2UtbGlmZWN5Y2xlKSBjb20uYXdzLmdyZWVuZ3Jhc3Muc3RhdHVzLkZsZWV0U3RhdHVzU2VydmljZTogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1GbGVldFN0YXR1c1NlcnZpY2UsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HLCBuZXdTdGF0ZT1TVE9QUElOR30KMjAyMy0wNC0xMVQwMjowMzoxNy41NzRaIFtJTkZPXSAoVXBkYXRlU3lzdGVtUG9saWN5U2VydmljZS1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLlVwZGF0ZVN5c3RlbVBvbGljeVNlcnZpY2U6IHNlcnZpY2Utc2V0LXN0YXRlLiB7c2VydmljZU5hbWU9VXBkYXRlU3lzdGVtUG9saWN5U2VydmljZSwgY3VycmVudFN0YXRlPVNUT1BQSU5HLCBuZXdTdGF0ZT1GSU5JU0hFRH0KMjAyMy0wNC0xMVQwMjowMzoxNy41NzRaIFtJTkZPXSAoRGVwbG95bWVudFNlcnZpY2UtbGlmZWN5Y2xlKSBjb20uYXdzLmdyZWVuZ3Jhc3MuZGVwbG95bWVudC5EZXBsb3ltZW50U2VydmljZTogc2VydmljZS1zZXQtc3RhdGUuIHtzZXJ2aWNlTmFtZT1EZXBsb3ltZW50U2VydmljZSwgY3VycmVudFN0YXRlPVJVTk5JTkcsIG5ld1N0YXRlPVNUT1BQSU5HfQoyMDIzLTA0LTExVDAyOjAzOjE3LjU3NVogW0lORk9dIChEZXBsb3ltZW50U2VydmljZS1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5kZXBsb3ltZW50LkRlcGxveW1lbnRTZXJ2aWNlOiBTdG9wcGluZyBiYWNraW5nVGFzayBzdGFydC4ge3NlcnZpY2VOYW1lPURlcGxveW1lbnRTZXJ2aWNlLCBjdXJyZW50U3RhdGU9U1RPUFBJTkd9CjIwMjMtMDQtMTFUMDI6MDM6MTcuNTc2WiBbSU5GT10gKEZsZWV0U3RhdHVzU2VydmljZS1saWZlY3ljbGUpIGNvbS5hd3MuZ3JlZW5ncmFzcy5zdGF0dXMuRmxlZXRTdGF0dXNTZXJ2aWNlOiBzZXJ2aWNlLXNldC1zdGF0ZS4ge3NlcnZpY2VOYW1lPUZsZWV0U3RhdHVzU2VydmljZSwgY3VycmVudFN0YXRlPVNUT1BQSU5HLCBuZXdTdGF0ZT1GSU5JU0hFRH0KMjAyMy0wNC0xMVQwMjowMzoxNy41NzdaIFtXQVJOXSAocG9vbC0yLXRocmVhZC0xNCkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudFNlcnZpY2U6IHNlcnZpY2UtcnVuLWludGVycnVwdGVkLiBTZXJ2aWNlIGludGVycnVwdGVkIHdoaWxlIHJ1bm5pbmcgc3RhcnR1cC4ge3NlcnZpY2VOYW1lPURlcGxveW1lbnRTZXJ2aWNlLCBjdXJyZW50U3RhdGU9U1RPUFBJTkd9CjIwMjMtMDQtMTFUMDI6MDM6MTcuNTc2WiBbSU5GT10gKERlcGxveW1lbnRTZXJ2aWNlLWxpZmVjeWNsZSkgY29tLmF3cy5ncmVlbmdyYXNzLmRlcGxveW1lbnQuRGVwbG95bWVudFNlcnZpY2U6IHNlcnZpY2Utc2V0LXN0YXRlLiB7c2VydmljZU5hbWU9RGVwbG95bWVudFNlcnZpY2UsIGN1cnJlbnRTdGF0ZT1TVE9QUElORywgbmV3U3RhdGU9RklOSVNIRUR9CjIwMjMtMDQtMTFUMDI6MDM6MTcuNjEzWiBbSU5GT10gKFRocmVhZC0xKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5LZXJuZWw6IGVmZmVjdGl2ZS1jb25maWctZHVtcC1jb21wbGV0ZS4ge2ZpbGU9L3Rlc3QvZ3JlZW5ncmFzcy92Mi9jb25maWcvZWZmZWN0aXZlQ29uZmlnLnlhbWx9CjIwMjMtMDQtMTFUMDI6MDM6MTcuNjE2WiBbSU5GT10gKFNlcmlhbGl6ZWQgbGlzdGVuZXIgcHJvY2Vzc29yKSBjb20uYXdzLmdyZWVuZ3Jhc3MubGlmZWN5Y2xlbWFuYWdlci5LZXJuZWxMaWZlY3ljbGU6IGV4ZWN1dG9yLXNlcnZpY2Utc2h1dGRvd24taW5pdGlhdGVkLiB7fQoyMDIzLTA0LTExVDAyOjAzOjE3LjYxN1ogW1dBUk5dIChwb29sLTItdGhyZWFkLTE3KSBjb20uYXdzLmdyZWVuZ3Jhc3MubXF0dGNsaWVudC5NcXR0Q2xpZW50OiBTaHV0dGluZyBkb3duIHNwb29sZXIgdGFzay4ge30KMjAyMy0wNC0xMVQwMjowMzoxNy42MThaIFtJTkZPXSAoVGhyZWFkLTEpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLktlcm5lbExpZmVjeWNsZTogV2FpdGluZyBmb3IgZXhlY3V0b3JzIHRvIHNodXRkb3duLiB7fQoyMDIzLTA0LTExVDAyOjAzOjE3LjYxOVogW0lORk9dIChUaHJlYWQtMSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuS2VybmVsTGlmZWN5Y2xlOiBleGVjdXRvci1zZXJ2aWNlLXNodXRkb3duLWNvbXBsZXRlLiB7ZXhlY3V0b3ItdGVybWluYXRlZD10cnVlLCBzY2hlZHVsZWQtZXhlY3V0b3ItdGVybWluYXRlZD10cnVlfQoyMDIzLTA0LTExVDAyOjAzOjE3LjYyMVogW0lORk9dIChUaHJlYWQtMSkgY29tLmF3cy5ncmVlbmdyYXNzLmxpZmVjeWNsZW1hbmFnZXIuS2VybmVsTGlmZWN5Y2xlOiBjb250ZXh0LXNodXRkb3duLWluaXRpYXRlZC4ge30KMjAyMy0wNC0xMVQwMjowMzoxNy42MzBaIFtJTkZPXSAoVGhyZWFkLTEpIGNvbS5hd3MuZ3JlZW5ncmFzcy5saWZlY3ljbGVtYW5hZ2VyLktlcm5lbExpZmVjeWNsZTogY29udGV4dC1zaHV0ZG93bi1jb21wbGV0ZS4ge30K",
                "mime_type": "text/plain",
                "name": "greengrass.log"
              },
              {
                "data": "MjAyMy0wNC0xMVQwMjowMTozMC43MjJaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xMykgYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXI6IHNoZWxsLXJ1bm5lci1zdGFydC4ge3NjcmlwdE5hbWU9c2VydmljZXMuYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIubGlmZWN5Y2xlLlJ1biwgc2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIsIGN1cnJlbnRTdGF0ZT1TVEFSVElORywgY29tbWFuZD1bImphdmEgLURpcGMub3BlcmF0aW9uPVx1MDAyMm1xdHRQdWJzdWJcdTAwMjIgLURjb21wb25lbnROYW1lPVx1MDAyMklvdE1xdHRTdWJzY3JpYmVyXHUwMDIyIC1qYXIgIC90Li4uIl19CjIwMjMtMDQtMTFUMDI6MDE6MzIuMjE5WiBbV0FSTl0gKENvcGllcikgYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXI6IHN0ZGVyci4gQXByIDExLCAyMDIzIDI6MDE6MzEgQU0gc29mdHdhcmUuYW1hem9uLmF3c3Nkay5ldmVudHN0cmVhbXJwYy5FdmVudFN0cmVhbVJQQ0Nvbm5lY3Rpb24kMSBvbkNvbm5lY3Rpb25TZXR1cC4ge3NjcmlwdE5hbWU9c2VydmljZXMuYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIubGlmZWN5Y2xlLlJ1biwgc2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTExVDAyOjAxOjMyLjIyMFogW1dBUk5dIChDb3BpZXIpIGF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyOiBzdGRlcnIuIElORk86IFNvY2tldCBjb25uZWN0aW9uIC90ZXN0L2dyZWVuZ3Jhc3MvdjIvaXBjLnNvY2tldDo4MDMzIHRvIHNlcnZlciByZXN1bHQgW0FXU19FUlJPUl9TVUNDRVNTXS4ge3NjcmlwdE5hbWU9c2VydmljZXMuYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIubGlmZWN5Y2xlLlJ1biwgc2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTExVDAyOjAxOjMyLjcxNlogW1dBUk5dIChDb3BpZXIpIGF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyOiBzdGRlcnIuIEFwciAxMSwgMjAyMyAyOjAxOjMyIEFNIHNvZnR3YXJlLmFtYXpvbi5hd3NzZGsuZXZlbnRzdHJlYW1ycGMuRXZlbnRTdHJlYW1SUENDb25uZWN0aW9uJDEgb25Qcm90b2NvbE1lc3NhZ2UuIHtzY3JpcHROYW1lPXNlcnZpY2VzLmF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLmxpZmVjeWNsZS5SdW4sIHNlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLCBjdXJyZW50U3RhdGU9UlVOTklOR30KMjAyMy0wNC0xMVQwMjowMTozMi43MTdaIFtXQVJOXSAoQ29waWVyKSBhd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0U3Vic2NyaWJlcjogc3RkZXJyLiBJTkZPOiBDb25uZWN0aW9uIGVzdGFibGlzaGVkIHdpdGggZXZlbnQgc3RyZWFtIFJQQyBzZXJ2ZXIuIHtzY3JpcHROYW1lPXNlcnZpY2VzLmF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLmxpZmVjeWNsZS5SdW4sIHNlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLCBjdXJyZW50U3RhdGU9UlVOTklOR30KMjAyMy0wNC0xMVQwMjowMTozMi43MTlaIFtJTkZPXSAoQ29waWVyKSBhd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0U3Vic2NyaWJlcjogc3Rkb3V0LiBDb25uZWN0ZWQgdG8gSVBDLi4ge3NjcmlwdE5hbWU9c2VydmljZXMuYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIubGlmZWN5Y2xlLlJ1biwgc2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTExVDAyOjAxOjQyLjQ2OVogW0lORk9dIChDb3BpZXIpIGF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyOiBzdGRvdXQuIFN1YnNjcmliZWQgdG8gSW9UIHRvcGljIGlkdC9NcXR0L1Rlc3Qgd2l0aCBRT1M9QVRfTEVBU1RfT05DRS4ge3NjcmlwdE5hbWU9c2VydmljZXMuYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIubGlmZWN5Y2xlLlJ1biwgc2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTExVDAyOjAxOjQyLjQ5NVogW0lORk9dIChDb3BpZXIpIGF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyOiBzdGRvdXQuIFdhaXRpbmcgMzAgc2Vjb25kcyBmb3IgbWVzc2FnZXMuIHtzY3JpcHROYW1lPXNlcnZpY2VzLmF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLmxpZmVjeWNsZS5SdW4sIHNlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLCBjdXJyZW50U3RhdGU9UlVOTklOR30KMjAyMy0wNC0xMVQwMjowMTo0My4zOTRaIFtJTkZPXSAoQ29waWVyKSBhd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0U3Vic2NyaWJlcjogc3Rkb3V0LiBNZXNzYWdlIHJlY2VpdmVkLiBtZXNzYWdlPXRlc3QgbWVzc2FnZSwgZXhwZWN0ZWRNZXNzYWdlPXRlc3QgbWVzc2FnZS4ge3NjcmlwdE5hbWU9c2VydmljZXMuYXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIubGlmZWN5Y2xlLlJ1biwgc2VydmljZU5hbWU9YXdzLmdyZWVuZ3Jhc3MuSW90TXF0dFN1YnNjcmliZXIsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTExVDAyOjAxOjQzLjM5NVogW0lORk9dIChDb3BpZXIpIGF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyOiBzdGRvdXQuIFdhaXRpbmcgMzAgc2Vjb25kcyBmb3IgbWVzc2FnZXMuIHtzY3JpcHROYW1lPXNlcnZpY2VzLmF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLmxpZmVjeWNsZS5SdW4sIHNlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLCBjdXJyZW50U3RhdGU9UlVOTklOR30KMjAyMy0wNC0xMVQwMjowMjowNy42MTJaIFtJTkZPXSAoQ29waWVyKSBhd3MuZ3JlZW5ncmFzcy5Jb3RNcXR0U3Vic2NyaWJlcjogUnVuIHNjcmlwdCBleGl0ZWQuIHtleGl0Q29kZT0xMzcsIHNlcnZpY2VOYW1lPWF3cy5ncmVlbmdyYXNzLklvdE1xdHRTdWJzY3JpYmVyLCBjdXJyZW50U3RhdGU9U1RPUFBJTkd9Cg\u003d\u003d",
                "mime_type": "text/plain",
                "name": "aws.greengrass.IotMqttSubscriber.log"
              },
              {
                "data": "MjAyMy0wNC0xMVQwMjowMDo1MS4xNDBaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0zNikgaWR0LWdndjItbGFtYmRhLWZ1bmN0aW9uLWlkdC04NDQxNTMxMzYxMjkyOTAxNzkyOiBzaGVsbC1ydW5uZXItc3RhcnQuIHtzY3JpcHROYW1lPXNlcnZpY2VzLmlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODQ0MTUzMTM2MTI5MjkwMTc5Mi5saWZlY3ljbGUuc2h1dGRvd24uc2NyaXB0LCBzZXJ2aWNlSW5zdGFuY2U9MSwgc2VydmljZU5hbWU9aWR0LWdndjItbGFtYmRhLWZ1bmN0aW9uLWlkdC04NDQxNTMxMzYxMjkyOTAxNzkyLCBjdXJyZW50U3RhdGU9U1RPUFBJTkcsIGNvbW1hbmQ9WyIvdGVzdC9ncmVlbmdyYXNzL3YyL3BhY2thZ2VzL2FydGlmYWN0cy9hd3MuZ3JlZW5ncmFzcy5MYW1iZGFMYXVuY2hlci8yLjAuMTAvbGEuLi4iXX0KMjAyMy0wNC0xMVQwMjowMDo1MS4yNzFaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0yNSkgaWR0LWdndjItbGFtYmRhLWZ1bmN0aW9uLWlkdC04NDQxNTMxMzYxMjkyOTAxNzkyOiBTaHV0ZG93biBob29rIGZvciBqYXZhIHJ1bnRpbWUgaW52b2tlZC4gVGVybWluYXRpbmcgamF2YSBydW50aW1lLiB7c2VydmljZUluc3RhbmNlPTEsIHNlcnZpY2VOYW1lPWlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODQ0MTUzMTM2MTI5MjkwMTc5MiwgY3VycmVudFN0YXRlPVNUT1BQSU5HfQo\u003d",
                "mime_type": "text/plain",
                "name": "idt-ggv2-lambda-function-idt-8441531361292901792.log"
              },
              {
                "data": "MjAyMy0wNC0xMVQwMTo1Njo0OS4wODRaIFtJTkZPXSAocG9vbC0yLXRocmVhZC0xNykgaWR0LWdndjItbGFtYmRhLWZ1bmN0aW9uLWlkdC04NDQxNTMxMzYxMjkyOTAxNzkyOiBzaGVsbC1ydW5uZXItc3RhcnQuIHtzY3JpcHROYW1lPXNlcnZpY2VzLmlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODQ0MTUzMTM2MTI5MjkwMTc5Mi5saWZlY3ljbGUuc3RhcnR1cC5zY3JpcHQsIHNlcnZpY2VJbnN0YW5jZT0xLCBzZXJ2aWNlTmFtZT1pZHQtZ2d2Mi1sYW1iZGEtZnVuY3Rpb24taWR0LTg0NDE1MzEzNjEyOTI5MDE3OTIsIGN1cnJlbnRTdGF0ZT1TVEFSVElORywgY29tbWFuZD1bIi90ZXN0L2dyZWVuZ3Jhc3MvdjIvcGFja2FnZXMvYXJ0aWZhY3RzL2F3cy5ncmVlbmdyYXNzLkxhbWJkYUxhdW5jaGVyLzIuMC4xMC9sYS4uLiJdfQoyMDIzLTA0LTExVDAxOjU2OjQ5LjE5OFogW0lORk9dIChDb3BpZXIpIGlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODQ0MTUzMTM2MTI5MjkwMTc5Mjogc3Rkb3V0LiBTdGFydGVkIHByb2Nlc3M6IDk3Njc2LiB7c2NyaXB0TmFtZT1zZXJ2aWNlcy5pZHQtZ2d2Mi1sYW1iZGEtZnVuY3Rpb24taWR0LTg0NDE1MzEzNjEyOTI5MDE3OTIubGlmZWN5Y2xlLnN0YXJ0dXAuc2NyaXB0LCBzZXJ2aWNlSW5zdGFuY2U9MSwgc2VydmljZU5hbWU9aWR0LWdndjItbGFtYmRhLWZ1bmN0aW9uLWlkdC04NDQxNTMxMzYxMjkyOTAxNzkyLCBjdXJyZW50U3RhdGU9U1RBUlRJTkd9CjIwMjMtMDQtMTFUMDE6NTY6NDkuMjA1WiBbSU5GT10gKENvcGllcikgaWR0LWdndjItbGFtYmRhLWZ1bmN0aW9uLWlkdC04NDQxNTMxMzYxMjkyOTAxNzkyOiBTdGFydHVwIHNjcmlwdCBleGl0ZWQuIHtleGl0Q29kZT0wLCBzZXJ2aWNlSW5zdGFuY2U9MSwgc2VydmljZU5hbWU9aWR0LWdndjItbGFtYmRhLWZ1bmN0aW9uLWlkdC04NDQxNTMxMzYxMjkyOTAxNzkyLCBjdXJyZW50U3RhdGU9U1RBUlRJTkd9CjIwMjMtMDQtMTFUMDE6NTY6NTEuOTUyWiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMjUpIGlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODQ0MTUzMTM2MTI5MjkwMTc5MjogSWR0UXVhbGlmaWNhdGlvbkxhbWJkYSBsb2FkZWQuLi4uLiB7c2VydmljZUluc3RhbmNlPTEsIHNlcnZpY2VOYW1lPWlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODQ0MTUzMTM2MTI5MjkwMTc5MiwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDQtMTFUMDE6NTY6NTIuOTQ0WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMjUpIGlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODQ0MTUzMTM2MTI5MjkwMTc5MjogSWR0UXVhbGlmaWNhdGlvbkxhbWJkYSBMYW1iZGEgVHJpZ2dlcmVkLiB7c2VydmljZUluc3RhbmNlPTEsIHNlcnZpY2VOYW1lPWlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODQ0MTUzMTM2MTI5MjkwMTc5MiwgY3VycmVudFN0YXRlPVJVTk5JTkd9CjIwMjMtMDQtMTFUMDE6NTY6NTIuOTQ1WiBbSU5GT10gKHBvb2wtMi10aHJlYWQtMjUpIGlkdC1nZ3YyLWxhbWJkYS1mdW5jdGlvbi1pZHQtODQ0MTUzMTM2MTI5MjkwMTc5MjogSWR0UXVhbGlmaWNhdGlvbkxhbWJkYSByZWNlaXZlZCBldmVudCB7TGFtYmRhSW5wdXRJbnRGaWVsZD0xMCwgcGF5bG9hZD1sYW1iZGEtcXVhbGlmaWNhdGlvbi1wYXlsb2FkfS4ge3NlcnZpY2VJbnN0YW5jZT0xLCBzZXJ2aWNlTmFtZT1pZHQtZ2d2Mi1sYW1iZGEtZnVuY3Rpb24taWR0LTg0NDE1MzEzNjEyOTI5MDE3OTIsIGN1cnJlbnRTdGF0ZT1SVU5OSU5HfQoyMDIzLTA0LTExVDAxOjU2OjUyLjk0NlogW0lORk9dIChwb29sLTItdGhyZWFkLTI1KSBpZHQtZ2d2Mi1sYW1iZGEtZnVuY3Rpb24taWR0LTg0NDE1MzEzNjEyOTI5MDE3OTI6IElkdFF1YWxpZmljYXRpb25MYW1iZGEgcmVjZWl2ZWQgZXZlbnQgUGF5bG9hZCA6IGxhbWJkYS1xdWFsaWZpY2F0aW9uLXBheWxvYWQuIHtzZXJ2aWNlSW5zdGFuY2U9MSwgc2VydmljZU5hbWU9aWR0LWdndjItbGFtYmRhLWZ1bmN0aW9uLWlkdC04NDQxNTMxMzYxMjkyOTAxNzkyLCBjdXJyZW50U3RhdGU9UlVOTklOR30K",
                "mime_type": "text/plain",
                "name": "idt-ggv2-lambda-function-idt-8441531361292901792_2023_04_11_01_0.log"
              },
              {
                "data": "",
                "mime_type": "text/plain",
                "name": "aws.greengrass.Nucleus.log"
              }
            ],
            "result": {
              "duration": 20552000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.FileSteps.copyLogs(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 2744000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.AWSResourcesSteps.close()"
            }
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.DockerSteps.removeCreatedImages()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.aws.greengrass.testing.features.LoggerSteps.clearContext(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 59074000000,
              "status": "passed"
            },
            "line": 9,
            "name": "I create a Greengrass deployment with components",
            "match": {
              "location": "com.aws.greengrass.testing.features.DeploymentSteps.createDeployment(java.util.List\u003cjava.util.List\u003cjava.lang.String\u003e\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "aws.greengrass.IotMqttPublisher",
                  "classpath:/greengrass/components/recipes/iot_mqtt_subscriber.yaml"
                ]
              },
              {
                "cells": [
                  "aws.greengrass.IotMqttSubscriber",
                  "classpath:/greengrass/components/recipes/iot_mqtt_publisher.yaml"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 524000000,
              "status": "passed"
            },
            "line": 12,
            "name": "I deploy the Greengrass deployment configuration",
            "match": {
              "location": "com.aws.greengrass.testing.features.DeploymentSteps.startDeployment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 193343000000,
              "status": "passed"
            },
            "line": 13,
            "name": "the Greengrass deployment is COMPLETED on the device after 300 seconds",
            "match": {
              "arguments": [
                {
                  "val": "COMPLETED",
                  "offset": 29
                },
                {
                  "val": "300",
                  "offset": 59
                },
                {
                  "val": "seconds",
                  "offset": 63
                }
              ],
              "location": "com.aws.greengrass.testing.features.DeploymentSteps.deploymentSucceeds(java.lang.String,int,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2705000000,
              "status": "passed"
            },
            "line": 14,
            "name": "the aws.greengrass.IotMqttSubscriber log on the device contains the line \"Subscribed to IoT topic idt/Mqtt/Test with QOS\u003dAT_LEAST_ONCE\" within 20 seconds",
            "match": {
              "arguments": [
                {
                  "val": "aws.greengrass.IotMqttSubscriber",
                  "offset": 4
                },
                {
                  "val": "\"Subscribed to IoT topic idt/Mqtt/Test with QOS\u003dAT_LEAST_ONCE\"",
                  "offset": 73
                },
                {
                  "val": "20",
                  "offset": 143
                },
                {
                  "val": "seconds",
                  "offset": 146
                }
              ],
              "location": "com.aws.greengrass.testing.features.FileSteps.logContains(java.lang.String,java.lang.String,int,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2675000000,
              "status": "passed"
            },
            "line": 15,
            "name": "the aws.greengrass.IotMqttPublisher log on the device contains the line \"Published to IoT topic idt/Mqtt/Test with payload test message and qos AT_LEAST_ONCE\" within 10 seconds",
            "match": {
              "arguments": [
                {
                  "val": "aws.greengrass.IotMqttPublisher",
                  "offset": 4
                },
                {
                  "val": "\"Published to IoT topic idt/Mqtt/Test with payload test message and qos AT_LEAST_ONCE\"",
                  "offset": 72
                },
                {
                  "val": "10",
                  "offset": 166
                },
                {
                  "val": "seconds",
                  "offset": 169
                }
              ],
              "location": "com.aws.greengrass.testing.features.FileSteps.logContains(java.lang.String,java.lang.String,int,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@MqttIotCore"
          },
          {
            "name": "@IDT"
          },
          {
            "name": "@OTFStable"
          }
        ]
      }
    ],
    "name": "Testing MQTT proxying in Greengrass",
    "description": "",
    "id": "testing-mqtt-proxying-in-greengrass",
    "keyword": "Feature",
    "uri": "classpath:greengrass/features/mqtt.feature",
    "tags": []
  }
]